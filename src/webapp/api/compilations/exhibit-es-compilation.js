

/* compile-prolog.js */
window.Exhibit_isCompiled=true;


/* exhibit-api.js */
(function(){var isCompiled=("Exhibit_isCompiled" in window)&&window.Exhibit_isCompiled;
var useLocalResources=false;
var noAuthentication=false;
if(document.location.search.length>0){var params=document.location.search.substr(1).split("&");
for(var i=0;
i<params.length;
i++){if(params[i]=="exhibit-use-local-resources"){useLocalResources=true;
}if(params[i]=="exhibit-no-authentication"){noAuthentication=true;
}}}var loadMe=function(){if(typeof window.Exhibit!="undefined"){return ;
}window.Exhibit={version:"2.2.0",loaded:false,params:{bundle:!useLocalResources,authenticated:!noAuthentication,autoCreate:true,safe:false},namespace:"http://simile.mit.edu/2006/11/exhibit#",importers:{},locales:["en"]};
var javascriptFiles=["exhibit.js","persistence.js","authentication.js","util/set.js","util/util.js","util/settings.js","util/views.js","util/facets.js","util/coders.js","data/database.js","data/expression.js","data/expression-parser.js","data/functions.js","data/controls.js","data/collection.js","data/importers/authenticated-importer.js","data/importers/exhibit-json-importer.js","data/importers/html-table-importer.js","data/importers/jsonp-importer.js","data/importers/babel-based-importer.js","data/importers/rdfa-importer.js","data/exporters/rdf-xml-exporter.js","data/exporters/semantic-wikitext-exporter.js","data/exporters/exhibit-json-exporter.js","data/exporters/tsv-exporter.js","data/exporters/bibtex-exporter.js","data/exporters/facet-selection-exporter.js","ui/ui.js","ui/ui-context.js","ui/lens.js","ui/format-parser.js","ui/formatter.js","ui/coordinator.js","ui/facets/list-facet.js","ui/facets/numeric-range-facet.js","ui/facets/text-search-facet.js","ui/facets/cloud-facet.js","ui/facets/hierarchical-facet.js","ui/facets/image-facet.js","ui/facets/slider-facet.js","ui/facets/slider.js","ui/facets/alpha-range-facet.js","ui/coders/color-coder.js","ui/coders/default-color-coder.js","ui/coders/color-gradient-coder.js","ui/coders/size-coder.js","ui/coders/size-gradient-coder.js","ui/coders/icon-coder.js","ui/widgets/logo.js","ui/widgets/collection-summary-widget.js","ui/widgets/resizable-div-widget.js","ui/widgets/legend-widget.js","ui/widgets/legend-gradient-widget.js","ui/widgets/option-widget.js","ui/widgets/toolbox-widget.js","ui/views/view-panel.js","ui/views/ordered-view-frame.js","ui/views/tile-view.js","ui/views/thumbnail-view.js","ui/views/tabular-view.js","ui/views/html-view.js"];
var cssFiles=["exhibit.css","browse-panel.css","lens.css","util/facets.css","util/views.css","widgets/collection-summary-widget.css","widgets/resizable-div-widget.css","widgets/legend-widget.css","widgets/option-widget.css","widgets/toolbox-widget.css","views/view-panel.css","views/tile-view.css","views/thumbnail-view.css","views/tabular-view.css"];
var includeMap=false;
var includeTimeline=false;
var defaultClientLocales=("language" in navigator?navigator.language:navigator.browserLanguage).split(";");
for(var l=0;
l<defaultClientLocales.length;
l++){var locale=defaultClientLocales[l];
if(locale!="en"){var segments=locale.split("-");
if(segments.length>1&&segments[0]!="en"){Exhibit.locales.push(segments[0]);
}Exhibit.locales.push(locale);
}}var paramTypes={bundle:Boolean,js:Array,css:Array,autoCreate:Boolean,safe:Boolean};
if(typeof Exhibit_urlPrefix=="string"){Exhibit.urlPrefix=Exhibit_urlPrefix;
if("Exhibit_parameters" in window){SimileAjax.parseURLParameters(Exhibit_parameters,Exhibit.params,paramTypes);
}}else{var url=SimileAjax.findScript(document,"/exhibit-api.js");
if(url==null){Exhibit.error=new Error("Failed to derive URL prefix for Simile Exhibit API code files");
return ;
}Exhibit.urlPrefix=url.substr(0,url.indexOf("exhibit-api.js"));
SimileAjax.parseURLParameters(url,Exhibit.params,paramTypes);
}if(useLocalResources){Exhibit.urlPrefix="http://127.0.0.1:8888/exhibit/api/";
}if(Exhibit.params.locale){if(Exhibit.params.locale!="en"){var segments=Exhibit.params.locale.split("-");
if(segments.length>1&&segments[0]!="en"){Exhibit.locales.push(segments[0]);
}Exhibit.locales.push(Exhibit.params.locale);
}}if(Exhibit.params.gmapkey){includeMap=true;
}if(Exhibit.params.views){var views=Exhibit.params.views.split(",");
for(var j=0;
j<views.length;
j++){var view=views[j];
if(view=="timeline"){includeTimeline=true;
}else{if(view=="map"){includeMap=true;
}}}}var scriptURLs=Exhibit.params.js||[];
var cssURLs=Exhibit.params.css||[];
if(Exhibit.params.bundle){scriptURLs.push(Exhibit.urlPrefix+"exhibit-bundle.js");
cssURLs.push(Exhibit.urlPrefix+"exhibit-bundle.css");
}else{SimileAjax.prefixURLs(scriptURLs,Exhibit.urlPrefix+"scripts/",javascriptFiles);
SimileAjax.prefixURLs(cssURLs,Exhibit.urlPrefix+"styles/",cssFiles);
}for(var i=0;
i<Exhibit.locales.length;
i++){scriptURLs.push(Exhibit.urlPrefix+"locales/"+Exhibit.locales[i]+"/locale.js");
}if(Exhibit.params.callback){window.SimileAjax_onLoad=function(){eval(Exhibit.params.callback+"()");
};
}else{if(Exhibit.params.autoCreate){scriptURLs.push(Exhibit.urlPrefix+"scripts/create.js");
}}if(includeTimeline){scriptURLs.push(Exhibit.urlPrefix+"extensions/time/time-extension.js");
}if(includeMap){scriptURLs.push(Exhibit.urlPrefix+"extensions/map/map-extension.js");
}if(!isCompiled){SimileAjax.includeJavascriptFiles(document,"",scriptURLs);
SimileAjax.includeCssFiles(document,"",cssURLs);
}Exhibit.loaded=true;
};
if(typeof SimileAjax=="undefined"&&!isCompiled){window.SimileAjax_onLoad=loadMe;
var url=useLocalResources?"http://127.0.0.1:8888/ajax/api/simile-ajax-api.js?bundle=false":"http://api.simile-widgets.org/ajax/2.2.1/simile-ajax-api.js";
var createScriptElement=function(){var script=document.createElement("script");
script.type="text/javascript";
script.language="JavaScript";
script.src=url;
document.getElementsByTagName("head")[0].appendChild(script);
};
if(document.body==null){try{document.write("<script src='"+url+"' type='text/javascript'><\/script>");
}catch(e){createScriptElement();
}}else{createScriptElement();
}}else{loadMe();
}})();


/* exhibit-bundle.js */
Exhibit.Authentication={};
Exhibit.Authentication.Enabled=false;
Exhibit.Authentication.GoogleToken=null;
Exhibit.Authentication.GoogleSessionToken=null;
Exhibit.Authentication.authenticate=function(){if(!window.Exhibit.params.authenticated){return ;
}var D=document.getElementsByTagName("head")[0].childNodes;
for(var F=0;
F<D.length;
F++){var E=D[F];
if(E.rel=="exhibit/output"&&E.getAttribute("ex:authenticated")){Exhibit.Authentication.handleGoogleAuthentication();
return ;
}}};
Exhibit.Authentication.parseLocationParams=function(){var G=document.location.search.substr(1).split("&");
var F={};
for(var J=0;
J<G.length;
J++){var H=G[J];
if(H.indexOf("=")!=-1){var I=H.split("=");
if(I.length!=2){SimileAjax.Debug.warn("Error parsing location parameter "+H);
}else{F[I[0]]=I[1];
}}else{F[H]=true;
}}return F;
};
Exhibit.Authentication.GoogleAuthenticationURL="https://www.google.com/accounts/AuthSubRequest";
Exhibit.Authentication.handleGoogleAuthentication=function(){var D=Exhibit.Authentication.parseLocationParams();
if(D.token){Exhibit.Authentication.GoogleToken=D.token;
Exhibit.Authentication.Enabled=true;
}else{var C=Exhibit.Authentication.GoogleAuthenticationURL;
C+="?session=1";
C+="&scope=http://spreadsheets.google.com/feeds/";
C+="&next="+document.location.href;
document.location.href=C;
}};
Exhibit.Collection=function(D,C){this._id=D;
this._database=C;
this._listeners=new SimileAjax.ListenerQueue();
this._facets=[];
this._updating=false;
this._items=null;
this._restrictedItems=null;
};
Exhibit.Collection.createAllItemsCollection=function(E,D){var F=new Exhibit.Collection(E,D);
F._update=Exhibit.Collection._allItemsCollection_update;
Exhibit.Collection._initializeBasicCollection(F,D);
return F;
};
Exhibit.Collection.createSubmissionsCollection=function(E,D){var F=new Exhibit.Collection(E,D);
F._update=Exhibit.Collection._submissionCollection_update;
Exhibit.Collection._initializeBasicCollection(F,D);
return F;
};
Exhibit.Collection.create=function(F,G,E){var H=new Exhibit.Collection(F,E);
if("itemTypes" in G){H._itemTypes=G.itemTypes;
H._update=Exhibit.Collection._typeBasedCollection_update;
}else{H._update=Exhibit.Collection._allItemsCollection_update;
}Exhibit.Collection._initializeBasicCollection(H,E);
return H;
};
Exhibit.Collection.createFromDOM=function(G,F,I){var H=new Exhibit.Collection(G,I);
var J=Exhibit.getAttribute(F,"itemTypes",",");
if(J!=null&&J.length>0){H._itemTypes=J;
H._update=Exhibit.Collection._typeBasedCollection_update;
}else{H._update=Exhibit.Collection._allItemsCollection_update;
}Exhibit.Collection._initializeBasicCollection(H,I);
return H;
};
Exhibit.Collection.create2=function(G,H,F){var J=F.getDatabase();
if("expression" in H){var I=new Exhibit.Collection(G,J);
I._expression=Exhibit.ExpressionParser.parse(H.expression);
I._baseCollection=("baseCollectionID" in H)?F.getExhibit().getCollection(H.baseCollectionID):F.getCollection();
I._restrictBaseCollection=("restrictBaseCollection" in H)?H.restrictBaseCollection:false;
if(I._restrictBaseCollection){Exhibit.Collection._initializeRestrictingBasedCollection(I);
}else{Exhibit.Collection._initializeBasedCollection(I);
}return I;
}else{return Exhibit.Collection.create(G,H,J);
}};
Exhibit.Collection.createFromDOM2=function(I,M,H){var K=H.getDatabase();
var J;
if(Exhibit.getAttribute(M,"submissionsCollection")){return Exhibit.Collection.createSubmissionsCollection(I,K);
}var N=Exhibit.getAttribute(M,"expression");
if(N!=null&&N.length>0){J=new Exhibit.Collection(I,K);
J._expression=Exhibit.ExpressionParser.parse(N);
var L=Exhibit.getAttribute(M,"baseCollectionID");
J._baseCollection=(L!=null&&L.length>0)?H.getExhibit().getCollection(L):H.getCollection();
J._restrictBaseCollection=Exhibit.getAttribute(M,"restrictBaseCollection")=="true";
if(J._restrictBaseCollection){Exhibit.Collection._initializeRestrictingBasedCollection(J,K);
}else{Exhibit.Collection._initializeBasedCollection(J);
}}else{J=Exhibit.Collection.createFromDOM(I,M,K);
}return J;
};
Exhibit.Collection._initializeBasicCollection=function(F,D){var E=function(){F._update();
};
F._listener={onAfterLoadingItems:E,onAfterRemovingAllStatements:E};
D.addListener(F._listener);
F._update();
};
Exhibit.Collection._initializeBasedCollection=function(B){B._update=Exhibit.Collection._basedCollection_update;
B._listener={onItemsChanged:function(){B._update();
}};
B._baseCollection.addListener(B._listener);
B._update();
};
Exhibit.Collection._initializeRestrictingBasedCollection=function(D,C){D._cache=new Exhibit.FacetUtilities.Cache(C,D._baseCollection,D._expression);
D._isUpdatingBaseCollection=false;
D.onFacetUpdated=Exhibit.Collection._restrictingBasedCollection_onFacetUpdated;
D.restrict=Exhibit.Collection._restrictingBasedCollection_restrict;
D.update=Exhibit.Collection._restrictingBasedCollection_update;
D.hasRestrictions=Exhibit.Collection._restrictingBasedCollection_hasRestrictions;
D._baseCollection.addFacet(D);
};
Exhibit.Collection._allItemsCollection_update=function(){this.setItems(this._database.getAllItems());
this._onRootItemsChanged();
};
Exhibit.Collection._submissionCollection_update=function(){this.setItems(this._database.getAllSubmissions());
this._onRootItemsChanged();
};
Exhibit.Collection._typeBasedCollection_update=function(){var C=new Exhibit.Set();
for(var D=0;
D<this._itemTypes.length;
D++){this._database.getSubjects(this._itemTypes[D],"type",C);
}this.setItems(C);
this._onRootItemsChanged();
};
Exhibit.Collection._basedCollection_update=function(){this.setItems(this._expression.evaluate({"value":this._baseCollection.getRestrictedItems()},{"value":"item"},"value",this._database).values);
this._onRootItemsChanged();
};
Exhibit.Collection._restrictingBasedCollection_onFacetUpdated=function(B){if(!this._updating){Exhibit.Collection.prototype.onFacetUpdated.call(this,B);
this._isUpdatingBaseCollection=true;
this._baseCollection.onFacetUpdated(this);
this._isUpdatingBaseCollection=false;
}};
Exhibit.Collection._restrictingBasedCollection_restrict=function(B){if(this._restrictedItems.size()==this._items.size()){return B;
}return this._cache.getItemsFromValues(this._restrictedItems,B);
};
Exhibit.Collection._restrictingBasedCollection_update=function(B){if(!this._isUpdatingBaseCollection){this.setItems(this._cache.getValuesFromItems(B));
this._onRootItemsChanged();
}};
Exhibit.Collection._restrictingBasedCollection_hasRestrictions=function(){return(this._items!=null)&&(this._restrictedItems!=null)&&(this._restrictedItems.size()!=this._items.size());
};
Exhibit.Collection.prototype.getID=function(){return this._id;
};
Exhibit.Collection.prototype.dispose=function(){if("_baseCollection" in this){this._baseCollection.removeListener(this._listener);
this._baseCollection=null;
this._expression=null;
}else{this._database.removeListener(this._listener);
}this._database=null;
this._listener=null;
this._listeners=null;
this._items=null;
this._restrictedItems=null;
};
Exhibit.Collection.prototype.addListener=function(B){this._listeners.add(B);
};
Exhibit.Collection.prototype.removeListener=function(B){this._listeners.remove(B);
};
Exhibit.Collection.prototype.addFacet=function(B){this._facets.push(B);
if(B.hasRestrictions()){this._computeRestrictedItems();
this._updateFacets(null);
this._listeners.fire("onItemsChanged",[]);
}else{B.update(this.getRestrictedItems());
}};
Exhibit.Collection.prototype.removeFacet=function(D){for(var C=0;
C<this._facets.length;
C++){if(D==this._facets[C]){this._facets.splice(C,1);
if(D.hasRestrictions()){this._computeRestrictedItems();
this._updateFacets(null);
this._listeners.fire("onItemsChanged",[]);
}break;
}}};
Exhibit.Collection.prototype.clearAllRestrictions=function(){var D=[];
this._updating=true;
for(var C=0;
C<this._facets.length;
C++){D.push(this._facets[C].clearAllRestrictions());
}this._updating=false;
this.onFacetUpdated(null);
return D;
};
Exhibit.Collection.prototype.applyRestrictions=function(D){this._updating=true;
for(var C=0;
C<this._facets.length;
C++){this._facets[C].applyRestrictions(D[C]);
}this._updating=false;
this.onFacetUpdated(null);
};
Exhibit.Collection.prototype.getAllItems=function(){return new Exhibit.Set(this._items);
};
Exhibit.Collection.prototype.countAllItems=function(){return this._items.size();
};
Exhibit.Collection.prototype.getRestrictedItems=function(){return new Exhibit.Set(this._restrictedItems);
};
Exhibit.Collection.prototype.countRestrictedItems=function(){return this._restrictedItems.size();
};
Exhibit.Collection.prototype.onFacetUpdated=function(B){if(!this._updating){this._computeRestrictedItems();
this._updateFacets(B);
this._listeners.fire("onItemsChanged",[]);
}};
Exhibit.Collection.prototype._onRootItemsChanged=function(){this._listeners.fire("onRootItemsChanged",[]);
this._computeRestrictedItems();
this._updateFacets(null);
this._listeners.fire("onItemsChanged",[]);
};
Exhibit.Collection.prototype._updateFacets=function(J){var G=0;
for(var I=0;
I<this._facets.length;
I++){if(this._facets[I].hasRestrictions()){G++;
}}for(var I=0;
I<this._facets.length;
I++){var H=this._facets[I];
if(H.hasRestrictions()){if(G<=1){H.update(this.getAllItems());
}else{var L=this.getAllItems();
for(var K=0;
K<this._facets.length;
K++){if(I!=K){L=this._facets[K].restrict(L);
}}H.update(L);
}}else{H.update(this.getRestrictedItems());
}}};
Exhibit.Collection.prototype._computeRestrictedItems=function(){this._restrictedItems=this._items;
for(var C=0;
C<this._facets.length;
C++){var D=this._facets[C];
if(D.hasRestrictions()){this._restrictedItems=D.restrict(this._restrictedItems);
}}};
Exhibit.Collection.prototype.setItems=function(B){this._items=B;
};
Exhibit.Controls={};
Exhibit.Controls["if"]={f:function(L,N,M,I,K){var H=L[0].evaluate(N,M,I,K);
var J=false;
H.forEachValue(function(A){if(A){J=true;
return true;
}});
if(J){return L[1].evaluate(N,M,I,K);
}else{return L[2].evaluate(N,M,I,K);
}}};
Exhibit.Controls["foreach"]={f:function(R,P,O,M,Q){var T=R[0].evaluate(P,O,M,Q);
var N=P["value"];
var S=O["value"];
O["value"]=T.valueType;
var K=[];
var L="text";
T.forEachValue(function(B){P["value"]=B;
var A=R[1].evaluate(P,O,M,Q);
L=A.valueType;
A.forEachValue(function(C){K.push(C);
});
});
P["value"]=N;
O["value"]=S;
return new Exhibit.Expression._Collection(K,L);
}};
Exhibit.Controls["default"]={f:function(M,H,N,I,K){for(var L=0;
L<M.length;
L++){var J=M[L].evaluate(H,N,I,K);
if(J.size>0){return J;
}}return new Exhibit.Expression._Collection([],"text");
}};
Exhibit.Controls["filter"]={f:function(Q,O,N,L,P){var J=Q[0].evaluate(O,N,L,P);
var M=O["value"];
var R=N["value"];
var K=new Exhibit.Set();
N["value"]=J.valueType;
J.forEachValue(function(B){O["value"]=B;
var A=Q[1].evaluate(O,N,L,P);
if(A.size>0&&A.contains("true")){K.add(B);
}});
O["value"]=M;
N["value"]=R;
return new Exhibit.Expression._Collection(K,J.valueType);
}};
Exhibit.Database=new Object();
Exhibit.Database.create=function(){Exhibit.Database.handleAuthentication();
return new Exhibit.Database._Impl();
};
Exhibit.Database.handleAuthentication=function(){if(window.Exhibit.params.authenticated){var D=document.getElementsByTagName("head")[0].childNodes;
for(var F=0;
F<D.length;
F++){var E=D[F];
if(E.rel=="exhibit/output"&&E.getAttribute("ex:authenticated")){}}}};
Exhibit.Database.makeISO8601DateString=function(D){D=D||new Date();
var E=function(A){return A>9?A.toString():"0"+A;
};
var F=D.getFullYear()+"-"+E(D.getMonth()+1)+"-"+E(D.getDate());
return F;
};
Exhibit.Database.TimestampPropertyName="addedOn";
Exhibit.Database._Impl=function(){this._types={};
this._properties={};
this._propertyArray={};
this._submissionRegistry={};
this._originalValues={};
this._newItems={};
this._listeners=new SimileAjax.ListenerQueue();
this._spo={};
this._ops={};
this._items=new Exhibit.Set();
var M=Exhibit.Database.l10n;
var K=new Exhibit.Database._Type("Item");
K._custom=Exhibit.Database.l10n.itemType;
this._types["Item"]=K;
var L=new Exhibit.Database._Property("label",this);
L._uri="http://www.w3.org/2000/01/rdf-schema#label";
L._valueType="text";
L._label=M.labelProperty.label;
L._pluralLabel=M.labelProperty.pluralLabel;
L._reverseLabel=M.labelProperty.reverseLabel;
L._reversePluralLabel=M.labelProperty.reversePluralLabel;
L._groupingLabel=M.labelProperty.groupingLabel;
L._reverseGroupingLabel=M.labelProperty.reverseGroupingLabel;
this._properties["label"]=L;
var J=new Exhibit.Database._Property("type");
J._uri="http://www.w3.org/1999/02/22-rdf-syntax-ns#type";
J._valueType="text";
J._label="type";
J._pluralLabel=M.typeProperty.label;
J._reverseLabel=M.typeProperty.reverseLabel;
J._reversePluralLabel=M.typeProperty.reversePluralLabel;
J._groupingLabel=M.typeProperty.groupingLabel;
J._reverseGroupingLabel=M.typeProperty.reverseGroupingLabel;
this._properties["type"]=J;
var O=new Exhibit.Database._Property("uri");
O._uri="http://simile.mit.edu/2006/11/exhibit#uri";
O._valueType="url";
O._label="URI";
O._pluralLabel="URIs";
O._reverseLabel="URI of";
O._reversePluralLabel="URIs of";
O._groupingLabel="URIs";
O._reverseGroupingLabel="things named by these URIs";
this._properties["uri"]=O;
var N=new Exhibit.Database._Property("change",this);
N._valueType="text";
N._label="change type";
N._pluralLabel="change types";
N._reverseLabel="change type of";
N._reversePluralLabel="change types of";
N._groupingLabel="change types";
N._reverseGroupingLabel="changes of this type";
this._properties["change"]=N;
var P=new Exhibit.Database._Property("changedItem",this);
P._valueType="text";
P._label="changed item";
P._pluralLabel="changed item";
P._groupingLabel="changed items";
this._properties["changedItem"]=P;
var I=new Exhibit.Database._Property(Exhibit.Database.ModifiedPropertyName,this);
I._valueType="text";
I._label="modified";
I._pluralLabel="modified";
I._groupingLabel="was modified";
this._properties["modified"]=I;
};
Exhibit.Database._Impl.prototype.createDatabase=function(){return Exhibit.Database.create();
};
Exhibit.Database._Impl.prototype.addListener=function(B){this._listeners.add(B);
};
Exhibit.Database._Impl.prototype.removeListener=function(B){this._listeners.remove(B);
};
Exhibit.Database._Impl.prototype.loadDataLinks=function(D){var C=SimileAjax.jQuery("head > link[rel=exhibit/data]").get();
this._loadLinks(C,this,D);
};
Exhibit.Database._Impl.prototype.loadLinks=function(C,D){this._loadLinks(C,this,D);
};
Exhibit.Database._Impl.prototype.loadSubmissionLinks=function(G){var H=this;
var F={loadData:function(B,A){if("types" in B){H.loadTypes(B.types,A);
}if("properties" in B){H.loadProperties(B.properties,A);
}if("items" in B){H._listeners.fire("onBeforeLoadingItems",[]);
B.items.forEach(function(D){var C=D.id||D.label;
var J=C+Math.floor(Math.random()*1000000);
H._submissionRegistry[J]=true;
D.id=J;
D.changedItem=C;
if(H.containsItem(C)){D.change="modification";
if(!D.type){D.type=H.getObject(C,"type");
}}else{D.change="addition";
}});
H.loadItems(B.items,A);
H._listeners.fire("onAfterLoadingItems",[]);
}}};
var E=SimileAjax.jQuery("head > link[rel=exhibit/submissions]").get();
this._loadLinks(E,F,G);
};
Exhibit.Database._Impl.prototype._loadLinks=function(E,G,H){E=[].concat(E);
var F=function(){while(E.length>0){var A=E.shift();
var C=A.type;
if(C==null||C.length==0){C="application/json";
}var B=Exhibit.importers[C];
if(B){B.load(A,G,F);
return ;
}else{SimileAjax.Debug.log("No importer for data of type "+C);
}}if(H!=null){H();
}};
F();
};
Exhibit.Database._Impl.prototype.loadData=function(C,D){if(typeof D=="undefined"){D=location.href;
}if("types" in C){this.loadTypes(C.types,D);
}if("properties" in C){this.loadProperties(C.properties,D);
}if("items" in C){this.loadItems(C.items,D);
}};
Exhibit.Database._Impl.prototype.loadTypes=function(O,J){this._listeners.fire("onBeforeLoadingTypes",[]);
try{var P=J.substr(J.length-1);
if(P=="#"){J=J.substr(0,J.length-1)+"/";
}else{if(P!="/"&&P!=":"){J+="/";
}}for(var I in O){if(typeof I!="string"){continue;
}var M=O[I];
if(typeof M!="object"){continue;
}var N;
if(I in this._types){N=this._types[I];
}else{N=new Exhibit.Database._Type(I);
this._types[I]=N;
}for(var K in M){N._custom[K]=M[K];
}if(!("uri" in N._custom)){N._custom["uri"]=J+"type#"+encodeURIComponent(I);
}if(!("label" in N._custom)){N._custom["label"]=I;
}}this._listeners.fire("onAfterLoadingTypes",[]);
}catch(L){SimileAjax.Debug.exception(L,"Database.loadTypes failed");
}};
Exhibit.Database._Impl.prototype.loadProperties=function(J,I){this._listeners.fire("onBeforeLoadingProperties",[]);
try{var N=I.substr(I.length-1);
if(N=="#"){I=I.substr(0,I.length-1)+"/";
}else{if(N!="/"&&N!=":"){I+="/";
}}for(var K in J){if(typeof K!="string"){continue;
}var H=J[K];
if(typeof H!="object"){continue;
}var M;
if(K in this._properties){M=this._properties[K];
}else{M=new Exhibit.Database._Property(K,this);
this._properties[K]=M;
}M._uri=("uri" in H)?H.uri:(I+"property#"+encodeURIComponent(K));
M._valueType=("valueType" in H)?H.valueType:"text";
M._label=("label" in H)?H.label:K;
M._pluralLabel=("pluralLabel" in H)?H.pluralLabel:M._label;
M._reverseLabel=("reverseLabel" in H)?H.reverseLabel:("!"+M._label);
M._reversePluralLabel=("reversePluralLabel" in H)?H.reversePluralLabel:("!"+M._pluralLabel);
M._groupingLabel=("groupingLabel" in H)?H.groupingLabel:M._label;
M._reverseGroupingLabel=("reverseGroupingLabel" in H)?H.reverseGroupingLabel:M._reverseLabel;
if("origin" in H){M._origin=H.origin;
}}this._propertyArray=null;
this._listeners.fire("onAfterLoadingProperties",[]);
}catch(L){SimileAjax.Debug.exception(L,"Database.loadProperties failed");
}};
Exhibit.Database._Impl.prototype.loadItems=function(S,K){this._listeners.fire("onBeforeLoadingItems",[]);
try{var O=K.substr(K.length-1);
if(O=="#"){K=K.substr(0,K.length-1)+"/";
}else{if(O!="/"&&O!=":"){K+="/";
}}var L=this._spo;
var M=this._ops;
var N=Exhibit.Database._indexPut;
var Q=function(B,A,C){N(L,B,A,C);
N(M,C,A,B);
};
for(var T=0;
T<S.length;
T++){var P=S[T];
if(typeof P=="object"){this._loadItem(P,Q,K);
}}this._propertyArray=null;
this._listeners.fire("onAfterLoadingItems",[]);
}catch(R){SimileAjax.Debug.exception(R,"Database.loadItems failed");
}};
Exhibit.Database._Impl.prototype.getType=function(B){return this._types[B];
};
Exhibit.Database._Impl.prototype.getProperty=function(B){return B in this._properties?this._properties[B]:null;
};
Exhibit.Database._Impl.prototype.getAllProperties=function(){if(this._propertyArray==null){this._propertyArray=[];
for(var B in this._properties){this._propertyArray.push(B);
}}return[].concat(this._propertyArray);
};
Exhibit.Database._Impl.prototype.isSubmission=function(B){return B in this._submissionRegistry;
};
Exhibit.Database._Impl.prototype.getAllItems=function(){var D=new Exhibit.Set();
var C=this;
this._items.visit(function(A){if(!C.isSubmission(A)){D.add(A);
}});
return D;
};
Exhibit.Database._Impl.prototype.getAllSubmissions=function(){var H=new Exhibit.Set();
var E=this._items.toArray();
for(var G in E){var F=E[G];
if(this.isSubmission(F)){H.add(F);
}}return H;
};
Exhibit.Database._Impl.prototype.getAllItemsCount=function(){return this._items.size();
};
Exhibit.Database._Impl.prototype.containsItem=function(B){return this._items.contains(B);
};
Exhibit.Database._Impl.prototype.getNamespaces=function(U,V){var R={};
for(var S in this._properties){var T=this._properties[S];
var O=T.getURI();
var Y=O.indexOf("#");
if(Y>0){var Q=O.substr(0,Y+1);
R[Q]=true;
U[S]={base:Q,localName:O.substr(Y+1)};
continue;
}var a=O.lastIndexOf("/");
if(a>0){var Q=O.substr(0,a+1);
R[Q]=true;
U[S]={base:Q,localName:O.substr(a+1)};
continue;
}}var P={};
var W="abcdefghijklmnopqrstuvwxyz";
var Z=0;
for(var Q in R){var X=W.substr(Z++,1);
V[X]=Q;
P[Q]=X;
}for(var S in U){var b=U[S];
b.prefix=P[b.base];
}};
Exhibit.Database._Impl.prototype._loadItem=function(V,T,L){if(!("label" in V)&&!("id" in V)){SimileAjax.Debug.warn("Item entry has no label and no id: "+SimileAjax.JSON.toJSONString(V));
return ;
}var N;
if(!("label" in V)){N=V.id;
if(!this._items.contains(N)){SimileAjax.Debug.warn("Cannot add new item containing no label: "+SimileAjax.JSON.toJSONString(V));
}}else{var Q=V.label;
var N=("id" in V)?V.id:Q;
var M=("uri" in V)?V.uri:(L+"item#"+encodeURIComponent(N));
var R=("type" in V)?V.type:"Item";
var S=function(A){if(A.constructor.toString().indexOf("Array")==-1){return false;
}else{return true;
}};
if(S(Q)){Q=Q[0];
}if(S(N)){N=N[0];
}if(S(M)){M=M[0];
}if(S(R)){R=R[0];
}this._items.add(N);
T(N,"uri",M);
T(N,"label",Q);
T(N,"type",R);
this._ensureTypeExists(R,L);
}V.modified=V.modified||"no";
for(var O in V){if(typeof O!="string"){continue;
}if(O!="uri"&&O!="label"&&O!="id"&&O!="type"){this._ensurePropertyExists(O,L)._onNewData();
var P=V[O];
if(P instanceof Array){for(var U=0;
U<P.length;
U++){T(N,O,P[U]);
}}else{if(P!=undefined&&P!=null){T(N,O,P);
}}}}};
Exhibit.Database._Impl.prototype._ensureTypeExists=function(D,E){if(!(D in this._types)){var F=new Exhibit.Database._Type(D);
F._custom["uri"]=E+"type#"+encodeURIComponent(D);
F._custom["label"]=D;
this._types[D]=F;
}};
Exhibit.Database._Impl.prototype._ensurePropertyExists=function(F,E){if(!(F in this._properties)){var D=new Exhibit.Database._Property(F,this);
D._uri=E+"property#"+encodeURIComponent(F);
D._valueType="text";
D._label=F;
D._pluralLabel=D._label;
D._reverseLabel="reverse of "+D._label;
D._reversePluralLabel="reverse of "+D._pluralLabel;
D._groupingLabel=D._label;
D._reverseGroupingLabel=D._reverseLabel;
this._properties[F]=D;
this._propertyArray=null;
return D;
}else{return this._properties[F];
}};
Exhibit.Database._indexPut=function(N,H,I,K){var L=N[H];
if(!L){L={};
N[H]=L;
}var J=L[I];
if(!J){J=new Array();
L[I]=J;
}else{for(var M=0;
M<J.length;
M++){if(K==J[M]){return ;
}}}J.push(K);
};
Exhibit.Database._indexPutList=function(L,G,H,K){var J=L[G];
if(!J){J={};
L[G]=J;
}var I=J[H];
if(!I){J[H]=K;
}else{J[H]=J[H].concat(K);
}};
Exhibit.Database._indexRemove=function(P,I,J,L){function M(A){for(p in A){return false;
}return true;
}var N=P[I];
if(!N){return false;
}var K=N[J];
if(!K){return false;
}for(var O=0;
O<K.length;
O++){if(L==K[O]){K.splice(O,1);
if(K.length==0){delete N[J];
if(M(N)){delete P[I];
}}return true;
}}};
Exhibit.Database._indexRemoveList=function(J,F,G){var I=J[F];
if(!I){return null;
}var H=I[G];
if(!H){return null;
}delete I[G];
return H;
};
Exhibit.Database._Impl.prototype._indexFillSet=function(J,O,P,N,M){var L=J[O];
if(L){var R=L[P];
if(R){if(M){for(var K=0;
K<R.length;
K++){var Q=R[K];
if(M.contains(Q)){N.add(Q);
}}}else{for(var K=0;
K<R.length;
K++){N.add(R[K]);
}}}}};
Exhibit.Database._Impl.prototype._indexCountDistinct=function(P,I,J,N){var M=0;
var L=P[I];
if(L){var K=L[J];
if(K){if(N){for(var O=0;
O<K.length;
O++){if(N.contains(K[O])){M++;
}}}else{M=K.length;
}}}return M;
};
Exhibit.Database._Impl.prototype._get=function(J,F,G,H,I){if(!H){H=new Exhibit.Set();
}this._indexFillSet(J,F,G,H,I);
return H;
};
Exhibit.Database._Impl.prototype._getUnion=function(G,J,H,I,L){if(!I){I=new Exhibit.Set();
}var K=this;
J.visit(function(A){K._indexFillSet(G,A,H,I,L);
});
return I;
};
Exhibit.Database._Impl.prototype._countDistinctUnion=function(G,I,H,L){var K=0;
var J=this;
I.visit(function(A){K+=J._indexCountDistinct(G,A,H,L);
});
return K;
};
Exhibit.Database._Impl.prototype._countDistinct=function(H,E,F,G){return this._indexCountDistinct(H,E,F,G);
};
Exhibit.Database._Impl.prototype._getProperties=function(J,F){var G=J[F];
var I=[];
if(G){for(var H in G){I.push(H);
}}return I;
};
Exhibit.Database._Impl.prototype.getObjects=function(H,G,F,E){return this._get(this._spo,H,G,F,E);
};
Exhibit.Database._Impl.prototype.countDistinctObjects=function(F,E,D){return this._countDistinct(this._spo,F,E,D);
};
Exhibit.Database._Impl.prototype.getObjectsUnion=function(E,G,F,H){return this._getUnion(this._spo,E,G,F,H);
};
Exhibit.Database._Impl.prototype.countDistinctObjectsUnion=function(D,E,F){return this._countDistinctUnion(this._spo,D,E,F);
};
Exhibit.Database._Impl.prototype.getSubjects=function(G,H,F,E){return this._get(this._ops,G,H,F,E);
};
Exhibit.Database._Impl.prototype.countDistinctSubjects=function(E,F,D){return this._countDistinct(this._ops,E,F,D);
};
Exhibit.Database._Impl.prototype.getSubjectsUnion=function(H,G,F,E){return this._getUnion(this._ops,H,G,F,E);
};
Exhibit.Database._Impl.prototype.countDistinctSubjectsUnion=function(F,E,D){return this._countDistinctUnion(this._ops,F,E,D);
};
Exhibit.Database._Impl.prototype.getObject=function(E,G){var H=this._spo[E];
if(H){var F=H[G];
if(F){return F[0];
}}return null;
};
Exhibit.Database._Impl.prototype.getSubject=function(G,H){var E=this._ops[G];
if(E){var F=E[H];
if(F){return F[0];
}}return null;
};
Exhibit.Database._Impl.prototype.getForwardProperties=function(B){return this._getProperties(this._spo,B);
};
Exhibit.Database._Impl.prototype.getBackwardProperties=function(B){return this._getProperties(this._ops,B);
};
Exhibit.Database._Impl.prototype.getSubjectsInRange=function(K,N,O,P,J,M){var L=this.getProperty(K);
if(L!=null){var I=L.getRangeIndex();
if(I!=null){return I.getSubjectsInRange(N,O,P,J,M);
}}return(!J)?new Exhibit.Set():J;
};
Exhibit.Database._Impl.prototype.getTypeIDs=function(B){return this.getObjectsUnion(B,"type",null,null);
};
Exhibit.Database._Impl.prototype.addStatement=function(E,G,F){var H=Exhibit.Database._indexPut;
H(this._spo,E,G,F);
H(this._ops,F,G,E);
};
Exhibit.Database._Impl.prototype.removeStatement=function(L,K,I){var H=Exhibit.Database._indexRemove;
var J=H(this._spo,L,K,I);
var G=H(this._ops,I,K,L);
return J||G;
};
Exhibit.Database._Impl.prototype.removeObjects=function(L,J){var H=Exhibit.Database._indexRemove;
var I=Exhibit.Database._indexRemoveList;
var K=I(this._spo,L,J);
if(K==null){return false;
}else{for(var G=0;
G<K.length;
G++){H(this._ops,K[G],J,L);
}return true;
}};
Exhibit.Database._Impl.prototype.removeSubjects=function(I,K){var H=Exhibit.Database._indexRemove;
var J=Exhibit.Database._indexRemoveList;
var G=J(this._ops,I,K);
if(G==null){return false;
}else{for(var L=0;
L<G.length;
L++){H(this._spo,G[L],K,I);
}return true;
}};
Exhibit.Database._Impl.prototype.removeAllStatements=function(){this._listeners.fire("onBeforeRemovingAllStatements",[]);
try{this._spo={};
this._ops={};
this._items=new Exhibit.Set();
for(var D in this._properties){this._properties[D]._onNewData();
}this._propertyArray=null;
this._listeners.fire("onAfterRemovingAllStatements",[]);
}catch(C){SimileAjax.Debug.exception(C,"Database.removeAllStatements failed");
}};
Exhibit.Database._Type=function(B){this._id=B;
this._custom={};
};
Exhibit.Database._Type.prototype={getID:function(){return this._id;
},getURI:function(){return this._custom["uri"];
},getLabel:function(){return this._custom["label"];
},getOrigin:function(){return this._custom["origin"];
},getProperty:function(B){return this._custom[B];
}};
Exhibit.Database._Property=function(D,C){this._id=D;
this._database=C;
this._rangeIndex=null;
};
Exhibit.Database._Property.prototype={getID:function(){return this._id;
},getURI:function(){return this._uri;
},getValueType:function(){return this._valueType;
},getLabel:function(){return this._label;
},getPluralLabel:function(){return this._pluralLabel;
},getReverseLabel:function(){return this._reverseLabel;
},getReversePluralLabel:function(){return this._reversePluralLabel;
},getGroupingLabel:function(){return this._groupingLabel;
},getGroupingPluralLabel:function(){return this._groupingPluralLabel;
},getOrigin:function(){return this._origin;
}};
Exhibit.Database._Property.prototype._onNewData=function(){this._rangeIndex=null;
};
Exhibit.Database._Property.prototype.getRangeIndex=function(){if(this._rangeIndex==null){this._buildRangeIndex();
}return this._rangeIndex;
};
Exhibit.Database._Property.prototype._buildRangeIndex=function(){var D;
var F=this._database;
var E=this._id;
switch(this.getValueType()){case"currency":case"number":D=function(B,A){F.getObjects(B,E,null,null).visit(function(C){if(typeof C!="number"){C=parseFloat(C);
}if(!isNaN(C)){A(C);
}});
};
break;
case"date":D=function(B,A){F.getObjects(B,E,null,null).visit(function(C){if(C!=null&&!(C instanceof Date)){C=SimileAjax.DateTime.parseIso8601DateTime(C);
}if(C instanceof Date){A(C.getTime());
}});
};
break;
default:D=function(B,A){};
}this._rangeIndex=new Exhibit.Database._RangeIndex(this._database.getAllItems(),D);
};
Exhibit.Database._RangeIndex=function(D,C){pairs=[];
D.visit(function(A){C(A,function(B){pairs.push({item:A,value:B});
});
});
pairs.sort(function(B,F){var A=B.value-F.value;
return(isNaN(A)===false)?A:B.value.localeCompare(F.value);
});
this._pairs=pairs;
};
Exhibit.Database._RangeIndex.prototype.getCount=function(){return this._pairs.length;
};
Exhibit.Database._RangeIndex.prototype.getMin=function(){return this._pairs.length>0?this._pairs[0].value:Number.POSITIVE_INFINITY;
};
Exhibit.Database._RangeIndex.prototype.getMax=function(){return this._pairs.length>0?this._pairs[this._pairs.length-1].value:Number.NEGATIVE_INFINITY;
};
Exhibit.Database._RangeIndex.prototype.getRange=function(R,J,Q,P){var N=this._indexOf(J);
var M=this._pairs;
var L=M.length;
P=(P);
while(N<L){var K=M[N++];
var O=K.value;
if(O<Q||(O==Q&&P)){R(K.item);
}else{break;
}}};
Exhibit.Database._RangeIndex.prototype.getSubjectsInRange=function(K,L,G,H,J){if(!H){H=new Exhibit.Set();
}var I=(J!=null)?function(A){if(J.contains(A)){H.add(A);
}}:function(A){H.add(A);
};
this.getRange(I,K,L,G);
return H;
};
Exhibit.Database._RangeIndex.prototype.countRange=function(L,N,H){var I=this._indexOf(L);
var J=this._indexOf(N);
if(H){var K=this._pairs;
var M=K.length;
while(J<M){if(K[J].value==N){J++;
}else{break;
}}}return J-I;
};
Exhibit.Database._RangeIndex.prototype._indexOf=function(G){var K=this._pairs;
if(K.length==0||K[0].value>=G){return 0;
}var H=0;
var I=K.length;
while(H+1<I){var L=(H+I)>>1;
var J=K[L].value;
if(J>=G){I=L;
}else{H=L;
}}return I;
};
Exhibit.Database._Impl.prototype.isNewItem=function(B){return B in this._newItems;
};
Exhibit.Database._Impl.prototype.getItem=function(H){var K={id:H};
var L=this.getAllProperties();
for(var G in L){var I=L[G];
var J=this.getObject(H,I);
if(J){K[I]=J;
}}return K;
};
Exhibit.Database._Impl.prototype.addItem=function(B){if(!B.id){B.id=B.label;
}if(!B.modified){B.modified="yes";
}this._ensurePropertyExists(Exhibit.Database.TimestampPropertyName);
B[Exhibit.Database.TimestampPropertyName]=Exhibit.Database.makeISO8601DateString();
this.loadItems([B],"");
this._newItems[B.id]=true;
this._listeners.fire("onAfterLoadingItems",[]);
};
Exhibit.Database._Impl.prototype.editItem=function(H,I,K){if(I.toLowerCase()=="id"){Exhibit.UI.showHelp("We apologize, but changing the IDs of items in the Exhibit isn't supported at the moment.");
return ;
}var J=this.getObject(H,I);
this._originalValues[H]=this._originalValues[H]||{};
this._originalValues[H][I]=this._originalValues[H][I]||J;
var G=this._originalValues[H][I];
if(G==K){this.removeObjects(H,"modified");
this.addStatement(H,"modified","no");
delete this._originalValues[H][I];
}else{if(this.getObject(H,"modified")!="yes"){this.removeObjects(H,"modified");
this.addStatement(H,"modified","yes");
}}this.removeObjects(H,I);
this.addStatement(H,I,K);
var L=this._ensurePropertyExists(I);
L._onNewData();
this._listeners.fire("onAfterLoadingItems",[]);
};
Exhibit.Database._Impl.prototype.removeItem=function(F){if(!this.containsItem(F)){throw"Removing non-existent item "+F;
}this._items.remove(F);
delete this._spo[F];
if(this._newItems[F]){delete this._newItems[F];
}if(this._originalValues[F]){delete this._originalValues[F];
}var H=this.getAllProperties();
for(var E in H){var G=H[E];
this.removeObjects(F,G);
}this._listeners.fire("onAfterLoadingItems",[]);
};
Exhibit.Database.defaultIgnoredProperties=["uri","modified"];
Exhibit.Database._Impl.prototype.fixAllChanges=function(){this._originalValues={};
this._newItems={};
var D=this._items.toArray();
for(var F in D){var E=D[F];
this.removeObjects(E,"modified");
this.addStatement(E,"modified","no");
}};
Exhibit.Database._Impl.prototype.fixChangesForItem=function(B){delete this._originalValues[B];
delete this._newItems[B];
this.removeObjects(B,"modified");
this.addStatement(B,"modified","no");
};
Exhibit.Database._Impl.prototype.collectChangesForItem=function(P,Z){Z=Z||Exhibit.Database.defaultIgnoredProperties;
var V=this.getObject(P,"type");
var T=this.getObject(P,"label")||P;
var R={id:P,label:T,type:V,vals:{}};
if(P in this._newItems){R.changeType="added";
var W=this.getAllProperties();
for(var X in W){var Q=W[X];
if(Z.indexOf(Q)!=-1){continue;
}var N=this.getObject(P,Q);
if(N){R.vals[Q]={newVal:N};
}}}else{if(P in this._originalValues&&!this.isSubmission(P)){R.changeType="modified";
var U=this._originalValues[P];
var Y=false;
for(var Q in U){if(Z.indexOf(Q)!=-1){continue;
}Y=true;
var S=this._originalValues[P][Q];
var O=this.getObject(P,Q);
if(!O){SimileAjax.Debug.warn("empty value for "+P+", "+Q);
}else{R.vals[Q]={oldVal:S,newVal:O};
}}if(!Y){return null;
}}else{return null;
}}if(!R[Exhibit.Database.TimestampPropertyName]){R[Exhibit.Database.TimestampPropertyName]=Exhibit.Database.makeISO8601DateString();
}return R;
};
Exhibit.Database._Impl.prototype.collectAllChanges=function(I){var L=[];
var G=this._items.toArray();
for(var K in G){var H=G[K];
var J=this.collectChangesForItem(H,I);
if(J){L.push(J);
}}return L;
};
Exhibit.Database._Impl.prototype.mergeSubmissionIntoItem=function(I){var F=this;
if(!this.isSubmission(I)){throw I+" is not a submission!";
}var G=this.getObject(I,"change");
if(G=="modification"){var H=this.getObject(I,"changedItem");
var J=this._spo[I];
SimileAjax.jQuery.each(J,function(B,A){if(Exhibit.Database.defaultIgnoredSubmissionProperties.indexOf(B)!=-1){return ;
}if(A.length==1){F.editItem(H,B,A[0]);
}else{SimileAjax.Debug.warn("Exhibit.Database._Impl.prototype.commitChangeToItem cannot handle multiple values for attribute "+B+": "+A);
}});
delete this._submissionRegistry[I];
}else{if(G=="addition"){delete this._submissionRegistry[I];
this._newItems[I]=true;
}else{throw"unknown change type "+G;
}}this._listeners.fire("onAfterLoadingItems",[]);
};
Exhibit.BibtexExporter={getLabel:function(){return"Bibtex";
},_excludeProperties:{"pub-type":true,"type":true,"uri":true,"key":true}};
Exhibit.BibtexExporter.exportOne=function(D,C){return Exhibit.BibtexExporter._wrap(Exhibit.BibtexExporter._exportOne(D,C));
};
Exhibit.BibtexExporter.exportMany=function(E,F){var D="";
E.visit(function(A){D+=Exhibit.BibtexExporter._exportOne(A,F)+"\n";
});
return Exhibit.BibtexExporter._wrap(D);
};
Exhibit.BibtexExporter._exportOne=function(P,T){var Q="";
var M=T.getObject(P,"pub-type");
var S=T.getObject(P,"key");
S=(S!=null?S:P);
S=S.replace(/[\s,]/g,"-");
Q+="@"+M+"{"+S+",\n";
var X=T.getAllProperties();
for(var N=0;
N<X.length;
N++){var R=X[N];
var U=T.getProperty(R);
var V=T.getObjects(P,R);
var O=U.getValueType();
if(V.size()>0&&!(R in Exhibit.BibtexExporter._excludeProperties)){Q+="\t"+(R=="label"?"title":R)+' = "';
var W;
if(O=="item"){W=[];
V.visit(function(A){W.push(T.getObject(A,"label"));
});
}else{if(O=="url"){W=[];
V.visit(function(A){W.push(Exhibit.Persistence.resolveURL(A));
});
}else{W=V.toArray();
}}Q+=W.join(" and ")+'",\n';
}}Q+='\torigin = "'+Exhibit.Persistence.getItemLink(P)+'"\n';
Q+="}\n";
return Q;
};
Exhibit.BibtexExporter._wrap=function(B){return B;
};
Exhibit.ExhibitJsonExporter={getLabel:function(){return Exhibit.l10n.exhibitJsonExporterLabel;
}};
Exhibit.ExhibitJsonExporter.exportOne=function(D,C){return Exhibit.ExhibitJsonExporter._wrap(Exhibit.ExhibitJsonExporter._exportOne(D,C)+"\n");
};
Exhibit.ExhibitJsonExporter.exportMany=function(G,H){var J="";
var F=G.size();
var I=0;
G.visit(function(A){J+=Exhibit.ExhibitJsonExporter._exportOne(A,H)+((I++<F-1)?",\n":"\n");
});
return Exhibit.ExhibitJsonExporter._wrap(J);
};
Exhibit.ExhibitJsonExporter._exportOne=function(P,T){function Q(A){if(/[\\\x00-\x1F\x22]/.test(A)){return'"'+A.replace(/([\\\x00-\x1f\x22])/g,function(C,D){var B={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"}[D];
if(B){return B;
}B=D.charCodeAt();
return"\\x"+Math.floor(B/16).toString(16)+(B%16).toString(16);
})+'"';
}return'"'+A+'"';
}var R="";
var O=T.getObject(P,"uri");
R+='  {"id":'+Q(P)+",\n";
var W=T.getAllProperties();
for(var Y=0;
Y<W.length;
Y++){var S=W[Y];
var U=T.getProperty(S);
var V=T.getObjects(P,S);
var N=U.getValueType();
if(V.size()>0){var X;
if(N=="url"){X=[];
V.visit(function(A){X.push(Exhibit.Persistence.resolveURL(A));
});
}else{X=V.toArray();
}R+="   "+Q(S)+":";
if(X.length==1){R+=Q(X[0]);
}else{R+="[";
for(var Z=0;
Z<X.length;
Z++){R+=(Z>0?",":"")+Q(X[Z]);
}R+="]";
}R+=",\n";
}}R+='   "origin":'+Q(Exhibit.Persistence.getItemLink(P))+"\n";
R+="  }";
return R;
};
Exhibit.ExhibitJsonExporter._wrap=function(B){return'{\n "items":[\n'+B+" ]\n}";
};
Exhibit.FacetSelectionExporter={getLabel:function(){return"Facet Selections";
},exportOne:function(D,C){return Exhibit.FacetSelectionExporter._exportUrl();
},exportMany:function(D,C){return Exhibit.FacetSelectionExporter._exportUrl();
}};
Exhibit.FacetSelectionExporter._exportUrl=function(){var D=window.exhibit.exportSettings();
var E=window.location.href.split("?")[0]+"?";
var F="";
for(id in D){E+=F+id+"="+escape(D[id]);
if(F===""){F="&";
}}return E;
};
Exhibit.RdfXmlExporter={getLabel:function(){return Exhibit.l10n.rdfXmlExporterLabel;
}};
Exhibit.RdfXmlExporter.exportOne=function(F,G){var H={};
var E={};
G.getNamespaces(H,E);
return Exhibit.RdfXmlExporter._wrapRdf(Exhibit.RdfXmlExporter._exportOne(F,G,H,E),E);
};
Exhibit.RdfXmlExporter.exportMany=function(G,H){var J="";
var I={};
var F={};
H.getNamespaces(I,F);
G.visit(function(A){J+=Exhibit.RdfXmlExporter._exportOne(A,H,I,F)+"\n";
});
return Exhibit.RdfXmlExporter._wrapRdf(J,F);
};
Exhibit.RdfXmlExporter._exportOne=function(R,U,Q,X){var S="";
var P=U.getObject(R,"uri");
S+="<rdf:Description rdf:about='"+P+"'>\n";
var Y=U.getAllProperties();
for(var a=0;
a<Y.length;
a++){var T=Y[a];
var V=U.getProperty(T);
var W=U.getObjects(R,T);
var b=V.getValueType();
var Z;
if(T in Q){var O=Q[T];
Z=O.prefix+":"+O.localName;
}else{Z=V.getURI();
}if(b=="item"){W.visit(function(A){S+="\t<"+Z+" rdf:resource='"+A+"' />\n";
});
}else{if(T!="uri"){if(b=="url"){W.visit(function(A){S+="\t<"+Z+">"+Exhibit.Persistence.resolveURL(A)+"</"+Z+">\n";
});
}else{W.visit(function(A){S+="\t<"+Z+">"+A+"</"+Z+">\n";
});
}}}}S+="\t<exhibit:origin>"+Exhibit.Persistence.getItemLink(R)+"</exhibit:origin>\n";
S+="</rdf:Description>";
return S;
};
Exhibit.RdfXmlExporter._wrapRdf=function(E,F){var D="<?xml version='1.0'?>\n<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#'\n\txmlns:exhibit='http://simile.mit.edu/2006/11/exhibit#'";
for(prefix in F){D+="\n\txmlns:"+prefix+"='"+F[prefix]+"'";
}D+=">\n"+E+"\n</rdf:RDF>";
return D;
};
Exhibit.SemanticWikitextExporter={getLabel:function(){return Exhibit.l10n.smwExporterLabel;
}};
Exhibit.SemanticWikitextExporter.exportOne=function(D,C){return Exhibit.SemanticWikitextExporter._wrap(Exhibit.SemanticWikitextExporter._exportOne(D,C));
};
Exhibit.SemanticWikitextExporter.exportMany=function(E,F){var D="";
E.visit(function(A){D+=Exhibit.SemanticWikitextExporter._exportOne(A,F)+"\n";
});
return Exhibit.SemanticWikitextExporter._wrap(D);
};
Exhibit.SemanticWikitextExporter._exportOne=function(N,R){var O="";
var M=R.getObject(N,"uri");
O+=M+"\n";
var T=R.getAllProperties();
for(var K=0;
K<T.length;
K++){var P=T[K];
var Q=R.getProperty(P);
var S=R.getObjects(N,P);
var L=Q.getValueType();
if(L=="item"){S.visit(function(A){O+="[["+P+"::"+A+"]]\n";
});
}else{if(L=="url"){S.visit(function(A){O+="[["+P+":="+Exhibit.Persistence.resolveURL(A)+"]]\n";
});
}else{S.visit(function(A){O+="[["+P+":="+A+"]]\n";
});
}}}O+="[[origin:="+Exhibit.Persistence.getItemLink(N)+"]]\n";
O+="\n";
return O;
};
Exhibit.SemanticWikitextExporter._wrap=function(B){return B;
};
Exhibit.TSVExporter={getLabel:function(){return Exhibit.l10n.tsvExporterLabel;
}};
Exhibit.TSVExporter.exportOne=function(D,C){return Exhibit.TSVExporter._wrap(Exhibit.TSVExporter._exportOne(D,C),C);
};
Exhibit.TSVExporter.exportMany=function(E,F){var D="";
E.visit(function(A){D+=Exhibit.TSVExporter._exportOne(A,F)+"\n";
});
return Exhibit.TSVExporter._wrap(D,F);
};
Exhibit.TSVExporter._exportOne=function(M,R){var N="";
var J=R.getAllProperties();
for(var K=0;
K<J.length;
K++){var O=J[K];
var Q=R.getProperty(O);
var P=R.getObjects(M,O);
var L=Q.getValueType();
N+=P.toArray().join("; ")+"\t";
}return N;
};
Exhibit.TSVExporter._wrap=function(O,M){var J="";
var P=M.getAllProperties();
for(var I=0;
I<P.length;
I++){var L=P[I];
var N=M.getProperty(L);
var K=N.getValueType();
J+=L+":"+K+"\t";
}return J+"\n"+O;
};
Exhibit.ExpressionParser=new Object();
Exhibit.ExpressionParser.parse=function(G,F,E){F=F||0;
E=E||{};
var H=new Exhibit.ExpressionScanner(G,F);
try{return Exhibit.ExpressionParser._internalParse(H,false);
}finally{E.index=H.token()!=null?H.token().start:H.index();
}};
Exhibit.ExpressionParser.parseSeveral=function(G,F,E){F=F||0;
E=E||{};
var H=new Exhibit.ExpressionScanner(G,F);
try{return Exhibit.ExpressionParser._internalParse(H,true);
}finally{E.index=H.token()!=null?H.token().start:H.index();
}};
Exhibit.ExpressionParser._internalParse=function(a,T){var R=Exhibit.ExpressionScanner;
var b=a.token();
var Z=function(){a.next();
b=a.token();
};
var X=function(){return b!=null?b.start:a.index();
};
var W=function(){var A=new Exhibit.Expression.Path();
while(b!=null&&b.type==R.PATH_OPERATOR){var B=b.value;
Z();
if(b!=null&&b.type==R.IDENTIFIER){A.appendSegment(b.value,B);
Z();
}else{throw new Error("Missing property ID at position "+X());
}}return A;
};
var V=function(){if(b==null){throw new Error("Missing factor at end of expression");
}var C=null;
switch(b.type){case R.NUMBER:C=new Exhibit.Expression._Constant(b.value,"number");
Z();
break;
case R.STRING:C=new Exhibit.Expression._Constant(b.value,"text");
Z();
break;
case R.PATH_OPERATOR:C=W();
break;
case R.IDENTIFIER:var A=b.value;
Z();
if(A in Exhibit.Controls){if(b!=null&&b.type==R.DELIMITER&&b.value=="("){Z();
var B=(b!=null&&b.type==R.DELIMITER&&b.value==")")?[]:d();
C=new Exhibit.Expression._ControlCall(A,B);
if(b!=null&&b.type==R.DELIMITER&&b.value==")"){Z();
}else{throw new Error("Missing ) to end "+A+" at position "+X());
}}else{throw new Error("Missing ( to start "+A+" at position "+X());
}}else{if(b!=null&&b.type==R.DELIMITER&&b.value=="("){Z();
var B=(b!=null&&b.type==R.DELIMITER&&b.value==")")?[]:d();
C=new Exhibit.Expression._FunctionCall(A,B);
if(b!=null&&b.type==R.DELIMITER&&b.value==")"){Z();
}else{throw new Error("Missing ) after function call "+A+" at position "+X());
}}else{C=W();
C.setRootName(A);
}}break;
case R.DELIMITER:if(b.value=="("){Z();
C=Q();
if(b!=null&&b.type==R.DELIMITER&&b.value==")"){Z();
break;
}else{throw new Error("Missing ) at position "+X());
}}default:throw new Error("Unexpected text "+b.value+" at position "+X());
}return C;
};
var P=function(){var A=V();
while(b!=null&&b.type==R.OPERATOR&&(b.value=="*"||b.value=="/")){var B=b.value;
Z();
A=new Exhibit.Expression._Operator(B,[A,V()]);
}return A;
};
var c=function(){var A=P();
while(b!=null&&b.type==R.OPERATOR&&(b.value=="+"||b.value=="-")){var B=b.value;
Z();
A=new Exhibit.Expression._Operator(B,[A,P()]);
}return A;
};
var Q=function(){var A=c();
while(b!=null&&b.type==R.OPERATOR&&(b.value=="="||b.value=="<>"||b.value=="<"||b.value=="<="||b.value==">"||b.value==">=")){var B=b.value;
Z();
A=new Exhibit.Expression._Operator(B,[A,c()]);
}return A;
};
var d=function(){var A=[Q()];
while(b!=null&&b.type==R.DELIMITER&&b.value==","){Z();
A.push(Q());
}return A;
};
if(T){var U=d();
var Y=[];
for(var S=0;
S<U.length;
S++){Y.push(new Exhibit.Expression._Impl(U[S]));
}return Y;
}else{return new Exhibit.Expression._Impl(Q());
}};
Exhibit.ExpressionScanner=function(D,C){this._text=D+" ";
this._maxIndex=D.length;
this._index=C;
this.next();
};
Exhibit.ExpressionScanner.DELIMITER=0;
Exhibit.ExpressionScanner.NUMBER=1;
Exhibit.ExpressionScanner.STRING=2;
Exhibit.ExpressionScanner.IDENTIFIER=3;
Exhibit.ExpressionScanner.OPERATOR=4;
Exhibit.ExpressionScanner.PATH_OPERATOR=5;
Exhibit.ExpressionScanner.prototype.token=function(){return this._token;
};
Exhibit.ExpressionScanner.prototype.index=function(){return this._index;
};
Exhibit.ExpressionScanner.prototype.next=function(){this._token=null;
while(this._index<this._maxIndex&&" \t\r\n".indexOf(this._text.charAt(this._index))>=0){this._index++;
}if(this._index<this._maxIndex){var G=this._text.charAt(this._index);
var H=this._text.charAt(this._index+1);
if(".!".indexOf(G)>=0){if(H=="@"){this._token={type:Exhibit.ExpressionScanner.PATH_OPERATOR,value:G+H,start:this._index,end:this._index+2};
this._index+=2;
}else{this._token={type:Exhibit.ExpressionScanner.PATH_OPERATOR,value:G,start:this._index,end:this._index+1};
this._index++;
}}else{if("<>".indexOf(G)>=0){if((H=="=")||("<>".indexOf(H)>=0&&G!=H)){this._token={type:Exhibit.ExpressionScanner.OPERATOR,value:G+H,start:this._index,end:this._index+2};
this._index+=2;
}else{this._token={type:Exhibit.ExpressionScanner.OPERATOR,value:G,start:this._index,end:this._index+1};
this._index++;
}}else{if("+-*/=".indexOf(G)>=0){this._token={type:Exhibit.ExpressionScanner.OPERATOR,value:G,start:this._index,end:this._index+1};
this._index++;
}else{if("(),".indexOf(G)>=0){this._token={type:Exhibit.ExpressionScanner.DELIMITER,value:G,start:this._index,end:this._index+1};
this._index++;
}else{if("\"'".indexOf(G)>=0){var E=this._index+1;
while(E<this._maxIndex){if(this._text.charAt(E)==G&&this._text.charAt(E-1)!="\\"){break;
}E++;
}if(E<this._maxIndex){this._token={type:Exhibit.ExpressionScanner.STRING,value:this._text.substring(this._index+1,E).replace(/\\'/g,"'").replace(/\\"/g,'"'),start:this._index,end:E+1};
this._index=E+1;
}else{throw new Error("Unterminated string starting at "+this._index);
}}else{if(this._isDigit(G)){var E=this._index;
while(E<this._maxIndex&&this._isDigit(this._text.charAt(E))){E++;
}if(E<this._maxIndex&&this._text.charAt(E)=="."){E++;
while(E<this._maxIndex&&this._isDigit(this._text.charAt(E))){E++;
}}this._token={type:Exhibit.ExpressionScanner.NUMBER,value:parseFloat(this._text.substring(this._index,E)),start:this._index,end:E};
this._index=E;
}else{var E=this._index;
while(E<this._maxIndex){var F=this._text.charAt(E);
if("(),.!@ \t".indexOf(F)<0){E++;
}else{break;
}}this._token={type:Exhibit.ExpressionScanner.IDENTIFIER,value:this._text.substring(this._index,E),start:this._index,end:E};
this._index=E;
}}}}}}}};
Exhibit.ExpressionScanner.prototype._isDigit=function(B){return"0123456789".indexOf(B)>=0;
};
Exhibit.Expression=new Object();
Exhibit.Expression._Impl=function(B){this._rootNode=B;
};
Exhibit.Expression._Impl.prototype.evaluate=function(F,J,G,I){var H=this._rootNode.evaluate(F,J,G,I);
return{values:H.getSet(),valueType:H.valueType,size:H.size};
};
Exhibit.Expression._Impl.prototype.evaluateOnItem=function(D,C){return this.evaluate({"value":D},{"value":"item"},"value",C);
};
Exhibit.Expression._Impl.prototype.evaluateSingle=function(L,K,H,J){var I=this._rootNode.evaluate(L,K,H,J);
var G={value:null,valueType:I.valueType};
I.forEachValue(function(A){G.value=A;
return true;
});
return G;
};
Exhibit.Expression._Impl.prototype.evaluateSingleOnItem=function(D,C){return this.evaluateSingle({"value":D},{"value":"item"},"value",C);
};
Exhibit.Expression._Impl.prototype.testExists=function(E,H,F,G){return this.isPath()?this._rootNode.testExists(E,H,F,G):this.evaluate(E,H,F,G).values.size()>0;
};
Exhibit.Expression._Impl.prototype.isPath=function(){return this._rootNode instanceof Exhibit.Expression.Path;
};
Exhibit.Expression._Impl.prototype.getPath=function(){return this.isPath()?this._rootNode:null;
};
Exhibit.Expression._Collection=function(C,D){this._values=C;
this.valueType=D;
if(C instanceof Array){this.forEachValue=Exhibit.Expression._Collection._forEachValueInArray;
this.getSet=Exhibit.Expression._Collection._getSetFromArray;
this.contains=Exhibit.Expression._Collection._containsInArray;
this.size=C.length;
}else{this.forEachValue=Exhibit.Expression._Collection._forEachValueInSet;
this.getSet=Exhibit.Expression._Collection._getSetFromSet;
this.contains=Exhibit.Expression._Collection._containsInSet;
this.size=C.size();
}};
Exhibit.Expression._Collection._forEachValueInSet=function(B){this._values.visit(B);
};
Exhibit.Expression._Collection._forEachValueInArray=function(E){var D=this._values;
for(var F=0;
F<D.length;
F++){if(E(D[F])){break;
}}};
Exhibit.Expression._Collection._getSetFromSet=function(){return this._values;
};
Exhibit.Expression._Collection._getSetFromArray=function(){return new Exhibit.Set(this._values);
};
Exhibit.Expression._Collection._containsInSet=function(B){this._values.contains(B);
};
Exhibit.Expression._Collection._containsInArray=function(F){var D=this._values;
for(var E=0;
E<D.length;
E++){if(D[E]==F){return true;
}}return false;
};
Exhibit.Expression.Path=function(){this._rootName=null;
this._segments=[];
};
Exhibit.Expression.Path.create=function(F,D){var E=new Exhibit.Expression.Path();
E._segments.push({property:F,forward:D,isArray:false});
return E;
};
Exhibit.Expression.Path.prototype.setRootName=function(B){this._rootName=B;
};
Exhibit.Expression.Path.prototype.appendSegment=function(D,C){this._segments.push({property:D,forward:C.charAt(0)==".",isArray:C.length>1});
};
Exhibit.Expression.Path.prototype.getSegment=function(C){if(C<this._segments.length){var D=this._segments[C];
return{property:D.property,forward:D.forward,isArray:D.isArray};
}else{return null;
}};
Exhibit.Expression.Path.prototype.getLastSegment=function(){return this.getSegment(this._segments.length-1);
};
Exhibit.Expression.Path.prototype.getSegmentCount=function(){return this._segments.length;
};
Exhibit.Expression.Path.prototype.evaluate=function(P,O,J,N){var K=this._rootName!=null?this._rootName:J;
var L=K in O?O[K]:"text";
var M=null;
if(K in P){var I=P[K];
if(I instanceof Exhibit.Set||I instanceof Array){M=new Exhibit.Expression._Collection(I,L);
}else{M=new Exhibit.Expression._Collection([I],L);
}return this._walkForward(M,N);
}else{throw new Error("No such variable called "+K);
}};
Exhibit.Expression.Path.prototype.evaluateBackward=function(I,G,F,J){var H=new Exhibit.Expression._Collection([I],G);
return this._walkBackward(H,F,J);
};
Exhibit.Expression.Path.prototype.walkForward=function(D,E,F){return this._walkForward(new Exhibit.Expression._Collection(D,E),F);
};
Exhibit.Expression.Path.prototype.walkBackward=function(E,F,H,G){return this._walkBackward(new Exhibit.Expression._Collection(E,F),H,G);
};
Exhibit.Expression.Path.prototype._walkForward=function(K,L){for(var O=0;
O<this._segments.length;
O++){var N=this._segments[O];
if(N.isArray){var I=[];
var J;
if(N.forward){K.forEachValue(function(A){L.getObjects(A,N.property).visit(function(B){I.push(B);
});
});
var M=L.getProperty(N.property);
J=M!=null?M.getValueType():"text";
}else{K.forEachValue(function(A){L.getSubjects(A,N.property).visit(function(B){I.push(B);
});
});
J="item";
}K=new Exhibit.Expression._Collection(I,J);
}else{if(N.forward){var P=L.getObjectsUnion(K.getSet(),N.property);
var M=L.getProperty(N.property);
var J=M!=null?M.getValueType():"text";
K=new Exhibit.Expression._Collection(P,J);
}else{var P=L.getSubjectsUnion(K.getSet(),N.property);
K=new Exhibit.Expression._Collection(P,"item");
}}}return K;
};
Exhibit.Expression.Path.prototype._walkBackward=function(J,M,O){for(var K=this._segments.length-1;
K>=0;
K--){var R=this._segments[K];
if(R.isArray){var Q=[];
var L;
if(R.forward){J.forEachValue(function(A){O.getSubjects(A,R.property).visit(function(B){if(K>0||M==null||M.contains(B)){Q.push(B);
}});
});
var N=O.getProperty(R.property);
L=N!=null?N.getValueType():"text";
}else{J.forEachValue(function(A){O.getObjects(A,R.property).visit(function(B){if(K>0||M==null||M.contains(B)){Q.push(B);
}});
});
L="item";
}J=new Exhibit.Expression._Collection(Q,L);
}else{if(R.forward){var P=O.getSubjectsUnion(J.getSet(),R.property,null,K==0?M:null);
J=new Exhibit.Expression._Collection(P,"item");
}else{var P=O.getObjectsUnion(J.getSet(),R.property,null,K==0?M:null);
var N=O.getProperty(R.property);
var L=N!=null?N.getValueType():"text";
J=new Exhibit.Expression._Collection(P,L);
}}}return J;
};
Exhibit.Expression.Path.prototype.rangeBackward=function(S,R,T,N,O){var Q=new Exhibit.Set();
var M="item";
if(this._segments.length>0){var K=this._segments[this._segments.length-1];
if(K.forward){O.getSubjectsInRange(K.property,S,R,T,Q,this._segments.length==1?N:null);
}else{throw new Error("Last path of segment must be forward");
}for(var L=this._segments.length-2;
L>=0;
L--){K=this._segments[L];
if(K.forward){Q=O.getSubjectsUnion(Q,K.property,null,L==0?N:null);
M="item";
}else{Q=O.getObjectsUnion(Q,K.property,null,L==0?N:null);
var P=O.getProperty(K.property);
M=P!=null?P.getValueType():"text";
}}}return{valueType:M,values:Q,count:Q.size()};
};
Exhibit.Expression.Path.prototype.testExists=function(E,H,F,G){return this.evaluate(E,H,F,G).size>0;
};
Exhibit.Expression._Constant=function(C,D){this._value=C;
this._valueType=D;
};
Exhibit.Expression._Constant.prototype.evaluate=function(E,H,F,G){return new Exhibit.Expression._Collection([this._value],this._valueType);
};
Exhibit.Expression._Operator=function(C,D){this._operator=C;
this._args=D;
};
Exhibit.Expression._Operator.prototype.evaluate=function(O,N,L,Q){var P=[];
var R=[];
for(var K=0;
K<this._args.length;
K++){R.push(this._args[K].evaluate(O,N,L,Q));
}var M=Exhibit.Expression._operators[this._operator];
var J=M.f;
if(M.argumentType=="number"){R[0].forEachValue(function(A){if(!(typeof A=="number")){A=parseFloat(A);
}R[1].forEachValue(function(B){if(!(typeof B=="number")){B=parseFloat(B);
}P.push(J(A,B));
});
});
}else{R[0].forEachValue(function(A){R[1].forEachValue(function(B){P.push(J(A,B));
});
});
}return new Exhibit.Expression._Collection(P,M.valueType);
};
Exhibit.Expression._operators={"+":{argumentType:"number",valueType:"number",f:function(D,C){return D+C;
}},"-":{argumentType:"number",valueType:"number",f:function(D,C){return D-C;
}},"*":{argumentType:"number",valueType:"number",f:function(D,C){return D*C;
}},"/":{argumentType:"number",valueType:"number",f:function(D,C){return D/C;
}},"=":{valueType:"boolean",f:function(D,C){return D==C;
}},"<>":{valueType:"boolean",f:function(D,C){return D!=C;
}},"><":{valueType:"boolean",f:function(D,C){return D!=C;
}},"<":{argumentType:"number",valueType:"boolean",f:function(D,C){return D<C;
}},">":{argumentType:"number",valueType:"boolean",f:function(D,C){return D>C;
}},"<=":{argumentType:"number",valueType:"boolean",f:function(D,C){return D<=C;
}},">=":{argumentType:"number",valueType:"boolean",f:function(D,C){return D>=C;
}}};
Exhibit.Expression._FunctionCall=function(D,C){this._name=D;
this._args=C;
};
Exhibit.Expression._FunctionCall.prototype.evaluate=function(G,K,H,I){var L=[];
for(var J=0;
J<this._args.length;
J++){L.push(this._args[J].evaluate(G,K,H,I));
}if(this._name in Exhibit.Functions){return Exhibit.Functions[this._name].f(L);
}else{throw new Error("No such function named "+this._name);
}};
Exhibit.Expression._ControlCall=function(D,C){this._name=D;
this._args=C;
};
Exhibit.Expression._ControlCall.prototype.evaluate=function(E,H,F,G){return Exhibit.Controls[this._name].f(this._args,E,H,F,G);
};
Exhibit.Functions={};
Exhibit.FunctionUtilities={};
Exhibit.FunctionUtilities.registerSimpleMappingFunction=function(D,F,E){Exhibit.Functions[D]={f:function(C){var A=new Exhibit.Set();
for(var B=0;
B<C.length;
B++){C[B].forEachValue(function(J){var I=F(J);
if(I!=undefined){A.add(I);
}});
}return new Exhibit.Expression._Collection(A,E);
}};
};
Exhibit.Functions["union"]={f:function(J){var G=new Exhibit.Set();
var H=null;
if(J.length>0){var H=J[0].valueType;
for(var I=0;
I<J.length;
I++){var F=J[I];
if(F.size>0){if(H==null){H=F.valueType;
}G.addSet(F.getSet());
}}}return new Exhibit.Expression._Collection(G,H!=null?H:"text");
}};
Exhibit.Functions["contains"]={f:function(F){var D=F[0].size>0;
var E=F[0].getSet();
F[1].forEachValue(function(A){if(!E.contains(A)){D=false;
return true;
}});
return new Exhibit.Expression._Collection([D],"boolean");
}};
Exhibit.Functions["exists"]={f:function(B){return new Exhibit.Expression._Collection([B[0].size>0],"boolean");
}};
Exhibit.Functions["count"]={f:function(B){return new Exhibit.Expression._Collection([B[0].size],"number");
}};
Exhibit.Functions["not"]={f:function(B){return new Exhibit.Expression._Collection([!B[0].contains(true)],"boolean");
}};
Exhibit.Functions["and"]={f:function(D){var E=true;
for(var F=0;
E&&F<D.length;
F++){E=E&&D[F].contains(true);
}return new Exhibit.Expression._Collection([E],"boolean");
}};
Exhibit.Functions["or"]={f:function(D){var E=false;
for(var F=0;
!E&&F<D.length;
F++){E=E||D[F].contains(true);
}return new Exhibit.Expression._Collection([E],"boolean");
}};
Exhibit.Functions["add"]={f:function(D){var E=0;
for(var F=0;
F<D.length;
F++){D[F].forEachValue(function(B){if(B!=null){if(typeof B=="number"){E+=B;
}else{var A=parseFloat(B);
if(!isNaN(A)){E+=A;
}}}});
}return new Exhibit.Expression._Collection([E],"number");
}};
Exhibit.Functions["concat"]={f:function(F){var D=[];
for(var E=0;
E<F.length;
E++){F[E].forEachValue(function(A){if(A!=null){D.push(A);
}});
}return new Exhibit.Expression._Collection([D.join("")],"text");
}};
Exhibit.Functions["multiply"]={f:function(D){var E=1;
for(var F=0;
F<D.length;
F++){D[F].forEachValue(function(B){if(B!=null){if(typeof B=="number"){E*=B;
}else{var A=parseFloat(B);
if(!isNaN(A)){E*=A;
}}}});
}return new Exhibit.Expression._Collection([E],"number");
}};
Exhibit.Functions["date-range"]={_parseDate:function(C){if(C==null){return Number.NEGATIVE_INFINITY;
}else{if(C instanceof Date){return C.getTime();
}else{try{return SimileAjax.DateTime.parseIso8601DateTime(C).getTime();
}catch(D){return Number.NEGATIVE_INFINITY;
}}}},_factors:{second:1000,minute:60*1000,hour:60*60*1000,day:24*60*60*1000,week:7*24*60*60*1000,month:30*24*60*60*1000,quarter:3*30*24*60*60*1000,year:365*24*60*60*1000,decade:10*365*24*60*60*1000,century:100*365*24*60*60*1000},_computeRange:function(F,G,H){var E=G-F;
if(isFinite(E)){if(H in this._factors){E=Math.round(E/this._factors[H]);
}return E;
}return null;
},f:function(J){var K=this;
var H=Number.POSITIVE_INFINITY;
J[0].forEachValue(function(A){H=Math.min(H,K._parseDate(A));
});
var I=Number.NEGATIVE_INFINITY;
J[1].forEachValue(function(A){I=Math.max(I,K._parseDate(A));
});
var L="day";
J[2].forEachValue(function(A){L=A;
});
var G=this._computeRange(H,I,L);
return new Exhibit.Expression._Collection(G!=null?[G]:[],"number");
}};
Exhibit.Functions["distance"]={_units:{km:1000,mile:1609.344},_computeDistance:function(G,H,J,I){var F=G.distanceFrom(H);
if(!I){I=1;
}if(isFinite(F)){if(this._units.hasOwnProperty(J)){F=F/this._units[J];
}return Exhibit.Util.round(F,I);
}return null;
},f:function(R){var O=this;
var K={};
var N=["origo","lat","lng","unit","round"];
for(var T=0,L;
L=N[T];
T++){R[T].forEachValue(function(A){K[L]=A;
});
}var M=K.origo.split(",");
var P=new GLatLng(M[0],M[1]);
var Q=new GLatLng(K.lat,K.lng);
var S=this._computeDistance(P,Q,K.unit,K.round);
return new Exhibit.Expression._Collection(S!=null?[S]:[],"number");
}};
Exhibit.Functions["min"]={f:function(N){var O=function(A){return A;
};
var L=Number.POSITIVE_INFINITY;
var J=null;
for(var M=0;
M<N.length;
M++){var P=N[M];
var I=P.valueType?P.valueType:"text";
var K=Exhibit.SettingsUtilities._typeToParser(I);
P.forEachValue(function(A){parsedV=K(A,O);
if(parsedV<L||L==Number.POSITIVE_INFINITY){L=parsedV;
J=(J==null)?I:(J==I?J:"text");
}});
}return new Exhibit.Expression._Collection([L],J!=null?J:"text");
}};
Exhibit.Functions["max"]={f:function(M){var N=function(A){return A;
};
var O=Number.NEGATIVE_INFINITY;
var J=null;
for(var L=0;
L<M.length;
L++){var P=M[L];
var I=P.valueType?P.valueType:"text";
var K=Exhibit.SettingsUtilities._typeToParser(I);
P.forEachValue(function(A){parsedV=K(A,N);
if(parsedV>O||O==Number.NEGATIVE_INFINITY){O=parsedV;
J=(J==null)?I:(J==I?J:"text");
}});
}return new Exhibit.Expression._Collection([O],J!=null?J:"text");
}};
Exhibit.Functions["remove"]={f:function(J){var G=J[0].getSet();
var H=J[0].valueType;
for(var I=1;
I<J.length;
I++){var F=J[I];
if(F.size>0){G.removeSet(F.getSet());
}}return new Exhibit.Expression._Collection(G,H);
}};
Exhibit.Functions["now"]={f:function(B){return new Exhibit.Expression._Collection([new Date()],"date");
}};
Exhibit.AuthenticatedImporter={_callbacks:{}};
Exhibit.importers["application/authenticated"]=Exhibit.AuthenticatedImporter;
Exhibit.AuthenticatedImporter.constructURL=function(){return"https://www.google.com/accounts/AuthSubRequest?scope=http%3A%2F%2Fspreadsheets.google.com%2Ffeeds%2F&session=1&secure=0&next="+window.location;
};
Exhibit.AuthenticatedImporter.load=function(link,database,cont){var url=typeof link=="string"?link:link.href;
url=Exhibit.Persistence.resolveURL(url);
var fError=function(statusText,status,xmlhttp){Exhibit.UI.hideBusyIndicator();
Exhibit.UI.showHelp(Exhibit.l10n.failedToLoadDataFileMessage(url));
if(cont){cont();
}};
var fDone=function(xmlhttp){Exhibit.UI.hideBusyIndicator();
try{var o=null;
try{o=eval("("+xmlhttp.responseText+")");
}catch(e){Exhibit.UI.showJsonFileValidation(Exhibit.l10n.badJsonMessage(url,e),url);
}if(o!=null){database.loadData(o,Exhibit.Persistence.getBaseURL(url));
}}catch(e){SimileAjax.Debug.exception(e,"Error loading Exhibit JSON data from "+url);
}finally{if(cont){cont();
}}};
Exhibit.UI.showBusyIndicator();
SimileAjax.XmlHttp.get(url,fError,fDone);
};
Exhibit.BabelBasedImporter={mimetypeToReader:{"application/rdf+xml":"rdf-xml","application/n3":"n3","application/msexcel":"xls","application/x-msexcel":"xls","application/x-ms-excel":"xls","application/vnd.ms-excel":"xls","application/x-excel":"xls","application/xls":"xls","application/x-xls":"xls","application/x-bibtex":"bibtex"},babelTranslatorURL:"http://service.simile-widgets.org/babel/translator",_initialize:function(){var L=[];
var H=document.documentElement.getElementsByTagName("head");
for(var K=0;
K<H.length;
K++){var I=H[K].getElementsByTagName("link");
for(var G=0;
G<I.length;
G++){var J=I[G];
if(J.rel.match(/\bexhibit\/babel-translator\b/)){Exhibit.BabelBasedImporter.babelTranslatorURL=J.href;
}}}Exhibit.BabelBasedImporter._initialize=function(){};
}};
Exhibit.importers["application/rdf+xml"]=Exhibit.BabelBasedImporter;
Exhibit.importers["application/n3"]=Exhibit.BabelBasedImporter;
Exhibit.importers["application/msexcel"]=Exhibit.BabelBasedImporter;
Exhibit.importers["application/x-msexcel"]=Exhibit.BabelBasedImporter;
Exhibit.importers["application/vnd.ms-excel"]=Exhibit.BabelBasedImporter;
Exhibit.importers["application/x-excel"]=Exhibit.BabelBasedImporter;
Exhibit.importers["application/xls"]=Exhibit.BabelBasedImporter;
Exhibit.importers["application/x-xls"]=Exhibit.BabelBasedImporter;
Exhibit.importers["application/x-bibtex"]=Exhibit.BabelBasedImporter;
Exhibit.BabelBasedImporter.load=function(L,J,P){Exhibit.BabelBasedImporter._initialize();
var N=(typeof L=="string")?Exhibit.Persistence.resolveURL(L):Exhibit.Persistence.resolveURL(L.href);
var I="rdf-xml";
var K="exhibit-jsonp";
if(typeof L!="string"){var O=L.type;
if(O in Exhibit.BabelBasedImporter.mimetypeToReader){I=Exhibit.BabelBasedImporter.mimetypeToReader[O];
}}if(I=="bibtex"){K="bibtex-exhibit-jsonp";
}var M=Exhibit.BabelBasedImporter.babelTranslatorURL+"?"+["reader="+I,"writer="+K,"url="+encodeURIComponent(N)].join("&");
return Exhibit.JSONPImporter.load(M,J,P);
};
Exhibit.ExhibitJSONImporter={};
Exhibit.importers["application/json"]=Exhibit.ExhibitJSONImporter;
Exhibit.ExhibitJSONImporter.load=function(link,database,cont){var url=typeof link=="string"?link:link.href;
url=Exhibit.Persistence.resolveURL(url);
var fError=function(statusText,status,xmlhttp){Exhibit.UI.hideBusyIndicator();
Exhibit.UI.showHelp(Exhibit.l10n.failedToLoadDataFileMessage(url));
if(cont){cont();
}};
var fDone=function(xmlhttp){Exhibit.UI.hideBusyIndicator();
try{var o=null;
try{o=eval("("+xmlhttp.responseText+")");
}catch(e){Exhibit.UI.showJsonFileValidation(Exhibit.l10n.badJsonMessage(url,e),url);
}if(o!=null){database.loadData(o,Exhibit.Persistence.getBaseURL(url));
}}catch(e){SimileAjax.Debug.exception(e,"Error loading Exhibit JSON data from "+url);
}finally{if(cont){cont();
}}};
Exhibit.UI.showBusyIndicator();
SimileAjax.XmlHttp.get(url,fError,fDone);
};
Exhibit.HtmlTableImporter={};
Exhibit.importers["text/html"]=Exhibit.HtmlTableImporter;
Exhibit.HtmlTableImporter.load=function(T,R,P){var O=typeof T=="string"?T:T.href;
if(O.substr(0,1)=="#"){try{var N=/#(.*)/.exec(f)[1];
var Q=document.getElementById(N);
Q.style.display="none";
Exhibit.HtmlTableImporter.loadTable(Q,R);
}catch(V){SimileAjax.Debug.exception(V);
}finally{if(P){P();
}}}else{if(typeof T!="string"){var L=T.getAttribute("ex:xpath");
var M=(T.getAttribute("ex:columns")).split(",");
var U="http://simile.mit.edu/babel/html-extractor?"+["xpath="+L,"url="+encodeURIComponent(O)].join("&");
var S=function(E){var B=document.createElement("div");
B.innerHTML=E;
var C=B.firstChild;
var D,A=C.getElementsByTagName("th");
for(col=0;
D=A[col];
col++){var F=M[col];
D.setAttribute("ex:name",F);
}Exhibit.HtmlTableImporter.loadTable(C,R);
return{};
};
return Exhibit.JSONPImporter.load(U,R,P,S);
}else{if(P){P();
}}}};
Exhibit.HtmlTableImporter.loadTable=function(AN,n){var v=function(A){return A.textContent||A.innerText||"";
};
var AL=function(A,C){var D={},F=false,E,G,B;
for(B=0;
E=C[B];
B++){G=Exhibit.getAttribute(A,E);
if(G){D[E]=G;
F=true;
}}return F&&D;
};
var AI=["uri","label","pluralLabel"];
var AE=["uri","valueType","label","reverseLabel","pluralLabel","reversePluralLabel","groupingLabel","reverseGroupingLabel"];
var AO=["valueParser","arity"];
var t={};
var AC=Exhibit.getAttribute(AN,"type");
var s=AC&&AL(AN,AI);
if(s){t.types={};
t.types[AC]=s;
}var l=[],AD={},AB=[],w,AA;
var AH,r=AN.getElementsByTagName("tr");
var z,AF=r[0].getElementsByTagName("th");
for(AA=0;
z=AF[AA];
AA++){var AG=v(z).trim();
var x=false;
var k=AL(z,AE);
var AJ=Exhibit.getAttribute(z,"name");
if(AJ){k=k||{};
k.label=k.label||AG;
AG=AJ;
}if(k){AD[AG]=k;
if(AD[AG].valueType=="textwithlink"){AD[AG].valueType="text";
AD[(AG+"-link")]={valueType:"url"};
x=true;
}t.properties=AD;
}l.push(AG);
k=AL(z,AO)||{};
if(k.valueParser&&k.valueParser in window){k.valueParser=window[k.valueParser];
}else{if(k.arity=="single"){k.valueParser=function(A,C,B,D){return A.trim();
};
}else{k.valueParser=function(F,C,A,D){if(F.indexOf(";")==-1){return F.trim();
}var B=F.split(";");
for(var E=0;
E<B.length;
E++){B[E]=B[E].trim();
}return B;
};
if(x){var i=k.valueParser;
k.valueParser=function(A,D,B,E){var F=D.getElementsByTagName("a");
if(!F.length){return i(A,D,B,E);
}var C={};
C[l[E]]=A.trim();
C[(l[E]+"-link")]=F[0].href;
return C;
};
}}}AB[AA]=k;
}var AK,o=AN.getElementsByTagName("img");
while(AK=o[0]){AK.parentNode.replaceChild(document.createTextNode(AK.src),AK);
}var m=[],u,q;
for(w=1;
AH=r[w];
w++){var AM={};
var h=AH.getElementsByTagName("td");
for(AA=0;
u=h[AA];
AA++){var q=v(u);
data=AB[AA].valueParser(q,u,w,AA);
if(data==null||q===""){continue;
}if(typeof data=="object"&&!(data instanceof Array)){for(var y in data){AM[y]=data[y];
}}else{AM[l[AA]]=data;
}}if(AC){AM.type=AC;
}m.push(AM);
t.items=m;
}n.loadData(t,Exhibit.Persistence.resolveURL(location.href));
};
Exhibit.JSONPImporter={_callbacks:{}};
Exhibit.importers["application/jsonp"]=Exhibit.JSONPImporter;
Exhibit.JSONPImporter.load=function(link,database,cont,fConvert,staticJSONPCallback,charset){var url=link;
if(typeof link!="string"){url=Exhibit.Persistence.resolveURL(link.href);
fConvert=Exhibit.getAttribute(link,"converter");
staticJSONPCallback=Exhibit.getAttribute(link,"jsonp-callback");
charset=Exhibit.getAttribute(link,"charset");
}if(typeof fConvert=="string"){var name=fConvert;
name=name.charAt(0).toLowerCase()+name.substring(1)+"Converter";
if(name in Exhibit.JSONPImporter){fConvert=Exhibit.JSONPImporter[name];
}else{try{fConvert=eval(fConvert);
}catch(e){fConvert=null;
}}}if(fConvert!=null&&"preprocessURL" in fConvert){url=fConvert.preprocessURL(url);
}var next=Exhibit.JSONPImporter._callbacks.next||1;
Exhibit.JSONPImporter._callbacks.next=next+1;
var callbackName="cb"+next.toString(36);
var callbackURL=url;
if(callbackURL.indexOf("?")==-1){callbackURL+="?";
}var lastChar=callbackURL.charAt(callbackURL.length-1);
if(lastChar!="="){if(lastChar!="&"&&lastChar!="?"){callbackURL+="&";
}callbackURL+="callback=";
}var callbackFull="Exhibit.JSONPImporter._callbacks."+callbackName;
callbackURL+=callbackFull;
var cleanup=function(failedURL){try{Exhibit.UI.hideBusyIndicator();
delete Exhibit.JSONPImporter._callbacks[callbackName+"_fail"];
delete Exhibit.JSONPImporter._callbacks[callbackName];
if(script&&script.parentNode){script.parentNode.removeChild(script);
}}finally{if(failedURL){prompt("Failed to load javascript file:",failedURL);
cont&&cont(undefined);
}}};
Exhibit.JSONPImporter._callbacks[callbackName+"_fail"]=cleanup;
Exhibit.JSONPImporter._callbacks[callbackName]=function(json){try{cleanup(null);
database.loadData(fConvert?fConvert(json,url,link):json,Exhibit.Persistence.getBaseURL(url));
}finally{if(cont){cont(json);
}}};
if(staticJSONPCallback){callbackURL=url;
eval(staticJSONPCallback+"="+callbackFull);
}var fail=callbackFull+"_fail('"+callbackURL+"');";
var script=SimileAjax.includeJavascriptFile(document,callbackURL,fail,charset);
Exhibit.UI.showBusyIndicator();
return Exhibit.JSONPImporter._callbacks[callbackName];
};
Exhibit.JSONPImporter.transformJSON=function(P,V,O,R){var Q=P,U=[];
if(V){V=V.split(".");
while(V.length){Q=Q[V.shift()];
}}for(var L=0,M;
M=Q[L];
L++){var S={};
for(var N in O){var V=O[N];
if(!O.hasOwnProperty(N)||!M.hasOwnProperty(V)){continue;
}var T=M[V];
if(R&&R.hasOwnProperty(N)){T=R[N](T,M,L,Q,P);
}if(typeof T!="undefined"){S[N]=T;
}}U.push(S);
}return U;
};
Exhibit.JSONPImporter.deliciousConverter=function(E,F){var D=Exhibit.JSONPImporter.transformJSON(E,null,{label:"u",note:"n",description:"d",tags:"t"});
return{items:D,properties:{url:{valueType:"url"}}};
};
Exhibit.JSONPImporter.googleSpreadsheetsConverter=function(c,AA,x){var AB=";";
if((x)&&(typeof x!="string")){var n=Exhibit.getAttribute(x,"separator");
if(n!=null&&n.length>0){AB=n;
}}var l=[];
var w={};
var r={};
var t={"text":true,"number":true,"item":true,"url":true,"boolean":true,"date":true};
var o=c.feed.entry||[];
for(var h=0;
h<o.length;
h++){var AF=o[h];
var k=AF.id.$t;
var AI=k.lastIndexOf("C");
var m=k.lastIndexOf("R");
o[h]={row:parseInt(k.substring(m+1,AI))-1,col:parseInt(k.substring(AI+1))-1,val:AF.content.$t};
}var u=0;
var v=function(){if(u<o.length){var B=o[u++];
var A=[B];
while(u<o.length){var C=o[u];
if(C.row==B.row){A.push(C);
u++;
}else{break;
}}return A;
}return null;
};
var AD=v();
if(AD!=null){var AJ=[];
for(var h=0;
h<AD.length;
h++){var AG=AD[h];
var q=AG.val.trim().replace(/^\{/g,"").replace(/\}$/g,"").split(":");
var AC=q[0].trim();
var d=q.length>1?q[1].split(","):[];
var y={single:false};
for(var AK=0;
AK<d.length;
AK++){var AH=d[AK].trim();
if(AH in t){y.valueType=AH;
}else{if(AH=="single"){y.single=true;
}}}AJ[AG.col]=AC;
w[AC]=y;
}var z=null;
while((z=v())!=null){var AL={};
for(var h=0;
h<z.length;
h++){var AG=z[h];
var AC=AJ[AG.col];
if(typeof AC=="string"){var AE=/^\d{1,2}\/\d{1,2}\/\d{4}$/;
if(AE.exec(AG.val)){AG.val=Exhibit.Database.makeISO8601DateString(new Date(AG.val));
}AL[AC]=AG.val;
var y=w[AC];
if(!y.single){var i=AG.val.split(AB);
for(var s=0;
s<i.length;
s++){i[s]=i[s].trim();
}AL[AC]=i;
}else{AL[AC]=AG.val.trim();
}}}l.push(AL);
}}return{types:r,properties:w,items:l};
};
Exhibit.JSONPImporter.googleSpreadsheetsConverter.preprocessURL=function(B){return B.replace(/\/list\//g,"/cells/");
};
var RDFA=new Object();
RDFA.url="http://www.w3.org/2006/07/SWD/RDFa/impl/js/20070301/rdfa.js";
Exhibit.RDFaImporter={};
Exhibit.importers["application/RDFa"]=Exhibit.RDFaImporter;
Exhibit.RDFaImporter.load=function(H,G,E){try{if((H.getAttribute("href")||"").length==0){Exhibit.RDFaImporter.loadRDFa(null,document,G);
}else{iframe=document.createElement("iframe");
iframe.style.display="none";
iframe.setAttribute("onLoad","Exhibit.RDFaImporter.loadRDFa(this, this.contentDocument, database)");
iframe.src=H.href;
document.body.appendChild(iframe);
}}catch(F){SimileAjax.Debug.exception(F);
}finally{if(E){E();
}}};
Exhibit.RDFaImporter.loadRDFa=function(I,J,H){var G=function(A){return A.textContent||A.innerText||"";
};
var F=function(C,E){var M={},A=false,N,B,D;
for(D=0;
N=E[D];
D++){B=Exhibit.getAttribute(C,N);
if(B){M[N]=B;
A=true;
}}return A&&M;
};
RDFA.CALLBACK_DONE_PARSING=function(){if(I!=null){document.body.removeChild(I);
}this.cloneObject=function(K){for(var L in K){this[L]=K[L];
}};
var C=this.triples;
var E={"classes":{},"properties":{},"items":[]};
for(var V in C){var B={};
B["id"],B["uri"],B["label"]=V;
var A=C[V];
for(var W in A){for(var X=0;
X<A[W].length;
X++){if(A[W][X].predicate.ns){var R=A[W][X].predicate.ns.prefix+":"+A[W][X].predicate.suffix;
if(W=="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"){try{var D=A[W][X]["object"];
var U=D.match(/(.+?)(#|\/)([a-zA-Z_]+)?$/);
var S=U[3]+"("+U[1]+")";
E["classes"][S]={"label":S,"uri":D};
B["type"]=S;
}catch(T){}}else{E["properties"][R]={"uri":W,"label":A[W][X]["predicate"]["suffix"]};
try{if(!B[R]){B[R]=[];
}B[R].push(A[W][X]["object"]);
}catch(T){SimileAjax.Debug.log("problem adding property value: "+T);
}if(W=="http://purl.org/dc/elements/1.1/title"||W=="http://www.w3.org/2000/01/rdf-schema#"||W=="http://xmlns.com/foaf/0.1/name"){B.label=B[R];
}}}else{B[W]=A[W][X]["object"];
}}}E["items"].push(new this.cloneObject(B));
}H.loadData(E,Exhibit.Persistence.getBaseURL(document.location.href));
};
RDFA.CALLBACK_DONE_LOADING=function(){RDFA.parse(J);
};
SimileAjax.includeJavascriptFile(document,RDFA.url);
};
Exhibit.create=function(B){return new Exhibit._Impl(B);
};
Exhibit.getAttribute=function(K,M,H){try{var J=K.getAttribute(M);
if(J==null||J.length==0){J=K.getAttribute("ex:"+M);
if(J!=null&&J.length==0){return null;
}}if(H==null){return J;
}var N=J.split(H);
for(var L=0;
J=N[L];
L++){N[L]=J.trim();
}return N;
}catch(I){return null;
}};
Exhibit.getRoleAttribute=function(C){var D=Exhibit.getAttribute(C,"role")||"";
D=D.replace(/^exhibit-/,"");
return D;
};
Exhibit.getConfigurationFromDOM=function(elmt){var c=Exhibit.getAttribute(elmt,"configuration");
if(c!=null&&c.length>0){try{var o=eval(c);
if(typeof o=="object"){return o;
}}catch(e){}}return{};
};
Exhibit.extractOptionsFromElement=function(J){var I={};
var L=J.attributes;
for(var K in L){if(L.hasOwnProperty(K)){var G=L[K].nodeName;
var H=L[K].nodeValue;
if(G.indexOf("ex:")==0){G=G.substring(3);
}I[G]=H;
}}return I;
};
Exhibit.getExporters=function(){Exhibit._initializeExporters();
return[].concat(Exhibit._exporters);
};
Exhibit.addExporter=function(B){Exhibit._initializeExporters();
Exhibit._exporters.push(B);
};
Exhibit._initializeExporters=function(){if(!("_exporters" in Exhibit)){Exhibit._exporters=[Exhibit.RdfXmlExporter,Exhibit.SemanticWikitextExporter,Exhibit.TSVExporter,Exhibit.ExhibitJsonExporter,Exhibit.FacetSelectionExporter];
}};
Exhibit._Impl=function(B){this._database=B!=null?B:("database" in window?window.database:Exhibit.Database.create());
this._uiContext=Exhibit.UIContext.createRootContext({},this);
this._collectionMap={};
this._componentMap={};
this._historyListener={onBeforePerform:function(A){if(A.lengthy){Exhibit.UI.showBusyIndicator();
}},onAfterPerform:function(A){if(A.lengthy){Exhibit.UI.hideBusyIndicator();
}},onBeforeUndoSeveral:function(){Exhibit.UI.showBusyIndicator();
},onAfterUndoSeveral:function(){Exhibit.UI.hideBusyIndicator();
},onBeforeRedoSeveral:function(){Exhibit.UI.showBusyIndicator();
},onAfterRedoSeveral:function(){Exhibit.UI.hideBusyIndicator();
}};
SimileAjax.History.addListener(this._historyListener);
};
Exhibit._Impl.prototype.dispose=function(){SimileAjax.History.removeListener(this._historyListener);
for(var D in this._componentMap){try{this._componentMap[D].dispose();
}catch(C){SimileAjax.Debug.exception(C,"Failed to dispose component");
}}for(var D in this._collectionMap){try{this._collectionMap[D].dispose();
}catch(C){SimileAjax.Debug.exception(C,"Failed to dispose collection");
}}this._uiContext.dispose();
this._componentMap=null;
this._collectionMap=null;
this._uiContext=null;
this._database=null;
};
Exhibit._Impl.prototype.getDatabase=function(){return this._database;
};
Exhibit._Impl.prototype.getUIContext=function(){return this._uiContext;
};
Exhibit._Impl.prototype.getCollection=function(D){var C=this._collectionMap[D];
if(C==null&&D=="default"){C=Exhibit.Collection.createAllItemsCollection(D,this._database);
this.setDefaultCollection(C);
}return C;
};
Exhibit._Impl.prototype.getDefaultCollection=function(){return this.getCollection("default");
};
Exhibit._Impl.prototype.setCollection=function(E,F){if(E in this._collectionMap){try{this._collectionMap[E].dispose();
}catch(D){SimileAjax.Debug.exception(D);
}}this._collectionMap[E]=F;
};
Exhibit._Impl.prototype.setDefaultCollection=function(B){this.setCollection("default",B);
};
Exhibit._Impl.prototype.getComponent=function(B){return this._componentMap[B];
};
Exhibit._Impl.prototype.setComponent=function(E,F){if(E in this._componentMap){try{this._componentMap[E].dispose();
}catch(D){SimileAjax.Debug.exception(D);
}}this._componentMap[E]=F;
};
Exhibit._Impl.prototype.disposeComponent=function(D){if(D in this._componentMap){try{this._componentMap[D].dispose();
}catch(C){SimileAjax.Debug.exception(C);
}delete this._componentMap[D];
}};
Exhibit._Impl.prototype.configure=function(G){if("collections" in G){for(var I=0;
I<G.collections.length;
I++){var J=G.collections[I];
var H=J.id;
if(H==null||H.length==0){H="default";
}this.setCollection(H,Exhibit.Collection.create2(H,J,this._uiContext));
}}if("components" in G){for(var I=0;
I<G.components.length;
I++){var J=G.components[I];
var F=Exhibit.UI.create(J,J.elmt,this._uiContext);
if(F!=null){var H=elmt.id;
if(H==null||H.length==0){H="component"+Math.floor(Math.random()*1000000);
}this.setComponent(H,F);
}}}};
Exhibit._Impl.prototype.configureFromDOM=function(root){var collectionElmts=[];
var coderElmts=[];
var coordinatorElmts=[];
var lensElmts=[];
var facetElmts=[];
var otherElmts=[];
var f=function(elmt){var role=Exhibit.getRoleAttribute(elmt);
if(role.length>0){switch(role){case"collection":collectionElmts.push(elmt);
break;
case"coder":coderElmts.push(elmt);
break;
case"coordinator":coordinatorElmts.push(elmt);
break;
case"lens":case"submission-lens":case"edit-lens":lensElmts.push(elmt);
break;
case"facet":facetElmts.push(elmt);
break;
default:otherElmts.push(elmt);
}}else{var node=elmt.firstChild;
while(node!=null){if(node.nodeType==1){f(node);
}node=node.nextSibling;
}}};
f(root||document.body);
var uiContext=this._uiContext;
for(var i=0;
i<collectionElmts.length;
i++){var elmt=collectionElmts[i];
var id=elmt.id;
if(id==null||id.length==0){id="default";
}this.setCollection(id,Exhibit.Collection.createFromDOM2(id,elmt,uiContext));
}var self=this;
var processElmts=function(elmts){for(var i=0;
i<elmts.length;
i++){var elmt=elmts[i];
try{var component=Exhibit.UI.createFromDOM(elmt,uiContext);
if(component!=null){var id=elmt.id;
if(id==null||id.length==0){id="component"+Math.floor(Math.random()*1000000);
}self.setComponent(id,component);
}}catch(e){SimileAjax.Debug.exception(e);
}}};
processElmts(coordinatorElmts);
processElmts(coderElmts);
processElmts(lensElmts);
processElmts(facetElmts);
processElmts(otherElmts);
this.importSettings();
var exporters=Exhibit.getAttribute(document.body,"exporters");
if(exporters!=null){exporters=exporters.split(";");
for(var i=0;
i<exporters.length;
i++){var expr=exporters[i];
var exporter=null;
try{exporter=eval(expr);
}catch(e){}if(exporter==null){try{exporter=eval(expr+"Exporter");
}catch(e){}}if(exporter==null){try{exporter=eval("Exhibit."+expr+"Exporter");
}catch(e){}}if(typeof exporter=="object"){Exhibit.addExporter(exporter);
}}}var hash=document.location.hash;
if(hash.length>1){var itemID=decodeURIComponent(hash.substr(1));
if(this._database.containsItem(itemID)){this._showFocusDialogOnItem(itemID);
}}};
Exhibit._Impl.prototype._showFocusDialogOnItem=function(F){var E=SimileAjax.DOM.createDOMFromString("div","<div class='exhibit-focusDialog-viewContainer' id='lensContainer'></div><div class='exhibit-focusDialog-controls'><button id='closeButton'>"+Exhibit.l10n.focusDialogBoxCloseButtonLabel+"</button></div>");
E.elmt.className="exhibit-focusDialog exhibit-ui-protection";
E.close=function(){document.body.removeChild(E.elmt);
};
E.layer=SimileAjax.WindowManager.pushLayer(function(){E.close();
},false);
var D=this._uiContext.getLensRegistry().createLens(F,E.lensContainer,this._uiContext);
E.elmt.style.top=(document.body.scrollTop+100)+"px";
document.body.appendChild(E.elmt);
SimileAjax.WindowManager.registerEvent(E.closeButton,"click",function(B,C,A){SimileAjax.WindowManager.popLayer(E.layer);
},E.layer);
};
Exhibit._Impl.prototype.exportSettings=function(){var D={},F="";
for(var E in this._componentMap){if(typeof this._componentMap[E].exportFacetSelection!=="undefined"){F=this._componentMap[E].exportFacetSelection()||false;
if(F){D[E]=F;
}}}return D;
};
Exhibit._Impl.prototype.importSettings=function(){if(window.location.search.length>0){searchComponents=window.location.search.substr(1,window.location.search.length-1).split("&");
for(var E=0;
E<searchComponents.length;
E++){var G=searchComponents[E].split("=");
var H=G[0];
var F=unescape(G[1]);
if(this._componentMap[H]&&(typeof this._componentMap[H].importFacetSelection!=="undefined")){this._componentMap[H].importFacetSelection(F);
}}}};
Exhibit.Persistence={};
Exhibit.Persistence.getBaseURL=function(E){try{if(E.indexOf("://")<0){var G=Exhibit.Persistence.getBaseURL(document.location.href);
if(E.substr(0,1)=="/"){E=G.substr(0,G.indexOf("/",G.indexOf("://")+3))+E;
}else{E=G+E;
}}var H=E.lastIndexOf("/");
if(H<0){return"";
}else{return E.substr(0,H+1);
}}catch(F){return E;
}};
Exhibit.Persistence.resolveURL=function(C){if(C.indexOf("://")<0){var D=Exhibit.Persistence.getBaseURL(document.location.href);
if(C.substr(0,1)=="/"){C=D.substr(0,D.indexOf("/",D.indexOf("://")+3))+C;
}else{C=D+C;
}}return C;
};
Exhibit.Persistence.getURLWithoutQueryAndHash=function(){var F;
if("_urlWithoutQueryAndHash" in Exhibit){F=Exhibit.Persistence._urlWithoutQueryAndHash;
}else{F=document.location.href;
var E=F.indexOf("#");
var D=F.indexOf("?");
if(D>=0){F=F.substr(0,D);
}else{if(E>=0){F=F.substr(0,E);
}}Exhibit.Persistence._urlWithoutQueryAndHash=F;
}return F;
};
Exhibit.Persistence.getURLWithoutQuery=function(){var D;
if("_urlWithoutQuery" in Exhibit.Persistence){D=Exhibit.Persistence._urlWithoutQuery;
}else{D=document.location.href;
var C=D.indexOf("?");
if(C>=0){D=D.substr(0,C);
}Exhibit.Persistence._urlWithoutQuery=D;
}return D;
};
Exhibit.Persistence.getItemLink=function(B){return Exhibit.Persistence.getURLWithoutQueryAndHash()+"#"+encodeURIComponent(B);
};
Exhibit.ColorCoder=function(B){this._uiContext=B;
this._settings={};
this._map={};
this._mixedCase={label:Exhibit.Coders.l10n.mixedCaseLabel,color:Exhibit.Coders.mixedCaseColor};
this._missingCase={label:Exhibit.Coders.l10n.missingCaseLabel,color:Exhibit.Coders.missingCaseColor};
this._othersCase={label:Exhibit.Coders.l10n.othersCaseLabel,color:Exhibit.Coders.othersCaseColor};
};
Exhibit.ColorCoder._settingSpecs={};
Exhibit.ColorCoder.create=function(E,D){var F=new Exhibit.ColorCoder(Exhibit.UIContext.create(E,D));
Exhibit.ColorCoder._configure(F,E);
return F;
};
Exhibit.ColorCoder.createFromDOM=function(I,G){I.style.display="none";
var H=Exhibit.getConfigurationFromDOM(I);
var L=new Exhibit.ColorCoder(Exhibit.UIContext.create(H,G));
Exhibit.SettingsUtilities.collectSettingsFromDOM(I,Exhibit.ColorCoder._settingSpecs,L._settings);
try{var K=I.firstChild;
while(K!=null){if(K.nodeType==1){L._addEntry(Exhibit.getAttribute(K,"case"),K.firstChild.nodeValue.trim(),Exhibit.getAttribute(K,"color"));
}K=K.nextSibling;
}}catch(J){SimileAjax.Debug.exception(J,"ColorCoder: Error processing configuration of coder");
}Exhibit.ColorCoder._configure(L,H);
return L;
};
Exhibit.ColorCoder._configure=function(H,F){Exhibit.SettingsUtilities.collectSettings(F,Exhibit.ColorCoder._settingSpecs,H._settings);
if("entries" in F){var E=F.entries;
for(var G=0;
G<E.length;
G++){H._addEntry(E[G].kase,E[G].key,E[G].color);
}}};
Exhibit.ColorCoder.prototype.dispose=function(){this._uiContext=null;
this._settings=null;
};
Exhibit.ColorCoder._colorTable={"red":"#ff0000","green":"#00ff00","blue":"#0000ff","white":"#ffffff","black":"#000000","gray":"#888888"};
Exhibit.ColorCoder.prototype._addEntry=function(H,G,E){if(E in Exhibit.ColorCoder._colorTable){E=Exhibit.ColorCoder._colorTable[E];
}var F=null;
switch(H){case"others":F=this._othersCase;
break;
case"mixed":F=this._mixedCase;
break;
case"missing":F=this._missingCase;
break;
}if(F!=null){F.label=G;
F.color=E;
}else{this._map[G]={color:E};
}};
Exhibit.ColorCoder.prototype.translate=function(D,C){if(D in this._map){if(C){C.keys.add(D);
}return this._map[D].color;
}else{if(D==null){if(C){C.missing=true;
}return this._missingCase.color;
}else{if(C){C.others=true;
}return this._othersCase.color;
}}};
Exhibit.ColorCoder.prototype.translateSet=function(F,E){var G=null;
var H=this;
F.visit(function(A){var B=H.translate(A,E);
if(G==null){G=B;
}else{if(G!=B){if(E){E.mixed=true;
}G=H._mixedCase.color;
return true;
}}return false;
});
if(G!=null){return G;
}else{if(E){E.missing=true;
}return this._missingCase.color;
}};
Exhibit.ColorCoder.prototype.getOthersLabel=function(){return this._othersCase.label;
};
Exhibit.ColorCoder.prototype.getOthersColor=function(){return this._othersCase.color;
};
Exhibit.ColorCoder.prototype.getMissingLabel=function(){return this._missingCase.label;
};
Exhibit.ColorCoder.prototype.getMissingColor=function(){return this._missingCase.color;
};
Exhibit.ColorCoder.prototype.getMixedLabel=function(){return this._mixedCase.label;
};
Exhibit.ColorCoder.prototype.getMixedColor=function(){return this._mixedCase.color;
};
Exhibit.ColorGradientCoder=function(B){this._uiContext=B;
this._settings={};
this._gradientPoints=[];
this._mixedCase={label:Exhibit.Coders.l10n.mixedCaseLabel,color:Exhibit.Coders.mixedCaseColor};
this._missingCase={label:Exhibit.Coders.l10n.missingCaseLabel,color:Exhibit.Coders.missingCaseColor};
this._othersCase={label:Exhibit.Coders.l10n.othersCaseLabel,color:Exhibit.Coders.othersCaseColor};
};
Exhibit.ColorGradientCoder._settingSpecs={};
Exhibit.ColorGradientCoder.create=function(E,D){var F=new Exhibit.ColorGradientCoder(Exhibit.UIContext.create(E,D));
Exhibit.ColorGradientCoder._configure(F,E);
return F;
};
Exhibit.ColorGradientCoder.createFromDOM=function(R,Z){R.style.display="none";
var P=Exhibit.getConfigurationFromDOM(R);
var Q=new Exhibit.ColorGradientCoder(Exhibit.UIContext.create(P,Z));
Exhibit.SettingsUtilities.collectSettingsFromDOM(R,Exhibit.ColorGradientCoder._settingSpecs,Q._settings);
try{var W=Exhibit.getAttribute(R,"gradientPoints",";");
for(var Y=0;
Y<W.length;
Y++){var S=W[Y];
var T=parseFloat(S);
var U=S.indexOf("#")+1;
var b=parseInt(S.slice(U,U+2),16);
var a=parseInt(S.slice(U+2,U+4),16);
var V=parseInt(S.slice(U+4),16);
Q._gradientPoints.push({value:T,red:b,green:a,blue:V});
}var O=R.firstChild;
while(O!=null){if(O.nodeType==1){Q._addEntry(Exhibit.getAttribute(O,"case"),O.firstChild.nodeValue.trim(),Exhibit.getAttribute(O,"color"));
}O=O.nextSibling;
}}catch(X){SimileAjax.Debug.exception(X,"ColorGradientCoder: Error processing configuration of coder");
}Exhibit.ColorGradientCoder._configure(Q,P);
return Q;
};
Exhibit.ColorGradientCoder._configure=function(H,F){Exhibit.SettingsUtilities.collectSettings(F,Exhibit.ColorGradientCoder._settingSpecs,H._settings);
if("entries" in F){var E=F.entries;
for(var G=0;
G<E.length;
G++){H._addEntry(E[G].kase,E[G].key,E[G].color);
}}};
Exhibit.ColorGradientCoder.prototype.dispose=function(){this._uiContext=null;
this._settings=null;
};
Exhibit.ColorGradientCoder.prototype._addEntry=function(H,G,E){var F=null;
switch(H){case"others":F=this._othersCase;
break;
case"mixed":F=this._mixedCase;
break;
case"missing":F=this._missingCase;
break;
}if(F!=null){F.label=G;
F.color=E;
}};
Exhibit.ColorGradientCoder.prototype.translate=function(J,F){var G=this._gradientPoints;
var H=function(D){if(D.constructor!=Number){D=parseFloat(D);
}for(j=0;
j<G.length;
j++){if(D==G[j].value){return I(G[j].red,G[j].green,G[j].blue);
}else{if(G[j+1]!=null){if(D<G[j+1].value){var C=(D-G[j].value)/(G[j+1].value-G[j].value);
var E=Math.floor(G[j].red+C*(G[j+1].red-G[j].red));
var B=Math.floor(G[j].green+C*(G[j+1].green-G[j].green));
var A=Math.floor(G[j].blue+C*(G[j+1].blue-G[j].blue));
return I(E,B,A);
}}}}};
var I=function(A,B,D){var C=function(E){if(E==0){return"00";
}else{return E.toString(16);
}};
return"#"+C(A)+C(B)+C(D);
};
if(J>=G[0].value&J<=G[G.length-1].value){if(F){F.keys.add(J);
}return H(J);
}else{if(J==null){if(F){F.missing=true;
}return this._missingCase.color;
}else{if(F){F.others=true;
}return this._othersCase.color;
}}};
Exhibit.ColorGradientCoder.prototype.translateSet=function(F,E){var G=null;
var H=this;
F.visit(function(A){var B=H.translate(A,E);
if(G==null){G=B;
}else{if(G!=B){if(E){E.mixed=true;
}G=H._mixedCase.color;
return true;
}}return false;
});
if(G!=null){return G;
}else{if(E){E.missing=true;
}return this._missingCase.color;
}};
Exhibit.ColorGradientCoder.prototype.getOthersLabel=function(){return this._othersCase.label;
};
Exhibit.ColorGradientCoder.prototype.getOthersColor=function(){return this._othersCase.color;
};
Exhibit.ColorGradientCoder.prototype.getMissingLabel=function(){return this._missingCase.label;
};
Exhibit.ColorGradientCoder.prototype.getMissingColor=function(){return this._missingCase.color;
};
Exhibit.ColorGradientCoder.prototype.getMixedLabel=function(){return this._mixedCase.label;
};
Exhibit.ColorGradientCoder.prototype.getMixedColor=function(){return this._mixedCase.color;
};
Exhibit.DefaultColorCoder=function(B){};
Exhibit.DefaultColorCoder.colors=["#FF9000","#5D7CBA","#A97838","#8B9BBA","#FFC77F","#003EBA","#29447B","#543C1C"];
Exhibit.DefaultColorCoder._map={};
Exhibit.DefaultColorCoder._nextColor=0;
Exhibit.DefaultColorCoder.prototype.translate=function(E,D){if(E==null){if(D){D.missing=true;
}return Exhibit.Coders.missingCaseColor;
}else{if(D){D.keys.add(E);
}if(E in Exhibit.DefaultColorCoder._map){return Exhibit.DefaultColorCoder._map[E];
}else{var F=Exhibit.DefaultColorCoder.colors[Exhibit.DefaultColorCoder._nextColor];
Exhibit.DefaultColorCoder._nextColor=(Exhibit.DefaultColorCoder._nextColor+1)%Exhibit.DefaultColorCoder.colors.length;
Exhibit.DefaultColorCoder._map[E]=F;
return F;
}}};
Exhibit.DefaultColorCoder.prototype.translateSet=function(F,E){var G=null;
var H=this;
F.visit(function(A){var B=H.translate(A,E);
if(G==null){G=B;
}else{if(G!=B){G=Exhibit.Coders.mixedCaseColor;
E.mixed=true;
return true;
}}return false;
});
if(G!=null){return G;
}else{E.missing=true;
return Exhibit.Coders.missingCaseColor;
}};
Exhibit.DefaultColorCoder.prototype.getOthersLabel=function(){return Exhibit.Coders.l10n.othersCaseLabel;
};
Exhibit.DefaultColorCoder.prototype.getOthersColor=function(){return Exhibit.Coders.othersCaseColor;
};
Exhibit.DefaultColorCoder.prototype.getMissingLabel=function(){return Exhibit.Coders.l10n.missingCaseLabel;
};
Exhibit.DefaultColorCoder.prototype.getMissingColor=function(){return Exhibit.Coders.missingCaseColor;
};
Exhibit.DefaultColorCoder.prototype.getMixedLabel=function(){return Exhibit.Coders.l10n.mixedCaseLabel;
};
Exhibit.DefaultColorCoder.prototype.getMixedColor=function(){return Exhibit.Coders.mixedCaseColor;
};
Exhibit.IconCoder=function(B){this._uiContext=B;
this._settings={};
this._map={};
this._mixedCase={label:"mixed",icon:null};
this._missingCase={label:"missing",icon:null};
this._othersCase={label:"others",icon:null};
};
Exhibit.IconCoder._settingSpecs={};
Exhibit.IconCoder.create=function(E,D){var F=new Exhibit.IconCoder(Exhibit.UIContext.create(E,D));
Exhibit.IconCoder._configure(F,E);
return F;
};
Exhibit.IconCoder.createFromDOM=function(I,G){I.style.display="none";
var H=Exhibit.getConfigurationFromDOM(I);
var L=new Exhibit.IconCoder(Exhibit.UIContext.create(H,G));
Exhibit.SettingsUtilities.collectSettingsFromDOM(I,Exhibit.IconCoder._settingSpecs,L._settings);
try{var K=I.firstChild;
while(K!=null){if(K.nodeType==1){L._addEntry(Exhibit.getAttribute(K,"case"),K.firstChild.nodeValue.trim(),Exhibit.getAttribute(K,"icon"));
}K=K.nextSibling;
}}catch(J){SimileAjax.Debug.exception(J,"IconCoder: Error processing configuration of coder");
}Exhibit.IconCoder._configure(L,H);
return L;
};
Exhibit.IconCoder._configure=function(H,F){Exhibit.SettingsUtilities.collectSettings(F,Exhibit.IconCoder._settingSpecs,H._settings);
if("entries" in F){var E=F.entries;
for(var G=0;
G<E.length;
G++){H._addEntry(E[G].kase,E[G].key,E[G].icon);
}}};
Exhibit.IconCoder.prototype.dispose=function(){this._uiContext=null;
this._settings=null;
};
Exhibit.IconCoder._iconTable={};
Exhibit.IconCoder.prototype._addEntry=function(E,H,G){if(G in Exhibit.IconCoder._iconTable){G=Exhibit.IconCoder._iconTable[G];
}var F=null;
switch(E){case"others":F=this._othersCase;
break;
case"mixed":F=this._mixedCase;
break;
case"missing":F=this._missingCase;
break;
}if(F!=null){F.label=H;
F.icon=G;
}else{this._map[H]={icon:G};
}};
Exhibit.IconCoder.prototype.translate=function(D,C){if(D in this._map){if(C){C.keys.add(D);
}return this._map[D].icon;
}else{if(D==null){if(C){C.missing=true;
}return this._missingCase.icon;
}else{if(C){C.others=true;
}return this._othersCase.icon;
}}};
Exhibit.IconCoder.prototype.translateSet=function(F,E){var G=null;
var H=this;
F.visit(function(A){var B=H.translate(A,E);
if(G==null){G=B;
}else{if(G!=B){if(E){E.mixed=true;
}G=H._mixedCase.icon;
return true;
}}return false;
});
if(G!=null){return G;
}else{if(E){E.missing=true;
}return this._missingCase.icon;
}};
Exhibit.IconCoder.prototype.getOthersLabel=function(){return this._othersCase.label;
};
Exhibit.IconCoder.prototype.getOthersIcon=function(){return this._othersCase.icon;
};
Exhibit.IconCoder.prototype.getMissingLabel=function(){return this._missingCase.label;
};
Exhibit.IconCoder.prototype.getMissingIcon=function(){return this._missingCase.icon;
};
Exhibit.IconCoder.prototype.getMixedLabel=function(){return this._mixedCase.label;
};
Exhibit.IconCoder.prototype.getMixedIcon=function(){return this._mixedCase.icon;
};
Exhibit.SizeCoder=function(B){this._uiContext=B;
this._settings={};
this._map={};
this._mixedCase={label:"mixed",size:10};
this._missingCase={label:"missing",size:10};
this._othersCase={label:"others",size:10};
};
Exhibit.SizeCoder._settingSpecs={};
Exhibit.SizeCoder.create=function(E,D){var F=new Exhibit.SizeCoder(Exhibit.UIContext.create(E,D));
Exhibit.SizeCoder._configure(F,E);
return F;
};
Exhibit.SizeCoder.createFromDOM=function(I,G){I.style.display="none";
var H=Exhibit.getConfigurationFromDOM(I);
var L=new Exhibit.SizeCoder(Exhibit.UIContext.create(H,G));
Exhibit.SettingsUtilities.collectSettingsFromDOM(I,Exhibit.SizeCoder._settingSpecs,L._settings);
try{var K=I.firstChild;
while(K!=null){if(K.nodeType==1){L._addEntry(Exhibit.getAttribute(K,"case"),K.firstChild.nodeValue.trim(),Exhibit.getAttribute(K,"size"));
}K=K.nextSibling;
}}catch(J){SimileAjax.Debug.exception(J,"SizeCoder: Error processing configuration of coder");
}Exhibit.SizeCoder._configure(L,H);
return L;
};
Exhibit.SizeCoder._configure=function(H,F){Exhibit.SettingsUtilities.collectSettings(F,Exhibit.SizeCoder._settingSpecs,H._settings);
if("entries" in F){var E=F.entries;
for(var G=0;
G<E.length;
G++){H._addEntry(E[G].kase,E[G].key,E[G].size);
}}};
Exhibit.SizeCoder.prototype.dispose=function(){this._uiContext=null;
this._settings=null;
};
Exhibit.SizeCoder.prototype._addEntry=function(E,G,H){var F=null;
switch(E){case"others":F=this._othersCase;
break;
case"mixed":F=this._mixedCase;
break;
case"missing":F=this._missingCase;
break;
}if(F!=null){F.label=G;
F.size=H;
}else{this._map[G]={size:H};
}};
Exhibit.SizeCoder.prototype.translate=function(D,C){if(D in this._map){if(C){C.keys.add(D);
}return this._map[D].size;
}else{if(D==null){if(C){C.missing=true;
}return this._missingCase.size;
}else{if(C){C.others=true;
}return this._othersCase.size;
}}};
Exhibit.SizeCoder.prototype.translateSet=function(F,E){var G=null;
var H=this;
F.visit(function(B){var A=H.translate(B,E);
if(G==null){G=A;
}else{if(G!=A){if(E){E.mixed=true;
}G=H._mixedCase.size;
return true;
}}return false;
});
if(G!=null){return G;
}else{if(E){E.missing=true;
}return this._missingCase.size;
}};
Exhibit.SizeCoder.prototype.getOthersLabel=function(){return this._othersCase.label;
};
Exhibit.SizeCoder.prototype.getOthersSize=function(){return this._othersCase.size;
};
Exhibit.SizeCoder.prototype.getMissingLabel=function(){return this._missingCase.label;
};
Exhibit.SizeCoder.prototype.getMissingSize=function(){return this._missingCase.size;
};
Exhibit.SizeCoder.prototype.getMixedLabel=function(){return this._mixedCase.label;
};
Exhibit.SizeCoder.prototype.getMixedSize=function(){return this._mixedCase.size;
};
Exhibit.SizeGradientCoder=function(B){this._uiContext=B;
this._settings={};
this._log={func:function(A){return Math.ceil(Math.log(A));
},invFunc:function(A){return Math.ceil(Math.exp(A));
}};
this._linear={func:function(A){return Math.ceil(A);
},invFunc:function(A){return Math.ceil(A);
}};
this._quad={func:function(A){return Math.ceil(Math.pow((A/100),2));
},invFunc:function(A){return Math.sqrt(A)*100;
}};
this._exp={func:function(A){return Math.ceil(Math.exp(A));
},invFunc:function(A){return Math.ceil(Math.log(A));
}};
this._markerScale=this._quad;
this._valueScale=this._linear;
this._gradientPoints=[];
this._mixedCase={label:"mixed",size:20};
this._missingCase={label:"missing",size:20};
this._othersCase={label:"others",size:20};
};
Exhibit.SizeGradientCoder._settingSpecs={};
Exhibit.SizeGradientCoder.create=function(E,D){var F=new Exhibit.SizeGradientCoder(Exhibit.UIContext.create(E,D));
Exhibit.SizeGradientCoder._configure(F,E);
return F;
};
Exhibit.SizeGradientCoder.createFromDOM=function(P,W){P.style.display="none";
var N=Exhibit.getConfigurationFromDOM(P);
var O=new Exhibit.SizeGradientCoder(Exhibit.UIContext.create(N,W));
Exhibit.SettingsUtilities.collectSettingsFromDOM(P,Exhibit.SizeGradientCoder._settingSpecs,O._settings);
try{var X=O._settings.markerScale;
if(X=="log"){O._markerScale=O._log;
}if(X=="linear"){O._markerScale=O._linear;
}if(X=="exp"){O._markerScale=O._exp;
}var T=Exhibit.getAttribute(P,"gradientPoints",";");
for(var V=0;
V<T.length;
V++){var R=T[V].split(",");
var S=parseFloat(R[0]);
var Q=O._markerScale.invFunc(parseFloat(R[1]));
O._gradientPoints.push({value:S,size:Q});
}var M=P.firstChild;
while(M!=null){if(M.nodeType==1){O._addEntry(Exhibit.getAttribute(M,"case"),M.firstChild.nodeValue.trim(),Exhibit.getAttribute(M,"size"));
}M=M.nextSibling;
}}catch(U){SimileAjax.Debug.exception(U,"SizeGradientCoder: Error processing configuration of coder");
}Exhibit.SizeGradientCoder._configure(O,N);
return O;
};
Exhibit.SizeGradientCoder._configure=function(H,F){Exhibit.SettingsUtilities.collectSettings(F,Exhibit.SizeGradientCoder._settingSpecs,H._settings);
if("entries" in F){var E=F.entries;
for(var G=0;
G<E.length;
G++){H._addEntry(E[G].kase,E[G].key,E[G].size);
}}};
Exhibit.SizeGradientCoder.prototype.dispose=function(){this._uiContext=null;
this._settings=null;
};
Exhibit.SizeGradientCoder.prototype._addEntry=function(E,G,H){var F=null;
switch(E){case"others":F=this._othersCase;
break;
case"mixed":F=this._mixedCase;
break;
case"missing":F=this._missingCase;
break;
}if(F!=null){F.label=G;
F.size=H;
}};
Exhibit.SizeGradientCoder.prototype.translate=function(I,F){var J=this;
var G=this._gradientPoints;
var H=function(B){if(B.constructor!=Number){B=parseFloat(B);
}for(j=0;
j<G.length;
j++){if(B==G[j].value){return J._markerScale.func(G[j].size);
}else{if(G[j+1]!=null){if(B<G[j+1].value){var A=(B-G[j].value)/(G[j+1].value-G[j].value);
var C=Math.floor(G[j].size+A*(G[j+1].size-G[j].size));
return J._markerScale.func(C);
}}}}};
if(I>=G[0].value&I<=G[G.length-1].value){if(F){F.keys.add(I);
}return H(I);
}else{if(I==null){if(F){F.missing=true;
}return this._missingCase.size;
}else{if(F){F.others=true;
}return this._othersCase.size;
}}};
Exhibit.SizeGradientCoder.prototype.translateSet=function(F,E){var G=null;
var H=this;
F.visit(function(B){var A=H.translate(B,E);
if(G==null){G=A;
}else{if(G!=A){if(E){E.mixed=true;
}G=H._mixedCase.size;
return true;
}}return false;
});
if(G!=null){return G;
}else{if(E){E.missing=true;
}return this._missingCase.size;
}};
Exhibit.SizeGradientCoder.prototype.getOthersLabel=function(){return this._othersCase.label;
};
Exhibit.SizeGradientCoder.prototype.getOthersSize=function(){return this._othersCase.size;
};
Exhibit.SizeGradientCoder.prototype.getMissingLabel=function(){return this._missingCase.label;
};
Exhibit.SizeGradientCoder.prototype.getMissingSize=function(){return this._missingCase.size;
};
Exhibit.SizeGradientCoder.prototype.getMixedLabel=function(){return this._mixedCase.label;
};
Exhibit.SizeGradientCoder.prototype.getMixedSize=function(){return this._mixedCase.size;
};
Exhibit.Coordinator=function(B){this._uiContext=B;
this._listeners=[];
};
Exhibit.Coordinator.create=function(E,D){var F=new Exhibit.Coordinator(D);
return F;
};
Exhibit.Coordinator.createFromDOM=function(E,D){var F=new Exhibit.Coordinator(Exhibit.UIContext.createFromDOM(E,D,false));
return F;
};
Exhibit.Coordinator.prototype.dispose=function(){this._uiContext.dispose();
this._uiContext=null;
};
Exhibit.Coordinator.prototype.addListener=function(D){var C=new Exhibit.Coordinator._Listener(this,D);
this._listeners.push(C);
return C;
};
Exhibit.Coordinator.prototype._removeListener=function(D){for(var C=0;
C<this._listeners.length;
C++){if(this._listeners[C]==D){this._listeners.splice(C,1);
return ;
}}};
Exhibit.Coordinator.prototype._fire=function(G,F){for(var H=0;
H<this._listeners.length;
H++){var E=this._listeners[H];
if(E!=G){E._callback(F);
}}};
Exhibit.Coordinator._Listener=function(C,D){this._coordinator=C;
this._callback=D;
};
Exhibit.Coordinator._Listener.prototype.dispose=function(){this._coordinator._removeListener(this);
};
Exhibit.Coordinator._Listener.prototype.fire=function(B){this._coordinator._fire(this,B);
};
Exhibit.AlphaRangeFacet=function(E,F){this._div=E;
this._uiContext=F;
this._expression=null;
this._settings={};
this._dom=null;
this._ranges=[];
var D=this;
this._listener={onRootItemsChanged:function(){if("_rangeIndex" in D){delete D._rangeIndex;
}}};
F.getCollection().addListener(this._listener);
};
Exhibit.AlphaRangeFacet._settingSpecs={"facetLabel":{type:"text"},"scroll":{type:"boolean",defaultValue:true},"height":{type:"text"},"interval":{type:"int",defaultValue:7},"collapsible":{type:"boolean",defaultValue:false},"collapsed":{type:"boolean",defaultValue:false}};
Exhibit.AlphaRangeFacet.create=function(F,H,E){var E=Exhibit.UIContext.create(F,E);
var G=new Exhibit.AlphaRangeFacet(H,E);
Exhibit.AlphaRangeFacet._configure(G,F);
G._initializeUI();
E.getCollection().addFacet(G);
return G;
};
Exhibit.AlphaRangeFacet.createFromDOM=function(K,L,H){var I=Exhibit.getConfigurationFromDOM(K);
var H=Exhibit.UIContext.createFromDOM(K,H);
var J=new Exhibit.AlphaRangeFacet(L!=null?L:K,H);
Exhibit.SettingsUtilities.collectSettingsFromDOM(K,Exhibit.AlphaRangeFacet._settingSpecs,J._settings);
try{var N=Exhibit.getAttribute(K,"expression");
if(N!=null&&N.length>0){J._expression=Exhibit.ExpressionParser.parse(N);
}}catch(M){SimileAjax.Debug.exception(M,"AlphaRangeFacet: Error processing configuration of alpha range facet");
}Exhibit.AlphaRangeFacet._configure(J,I);
J._initializeUI();
H.getCollection().addFacet(J);
return J;
};
Exhibit.AlphaRangeFacet._configure=function(F,G){Exhibit.SettingsUtilities.collectSettings(G,Exhibit.AlphaRangeFacet._settingSpecs,F._settings);
if("expression" in G){F._expression=Exhibit.ExpressionParser.parse(G.expression);
}if(!("facetLabel" in F._settings)){F._settings.facetLabel="missing ex:facetLabel";
if(F._expression!=null&&F._expression.isPath()){var E=F._expression.getPath().getLastSegment();
var H=F._uiContext.getDatabase().getProperty(E.property);
if(H!=null){F._settings.facetLabel=E.forward?H.getLabel():H.getReverseLabel();
}}}if(F._settings.collapsed){F._settings.collapsible=true;
}};
Exhibit.AlphaRangeFacet.prototype.dispose=function(){this._uiContext.getCollection().removeFacet(this);
this._uiContext.getCollection().removeListener(this._listener);
this._uiContext=null;
this._div.innerHTML="";
this._div=null;
this._dom=null;
this._expression=null;
this._settings=null;
this._ranges=[];
};
Exhibit.AlphaRangeFacet.prototype.hasRestrictions=function(){return this._ranges.length>0;
};
Exhibit.AlphaRangeFacet.prototype.clearAllRestrictions=function(){var B=[];
if(this._ranges.length>0){B=B.concat(this._ranges);
this._ranges=[];
this._notifyCollection();
}return B;
};
Exhibit.AlphaRangeFacet.prototype.applyRestrictions=function(B){this._ranges=B;
this._notifyCollection();
};
Exhibit.AlphaRangeFacet.prototype.setRange=function(G,H,I){if(I){for(var J=0;
J<this._ranges.length;
J++){var F=this._ranges[J];
if(F.from==G&&F.to==H){return ;
}}this._ranges.push({from:G,to:H});
}else{for(var J=0;
J<this._ranges.length;
J++){var F=this._ranges[J];
if(F.from==G&&F.to==H){this._ranges.splice(J,1);
break;
}}}this._notifyCollection();
};
Exhibit.AlphaRangeFacet.prototype.restrict=function(H){if(this._ranges.length==0){return H;
}else{this._buildRangeIndex();
var F=new Exhibit.Set();
for(var G=0;
G<this._ranges.length;
G++){var E=this._ranges[G];
this._rangeIndex.getSubjectsInRange(E.from,String.fromCharCode(E.to.charCodeAt(0)+1),true,F,H);
}return F;
}};
Exhibit.AlphaRangeFacet.prototype.update=function(B){this._dom.valuesContainer.style.display="none";
this._dom.valuesContainer.innerHTML="";
this._reconstruct(B);
this._dom.valuesContainer.style.display="block";
};
Exhibit.AlphaRangeFacet.prototype._reconstruct=function(d){var V=this;
var U=[];
var i;
var R;
this._buildRangeIndex();
i=this._rangeIndex;
countItems=function(A){return i.getSubjectsInRange(A.from,String.fromCharCode(A.to.charCodeAt(0)+1),true,null,d).size();
};
var c=[];
var S=function(A){for(Y in c){if(c[Y]==A){return true;
}}return false;
};
for(var Z=0;
Z<i.getCount();
Z+=1){var T=i._pairs[Z].value.substr(0,1).toUpperCase();
if(!S(T)){c.push(T);
}}for(var Y=0;
Y<c.length;
Y+=this._settings.interval){var g={from:c[Y],to:c[(Y+this._settings.interval>=c.length?c.length-1:Y+this._settings.interval-1)],selected:false};
g.count=countItems(g);
for(var h=0;
h<this._ranges.length;
h++){var W=this._ranges[h];
if(W.from==g.from&&W.to==g.to){g.selected=true;
X=true;
break;
}}U.push(g);
}var X=this._ranges.length>0;
var a=this._dom.valuesContainer;
a.style.display="none";
var e=Exhibit.FacetUtilities[this._settings.scroll?"constructFacetItem":"constructFlowingFacetItem"];
var b=function(G,A,B,C){var F=function(I,J,H){V._toggleRange(G,A,C,false);
SimileAjax.DOM.cancelEvent(J);
return false;
};
var D=function(I,J,H){V._toggleRange(G,A,C,!(J.ctrlKey||J.metaKey));
SimileAjax.DOM.cancelEvent(J);
return false;
};
var E=e(G.substr(0,1)+" - "+A.substr(0,1),B,null,C,X,F,D,V._uiContext);
a.appendChild(E);
};
for(var h=0;
h<U.length;
h++){var g=U[h];
if(g.selected||g.count>0){b(g.from,g.to,g.count,g.selected);
}}a.style.display="block";
this._dom.setSelectionCount(this._ranges.length);
};
Exhibit.AlphaRangeFacet.prototype._notifyCollection=function(){this._uiContext.getCollection().onFacetUpdated(this);
};
Exhibit.AlphaRangeFacet.prototype._initializeUI=function(){var B=this;
this._dom=Exhibit.FacetUtilities[this._settings.scroll?"constructFacetFrame":"constructFlowingFacetFrame"](this,this._div,this._settings.facetLabel,function(E,F,A){B._clearSelections();
},this._uiContext,this._settings.collapsible,this._settings.collapsed);
if("height" in this._settings){this._dom.valuesContainer.style.height=this._settings.height;
}};
Exhibit.AlphaRangeFacet.prototype._toggleRange=function(P,O,J,R){var N=this;
var Q=P+" to "+O;
var M=(this._ranges.length==1&&J);
if(R&&!M){var L=[{from:P,to:O}];
var K=[].concat(this._ranges);
SimileAjax.History.addLengthyAction(function(){N.applyRestrictions(L);
},function(){N.applyRestrictions(K);
},String.substitute(Exhibit.FacetUtilities.l10n["facetSelectOnlyActionTitle"],[Q,this._settings.facetLabel]));
}else{SimileAjax.History.addLengthyAction(function(){N.setRange(P,O,!J);
},function(){N.setRange(P,O,J);
},String.substitute(Exhibit.FacetUtilities.l10n[J?"facetUnselectActionTitle":"facetSelectActionTitle"],[Q,this._settings.facetLabel]));
}};
Exhibit.AlphaRangeFacet.prototype._clearSelections=function(){var D={};
var C=this;
SimileAjax.History.addLengthyAction(function(){D.restrictions=C.clearAllRestrictions();
},function(){C.applyRestrictions(D.restrictions);
},String.substitute(Exhibit.FacetUtilities.l10n["facetClearSelectionsActionTitle"],[this._settings.facetLabel]));
};
Exhibit.AlphaRangeFacet.prototype._buildRangeIndex=function(){if(!("_rangeIndex" in this)){var G=this._expression;
var H=this._uiContext.getDatabase();
var J=G.getPath().getLastSegment();
var I=H.getProperty(J.property);
var F=function(B,A){H.getObjects(B,I.getID(),null,null).visit(function(C){A(C.toUpperCase());
});
};
this._rangeIndex=new Exhibit.Database._RangeIndex(this._uiContext.getCollection().getAllItems(),F);
}};
Exhibit.AlphaRangeFacet.prototype.exportFacetSelection=function(){var E=[];
for(var F=0;
F<this._ranges.length;
F++){var D=this._ranges[F];
E.push(D.from+"|"+D.to);
}return E.join(",");
};
Exhibit.AlphaRangeFacet.prototype.importFacetSelection=function(F){if(F.length>0){var E=F.split(",");
for(var G=0;
G<E.length;
G++){var H=E[G].split("|");
this._ranges.push({from:H[0],to:H[1]});
}}if(E&&E.length>0){this.update();
this._notifyCollection();
}};
Exhibit.CloudFacet=function(E,F){this._div=E;
this._uiContext=F;
this._colorCoder=null;
this._expression=null;
this._valueSet=new Exhibit.Set();
this._selectMissing=false;
this._settings={};
this._dom=null;
var D=this;
this._listener={onRootItemsChanged:function(){if("_itemToValue" in D){delete D._itemToValue;
}if("_valueToItem" in D){delete D._valueToItem;
}if("_missingItems" in D){delete D._missingItems;
}}};
F.getCollection().addListener(this._listener);
};
Exhibit.CloudFacet._settingSpecs={"facetLabel":{type:"text"},"minimumCount":{type:"int",defaultValue:1},"showMissing":{type:"boolean",defaultValue:true},"missingLabel":{type:"text"}};
Exhibit.CloudFacet.create=function(F,H,E){var E=Exhibit.UIContext.create(F,E);
var G=new Exhibit.CloudFacet(H,E);
Exhibit.CloudFacet._configure(G,F);
G._initializeUI();
E.getCollection().addFacet(G);
return G;
};
Exhibit.CloudFacet.createFromDOM=function(O,L,U){var M=Exhibit.getConfigurationFromDOM(O);
var U=Exhibit.UIContext.createFromDOM(O,U);
var N=new Exhibit.CloudFacet(L!=null?L:O,U);
Exhibit.SettingsUtilities.collectSettingsFromDOM(O,Exhibit.CloudFacet._settingSpecs,N._settings);
try{var V=Exhibit.getAttribute(O,"expression");
if(V!=null&&V.length>0){N._expression=Exhibit.ExpressionParser.parse(V);
}var Q=Exhibit.getAttribute(O,"selection",";");
if(Q!=null&&Q.length>0){for(var T=0,P;
P=Q[T];
T++){N._valueSet.add(P);
}}var S=Exhibit.getAttribute(O,"selectMissing");
if(S!=null&&S.length>0){N._selectMissing=(S=="true");
}}catch(R){SimileAjax.Debug.exception(R,"CloudFacet: Error processing configuration of cloud facet");
}Exhibit.CloudFacet._configure(N,M);
N._initializeUI();
U.getCollection().addFacet(N);
return N;
};
Exhibit.CloudFacet._configure=function(F,G){Exhibit.SettingsUtilities.collectSettings(G,Exhibit.CloudFacet._settingSpecs,F._settings);
if("expression" in G){F._expression=Exhibit.ExpressionParser.parse(G.expression);
}if("selection" in G){var H=G.selection;
for(var E=0;
E<H.length;
E++){F._valueSet.add(H[E]);
}}if("selectMissing" in G){F._selectMissing=G.selectMissing;
}};
Exhibit.CloudFacet.prototype.dispose=function(){this._uiContext.getCollection().removeFacet(this);
this._uiContext.getCollection().removeListener(this._listener);
this._uiContext=null;
this._div.innerHTML="";
this._div=null;
this._dom=null;
this._expression=null;
this._valueSet=null;
this._settings=null;
this._itemToValue=null;
this._valueToItem=null;
this._missingItems=null;
};
Exhibit.CloudFacet.prototype.hasRestrictions=function(){return this._valueSet.size()>0||this._selectMissing;
};
Exhibit.CloudFacet.prototype.clearAllRestrictions=function(){var B={selection:[],selectMissing:false};
if(this.hasRestrictions()){this._valueSet.visit(function(A){B.selection.push(A);
});
this._valueSet=new Exhibit.Set();
B.selectMissing=this._selectMissing;
this._selectMissing=false;
this._notifyCollection();
}return B;
};
Exhibit.CloudFacet.prototype.applyRestrictions=function(D){this._valueSet=new Exhibit.Set();
for(var C=0;
C<D.selection.length;
C++){this._valueSet.add(D.selection[C]);
}this._selectMissing=D.selectMissing;
this._notifyCollection();
};
Exhibit.CloudFacet.prototype.setSelection=function(D,C){if(C){this._valueSet.add(D);
}else{this._valueSet.remove(D);
}this._notifyCollection();
};
Exhibit.CloudFacet.prototype.setSelectMissing=function(B){if(B!=this._selectMissing){this._selectMissing=B;
this._notifyCollection();
}};
Exhibit.CloudFacet.prototype.restrict=function(H){if(this._valueSet.size()==0&&!this._selectMissing){return H;
}var F;
if(this._expression.isPath()){F=this._expression.getPath().walkBackward(this._valueSet,"item",H,this._uiContext.getDatabase()).getSet();
}else{this._buildMaps();
F=new Exhibit.Set();
var G=this._valueToItem;
this._valueSet.visit(function(B){if(B in G){var A=G[B];
for(var D=0;
D<A.length;
D++){var C=A[D];
if(H.contains(C)){F.add(C);
}}}});
}if(this._selectMissing){this._buildMaps();
var E=this._missingItems;
H.visit(function(A){if(A in E){F.add(A);
}});
}return F;
};
Exhibit.CloudFacet.prototype.update=function(B){this._constructBody(this._computeFacet(B));
};
Exhibit.CloudFacet.prototype._computeFacet=function(g){var i=this._uiContext.getDatabase();
var k=[];
var X="text";
var h=this;
if(this._expression.isPath()){var e=this._expression.getPath();
var U=e.walkForward(g,"item",i);
X=U.valueType;
if(U.size>0){U.forEachValue(function(A){var B=e.evaluateBackward(A,X,g,i);
if(B.size>=h._settings.minimumCount||h._valueSet.contains(A)){k.push({value:A,count:B.size});
}});
}}else{this._buildMaps();
X=this._valueType;
for(var c in this._valueToItem){var d=this._valueToItem[c];
var l=0;
for(var Z=0;
Z<d.length;
Z++){if(g.contains(d[Z])){l++;
}}if(l>=this._settings.minimumCount||this._valueSet.contains(c)){k.push({value:c,count:l});
}}}if(k.length>0){var V=this._valueSet;
var o=X=="item"?function(A){var B=i.getObject(A,"label");
return B!=null?B:A;
}:function(A){return A;
};
for(var Z=0;
Z<k.length;
Z++){var q=k[Z];
q.actionLabel=q.selectionLabel=o(q.value);
q.selected=V.contains(q.value);
}var m=function(A,B){return A.selectionLabel.localeCompare(B.selectionLabel);
};
if("_orderMap" in this){var Y=this._orderMap;
m=function(A,B){if(A.selectionLabel in Y){if(B.selectionLabel in Y){return Y[A.selectionLabel]-Y[B.selectionLabel];
}else{return -1;
}}else{if(B.selectionLabel in Y){return 1;
}else{return A.selectionLabel.localeCompare(B.selectionLabel);
}}};
}else{if(X=="number"){m=function(A,B){A=parseFloat(A.value);
B=parseFloat(B.value);
return A<B?-1:A>B?1:0;
};
}}var b=m;
if(this._settings.sortMode=="count"){b=function(B,C){var A=C.count-B.count;
return A!=0?A:m(B,C);
};
}var n=b;
if(this._settings.sortDirection=="reverse"){n=function(A,B){return b(B,A);
};
}k.sort(n);
}if(this._settings.showMissing||this._selectMissing){this._buildMaps();
var l=0;
for(var W in this._missingItems){if(g.contains(W)){l++;
}}if(l>0||this._selectMissing){var a=document.createElement("span");
a.innerHTML=("missingLabel" in this._settings)?this._settings.missingLabel:Exhibit.FacetUtilities.l10n.missingThisField;
a.className="exhibit-facet-value-missingThisField";
k.unshift({value:null,count:l,selected:this._selectMissing,selectionLabel:a,actionLabel:Exhibit.FacetUtilities.l10n.missingThisField});
}}return k;
};
Exhibit.CloudFacet.prototype._notifyCollection=function(){this._uiContext.getCollection().onFacetUpdated(this);
};
Exhibit.CloudFacet.prototype._initializeUI=function(){this._div.innerHTML="";
this._div.className="exhibit-cloudFacet";
var B=SimileAjax.DOM.createDOMFromString(this._div,(("facetLabel" in this._settings)?("<div class='exhibit-cloudFacet-header'><span class='exhibit-cloudFacet-header-title'>"+this._settings.facetLabel+"</span></div>"):"")+"<div class='exhibit-cloudFacet-body' id='valuesContainer'></div>");
this._dom=B;
};
Exhibit.CloudFacet.prototype._constructBody=function(R){var N=this;
var M=this._dom.valuesContainer;
M.style.display="none";
M.innerHTML="";
if(R.length>0){var L=Number.POSITIVE_INFINITY;
var P=Number.NEGATIVE_INFINITY;
for(var K=0;
K<R.length;
K++){var O=R[K];
L=Math.min(L,O.count);
P=Math.max(P,O.count);
}var J=P-L;
var Q=function(A){var C=function(E,F,D){N._filter(A.value,A.actionLabel,!(F.ctrlKey||F.metaKey));
SimileAjax.DOM.cancelEvent(F);
return false;
};
var B=document.createElement("span");
B.appendChild(document.createTextNode("\u00A0"));
if(typeof A.selectionLabel=="string"){B.appendChild(document.createTextNode(A.selectionLabel));
}else{B.appendChild(A.selectionLabel);
}B.appendChild(document.createTextNode("\u00A0"));
B.className=A.selected?"exhibit-cloudFacet-value exhibit-cloudFacet-value-selected":"exhibit-cloudFacet-value";
if(A.count>L){B.style.fontSize=Math.ceil(100+100*Math.log(1+1.5*(A.count-L)/J))+"%";
}SimileAjax.WindowManager.registerEvent(B,"click",C,SimileAjax.WindowManager.getBaseLayer());
M.appendChild(B);
M.appendChild(document.createTextNode(" "));
};
for(var K=0;
K<R.length;
K++){Q(R[K]);
}}M.style.display="block";
};
Exhibit.CloudFacet.prototype._filter=function(Z,c,T){var X=this;
var S,b,e;
var Y=new Exhibit.Set(this._valueSet);
var a=this._selectMissing;
var V;
var d;
var U;
var g;
var R;
if(Z==null){g=a;
R=g&&(Y.size()==0);
if(T){if(Y.size()==0){d=!a;
}else{d=true;
}V=new Exhibit.Set();
}else{d=!a;
V=new Exhibit.Set(Y);
}}else{g=Y.contains(Z);
R=g&&(Y.size()==1)&&!a;
if(T){d=false;
V=new Exhibit.Set();
if(!Y.contains(Z)){V.add(Z);
}else{if(Y.size()>1||a){V.add(Z);
}}}else{d=a;
V=new Exhibit.Set(Y);
if(V.contains(Z)){V.remove(Z);
}else{V.add(Z);
}}}var i={selection:V.toArray(),selectMissing:d};
var h={selection:Y.toArray(),selectMissing:a};
var W=("facetLabel" in this._settings)?this._settings.facetLabel:"";
SimileAjax.History.addLengthyAction(function(){X.applyRestrictions(i);
},function(){X.applyRestrictions(h);
},(T&&!R)?String.substitute(Exhibit.FacetUtilities.l10n["facetSelectOnlyActionTitle"],[c,W]):String.substitute(Exhibit.FacetUtilities.l10n[g?"facetUnselectActionTitle":"facetSelectActionTitle"],[c,W]));
};
Exhibit.CloudFacet.prototype._clearSelections=function(){var D={};
var C=this;
SimileAjax.History.addLengthyAction(function(){D.restrictions=C.clearAllRestrictions();
},function(){C.applyRestrictions(D.restrictions);
},String.substitute(Exhibit.FacetUtilities.l10n["facetClearSelectionsActionTitle"],[this._settings.facetLabel]));
};
Exhibit.CloudFacet.prototype._buildMaps=function(){if(!("_itemToValue" in this)){var N={};
var M={};
var H={};
var I="text";
var K=function(C,A,B){if(C in B){B[C].push(A);
}else{B[C]=[A];
}};
var J=this._expression;
var L=this._uiContext.getDatabase();
this._uiContext.getCollection().getAllItems().visit(function(A){var B=J.evaluateOnItem(A,L);
if(B.values.size()>0){I=B.valueType;
B.values.visit(function(C){K(A,C,N);
K(C,A,M);
});
}else{H[A]=true;
}});
this._itemToValue=N;
this._valueToItem=M;
this._missingItems=H;
this._valueType=I;
}};
Exhibit.HierarchicalFacet=function(E,F){this._div=E;
this._uiContext=F;
this._colorCoder=null;
this._expression=null;
this._uniformGroupingExpression=null;
this._selections=[];
this._expanded={};
this._settings={};
this._dom=null;
var D=this;
this._listener={onRootItemsChanged:function(){if("_cache" in D){delete D._cache;
}}};
F.getCollection().addListener(this._listener);
};
Exhibit.HierarchicalFacet._settingSpecs={"facetLabel":{type:"text"},"fixedOrder":{type:"text"},"sortMode":{type:"text",defaultValue:"value"},"sortDirection":{type:"text",defaultValue:"forward"},"othersLabel":{type:"text"},"scroll":{type:"boolean",defaultValue:true},"height":{type:"text"},"colorCoder":{type:"text",defaultValue:null},"collapsible":{type:"boolean",defaultValue:false},"collapsed":{type:"boolean",defaultValue:false}};
Exhibit.HierarchicalFacet.create=function(F,H,E){var E=Exhibit.UIContext.create(F,E);
var G=new Exhibit.HierarchicalFacet(H,E);
Exhibit.HierarchicalFacet._configure(G,F);
G._initializeUI();
E.getCollection().addFacet(G);
return G;
};
Exhibit.HierarchicalFacet.createFromDOM=function(O,V,T){var L=Exhibit.getConfigurationFromDOM(O);
var T=Exhibit.UIContext.createFromDOM(O,T);
var M=new Exhibit.HierarchicalFacet(V!=null?V:O,T);
Exhibit.SettingsUtilities.collectSettingsFromDOM(O,Exhibit.HierarchicalFacet._settingSpecs,M._settings);
try{var U=Exhibit.getAttribute(O,"expression");
if(U!=null&&U.length>0){M._expression=Exhibit.ExpressionParser.parse(U);
}var N=Exhibit.getAttribute(O,"uniformGrouping");
if(N!=null&&N.length>0){M._uniformGroupingExpression=Exhibit.ExpressionParser.parse(N);
}var Q=Exhibit.getAttribute(O,"selection",";");
if(Q!=null&&Q.length>0){for(var S=0,P;
P=Q[S];
S++){M._selections=M._internalAddSelection({value:P,selectOthers:false});
}}}catch(R){SimileAjax.Debug.exception(R,"HierarchicalFacet: Error processing configuration of hierarchical facet");
}Exhibit.HierarchicalFacet._configure(M,L);
M._initializeUI();
T.getCollection().addFacet(M);
return M;
};
Exhibit.HierarchicalFacet._configure=function(J,K){Exhibit.SettingsUtilities.collectSettings(K,Exhibit.HierarchicalFacet._settingSpecs,J._settings);
if("expression" in K){J._expression=Exhibit.ExpressionParser.parse(K.expression);
}if("uniformGrouping" in K){J._uniformGroupingExpression=Exhibit.ExpressionParser.parse(K.uniformGrouping);
}if("selection" in K){var O=K.selection;
for(var P=0;
P<O.length;
P++){J._selections.push({value:O[P],selectOthers:false});
}}if(!("facetLabel" in J._settings)){J._settings.facetLabel="missing ex:facetLabel";
if(J._expression!=null&&J._expression.isPath()){var N=J._expression.getPath().getLastSegment();
var M=J._uiContext.getDatabase().getProperty(N.property);
if(M!=null){J._settings.facetLabel=N.forward?M.getLabel():M.getReverseLabel();
}}}if("fixedOrder" in J._settings){var I=J._settings.fixedOrder.split(";");
var L={};
for(var P=0;
P<I.length;
P++){L[I[P].trim()]=P;
}J._orderMap=L;
}if("colorCoder" in J._settings){J._colorCoder=J._uiContext.getExhibit().getComponent(J._settings.colorCoder);
}if(J._settings.collapsed){J._settings.collapsible=true;
}};
Exhibit.HierarchicalFacet.prototype.dispose=function(){this._uiContext.getCollection().removeFacet(this);
this._uiContext.getCollection().removeListener(this._listener);
this._uiContext=null;
this._colorCoder=null;
this._div.innerHTML="";
this._div=null;
this._dom=null;
this._expression=null;
this._uniformGroupingExpression=null;
this._selections=null;
this._settings=null;
this._cache=null;
};
Exhibit.HierarchicalFacet.prototype.hasRestrictions=function(){return this._selections.length>0;
};
Exhibit.HierarchicalFacet.prototype.clearAllRestrictions=function(){var B=this._selections;
this._selections=[];
if(B.length>0){this._notifyCollection();
}return B;
};
Exhibit.HierarchicalFacet.prototype.applyRestrictions=function(B){this._selections=[].concat(B);
this._notifyCollection();
};
Exhibit.HierarchicalFacet.prototype.setSelection=function(E,F){var D={value:E,selectOthers:false};
if(F){this._selections=this._internalAddSelection(D);
}else{this._selections=this._internalRemoveSelection(D);
}this._notifyCollection();
};
Exhibit.HierarchicalFacet.prototype.setselectOthers=function(E,F){var D={value:E,selectOthers:true};
if(F){this._selections=this._internalAddSelection(D);
}else{this._selections=this._internalRemoveSelection(D);
}this._notifyCollection();
};
Exhibit.HierarchicalFacet.prototype.restrict=function(H){if(this._selections.length==0){return H;
}this._buildCache();
var I=new Exhibit.Set();
var K=function(A){if("children" in A){J(A.children);
Exhibit.Set.createIntersection(A.others,H,I);
}else{Exhibit.Set.createIntersection(A.items,H,I);
}};
var J=function(A){for(var B=0;
B<A.length;
B++){K(A[B]);
}};
for(var N=0;
N<this._selections.length;
N++){var M=this._selections[N];
var L=this._getTreeNode(M.value);
if(L){if(M.selectOthers){Exhibit.Set.createIntersection(L.others,H,I);
}else{K(L);
}}}return I;
};
Exhibit.HierarchicalFacet.prototype._internalAddSelection=function(R){var S={};
var P={};
var N=this._cache;
var T=function(C){if(C in N.valueToParent){var B=N.valueToParent[C];
for(var A=0;
A<B.length;
A++){var D=B[A];
S[D]=true;
T(D);
}}};
var M=function(D){if(D in N.valueToChildren){var A=N.valueToChildren[D];
for(var B=0;
B<A.length;
B++){var C=A[B];
P[C]=true;
M(C);
}}};
if(R.value!=null){T(R.value);
if(R.selectOthers){S[R.value]=true;
}else{P[R.value]=true;
M(R.value);
}}var K=this._selections;
var Q=[R];
for(var L=0;
L<K.length;
L++){var O=K[L];
if((!(O.value in S)||O.selectOthers)&&(!(O.value in P))){Q.push(O);
}}return Q;
};
Exhibit.HierarchicalFacet.prototype._internalRemoveSelection=function(H){var G=this._selections;
var F=[];
for(var J=0;
J<G.length;
J++){var I=G[J];
if(I.value!=H.value||I.selectOthers!=H.selectOthers){F.push(I);
}}return F;
};
Exhibit.HierarchicalFacet.prototype.update=function(D){this._dom.valuesContainer.style.display="none";
this._dom.valuesContainer.innerHTML="";
var C=this._computeFacet(D);
if(C){this._constructBody(C);
}this._dom.valuesContainer.style.display="block";
};
Exhibit.HierarchicalFacet.prototype._computeFacet=function(Q){this._buildCache();
var P=this._uiContext.getDatabase();
var O=this._getValueSorter();
var L="othersLabel" in this._settings?this._settings.othersLabel:"(others)";
var R={};
for(var K=0;
K<this._selections.length;
K++){var N=this._selections[K];
R[N.value]=N.selectOthers;
}var J=function(I,G,D){var F=(I.value in R&&!R[I.value]);
if("children" in I){var A={value:I.value,label:I.label,children:[],selected:F,areOthers:false};
var B=new Exhibit.Set();
for(var E=0;
E<I.children.length;
E++){var T=I.children[E];
J(T,A.children,B);
}A.children.sort(O);
if(I.others.size()>0){var C=(I.value in R&&R[I.value]);
var H=Exhibit.Set.createIntersection(Q,I.others);
if(H.size()>0||C){A.children.push({value:I.value,label:L,count:H.size(),selected:C,areOthers:true});
B.addSet(H);
}}A.count=B.size();
if(F||A.count>0||A.children.length>0){G.push(A);
if(D!=null&&B.size()>0){D.addSet(B);
}}}else{var H=Exhibit.Set.createIntersection(Q,I.items);
if(H.size()>0||F){G.push({value:I.value,label:I.label,count:H.size(),selected:F,areOthers:false});
if(D!=null&&H.size()>0){D.addSet(H);
}}}};
var M=[];
J(this._cache.tree,M,null);
return M[0];
};
Exhibit.HierarchicalFacet.prototype._getValueSorter=function(){var G=function(A,B){return A.label.localeCompare(B.label);
};
if("_orderMap" in this){var F=this._orderMap;
G=function(A,B){if(A.label in F){if(B.label in F){return F[A.label]-F[B.label];
}else{return -1;
}}else{if(B.label in F){return 1;
}else{return A.label.localeCompare(B.label);
}}};
}else{if(this._cache.valueType=="number"){G=function(A,B){A=parseFloat(A.value);
B=parseFloat(B.value);
return A<B?-1:A>B?1:0;
};
}}var E=G;
if(this._settings.sortMode=="count"){E=function(B,C){var A=C.count-B.count;
return A!=0?A:G(B,C);
};
}var H=E;
if(this._settings.sortDirection=="reverse"){H=function(A,B){return E(B,A);
};
}return H;
};
Exhibit.HierarchicalFacet.prototype._notifyCollection=function(){this._uiContext.getCollection().onFacetUpdated(this);
};
Exhibit.HierarchicalFacet.prototype._initializeUI=function(){var B=this;
this._dom=Exhibit.FacetUtilities[this._settings.scroll?"constructFacetFrame":"constructFlowingFacetFrame"](this,this._div,this._settings.facetLabel,function(E,F,A){B._clearSelections();
},this._uiContext,this._settings.collapsible,this._settings.collapsed);
if("height" in this._settings&&this._settings.scroll){this._dom.valuesContainer.style.height=this._settings.height;
}};
Exhibit.HierarchicalFacet.prototype._constructBody=function(H){var N=this;
var I=this._dom.valuesContainer;
I.style.display="none";
var J=Exhibit.FacetUtilities[this._settings.scroll?"constructHierarchicalFacetItem":"constructFlowingHierarchicalFacetItem"];
var M=this._selections.length>0;
var K=function(A,F){var E=("children" in A);
var D=function(S,T,R){N._filter(A.value,A.areOthers,A.label,A.selected,false);
SimileAjax.DOM.cancelEvent(T);
return false;
};
var B=function(S,T,R){N._filter(A.value,A.areOthers,A.label,A.selected,!(T.ctrlKey||T.metaKey));
SimileAjax.DOM.cancelEvent(T);
return false;
};
var C=function(T,U,S){var V;
if(A.value in N._expanded){delete N._expanded[A.value];
V=false;
}else{N._expanded[A.value]=true;
V=true;
}G.showChildren(V);
SimileAjax.DOM.cancelEvent(U);
return false;
};
var G=J(A.label,A.count,(N._colorCoder!=null)?N._colorCoder.translate(A.value):null,A.selected,E,(A.value in N._expanded),M,D,B,C,N._uiContext);
F.appendChild(G.elmt);
if(E){L(A.children,G.childrenContainer);
}};
var L=function(B,A){for(var C=0;
C<B.length;
C++){K(B[C],A);
}};
L(H.children,I);
I.style.display="block";
this._dom.setSelectionCount(this._selections.length);
};
Exhibit.HierarchicalFacet.prototype._filter=function(Q,L,R,S,M){var O=this;
var N=S&&this._selections.length==1;
var P={value:Q,selectOthers:L};
var T=this._selections;
var K;
if(S){if(M){if(N){K=[];
}else{K=[P];
}}else{K=this._internalRemoveSelection(P);
}}else{if(M){K=[P];
}else{K=this._internalAddSelection(P);
}}SimileAjax.History.addLengthyAction(function(){O.applyRestrictions(K);
},function(){O.applyRestrictions(T);
},(M&&!N)?String.substitute(Exhibit.FacetUtilities.l10n["facetSelectOnlyActionTitle"],[R,this._settings.facetLabel]):String.substitute(Exhibit.FacetUtilities.l10n[S?"facetUnselectActionTitle":"facetSelectActionTitle"],[R,this._settings.facetLabel]));
};
Exhibit.HierarchicalFacet.prototype._clearSelections=function(){var D={};
var C=this;
SimileAjax.History.addLengthyAction(function(){D.restrictions=C.clearAllRestrictions();
},function(){C.applyRestrictions(D.restrictions);
},String.substitute(Exhibit.FacetUtilities.l10n["facetClearSelectionsActionTitle"],[this._settings.facetLabel]));
};
Exhibit.HierarchicalFacet.prototype._buildCache=function(){if(!("_cache" in this)){var W={};
var R="text";
var P={};
var c={};
var U={};
var Y=new Exhibit.Set();
var X=function(C,A,B){if(C in B){B[C].push(A);
}else{B[C]=[A];
}};
var Z=this._uiContext.getDatabase();
var T={value:null,label:"(root)",others:new Exhibit.Set(),children:[]};
var d=this._expression;
this._uiContext.getCollection().getAllItems().visit(function(A){var B=d.evaluateOnItem(A,Z);
if(B.values.size()>0){R=B.valueType;
B.values.visit(function(C){Y.add(C);
X(C,A,W);
});
}else{T.others.add(A);
}});
var S=this._uniformGroupingExpression;
var V=new Exhibit.Set();
var a=function(B){var A=new Exhibit.Set();
B.visit(function(C){var D=S.evaluateOnItem(C,Z);
if(D.values.size()>0){D.values.visit(function(E){X(C,E,c);
X(E,C,P);
if(!B.contains(E)){A.add(E);
}return true;
});
}else{V.add(C);
}});
if(A.size()>0){a(A);
}};
a(Y);
var b=function(D,J,B,A){var E=Z.getObject(D,"label");
var I={value:D,label:E!=null?E:D};
J.push(I);
U[D]=A;
if(D in P){I.children=[];
var K=new Exhibit.Set();
var F=P[D];
for(var H=0;
H<F.length;
H++){b(F[H],I.children,K,A.concat(H));
}I.others=new Exhibit.Set();
if(D in W){var G=W[D];
for(var H=0;
H<G.length;
H++){var C=G[H];
if(!K.contains(C)){I.others.add(C);
B.add(C);
}}}B.addSet(K);
}else{I.items=new Exhibit.Set();
if(D in W){var G=W[D];
for(var H=0;
H<G.length;
H++){var C=G[H];
I.items.add(C);
B.add(C);
}}}};
var Q=0;
V.visit(function(A){b(A,T.children,new Exhibit.Set(),[Q++]);
});
this._cache={tree:T,valueToChildren:P,valueToParent:c,valueToPath:U,valueType:R};
}};
Exhibit.HierarchicalFacet.prototype._getTreeNode=function(F){if(F==null){return this._cache.tree;
}var E=this._cache.valueToPath[F];
var D=function(B,A,C){var H=B.children[A[C]];
if(++C<A.length){return D(H,A,C);
}else{return H;
}};
return(E)?D(this._cache.tree,E,0):null;
};
Exhibit.ImageFacet=function(D,C){this._div=D;
this._uiContext=C;
this._colorCoder=null;
this._expression=null;
this._valueSet=new Exhibit.Set();
this._selectMissing=false;
this._settings={};
this._dom=null;
};
Exhibit.ImageFacet._settingSpecs={"facetLabel":{type:"text"},"thumbNail":{type:"uri"},"overlayCounts":{type:"boolean",defaultValue:true},"fixedOrder":{type:"text"},"sortMode":{type:"text",defaultValue:"value"},"sortDirection":{type:"text",defaultValue:"forward"},"showMissing":{type:"boolean",defaultValue:true},"missingLabel":{type:"text"},"scroll":{type:"boolean",defaultValue:true},"height":{type:"text"},"colorCoder":{type:"text",defaultValue:null},"collapsible":{type:"boolean",defaultValue:false},"collapsed":{type:"boolean",defaultValue:false}};
Exhibit.ImageFacet.create=function(F,H,E){var E=Exhibit.UIContext.create(F,E);
var G=new Exhibit.ImageFacet(H,E);
Exhibit.ImageFacet._configure(G,F);
G._initializeUI();
E.getCollection().addFacet(G);
return G;
};
Exhibit.ImageFacet.createFromDOM=function(Q,N,X){var O=Exhibit.getConfigurationFromDOM(Q);
var X=Exhibit.UIContext.createFromDOM(Q,X);
var P=new Exhibit.ImageFacet(N!=null?N:Q,X);
Exhibit.SettingsUtilities.collectSettingsFromDOM(Q,Exhibit.ImageFacet._settingSpecs,P._settings);
try{var Z=Exhibit.getAttribute(Q,"expression");
if(Z!=null&&Z.length>0){P._expression=Exhibit.ExpressionParser.parse(Z);
}var Y=Exhibit.getAttribute(Q,"image");
if(Y!=null&&Y.length>0){P._imageExpression=Exhibit.ExpressionParser.parse(Y);
}var S=Exhibit.getAttribute(Q,"tooltip");
if(S!=null&&S.length>0){P._tooltipExpression=Exhibit.ExpressionParser.parse(S);
}var T=Exhibit.getAttribute(Q,"selection",";");
if(T!=null&&T.length>0){for(var W=0,R;
R=T[W];
W++){P._valueSet.add(R);
}}var V=Exhibit.getAttribute(Q,"selectMissing");
if(V!=null&&V.length>0){P._selectMissing=(V=="true");
}}catch(U){SimileAjax.Debug.exception(U,"ImageFacet: Error processing configuration of list facet");
}Exhibit.ImageFacet._configure(P,O);
P._initializeUI();
X.getCollection().addFacet(P);
return P;
};
Exhibit.ImageFacet._configure=function(J,K){Exhibit.SettingsUtilities.collectSettings(K,Exhibit.ImageFacet._settingSpecs,J._settings);
if("expression" in K){J._expression=Exhibit.ExpressionParser.parse(K.expression);
}if("image" in K){J._imageExpression=Exhibit.ExpressionParser.parse(K.image);
}if("tooltip" in K){J._tooltipExpression=Exhibit.ExpressionParser.parse(K.tooltip);
}if(!(J._imageExpression)){J._imageExpression=Exhibit.ExpressionParser.parse("value");
}if(!(J._tooltipExpression)){J._tooltipExpression=Exhibit.ExpressionParser.parse("value");
}if("selection" in K){var O=K.selection;
for(var P=0;
P<O.length;
P++){J._valueSet.add(O[P]);
}}if("selectMissing" in K){J._selectMissing=K.selectMissing;
}if(!("facetLabel" in J._settings)){J._settings.facetLabel="missing ex:facetLabel";
if(J._expression!=null&&J._expression.isPath()){var N=J._expression.getPath().getLastSegment();
var M=J._uiContext.getDatabase().getProperty(N.property);
if(M!=null){J._settings.facetLabel=N.forward?M.getLabel():M.getReverseLabel();
}}}if("fixedOrder" in J._settings){var I=J._settings.fixedOrder.split(";");
var L={};
for(var P=0;
P<I.length;
P++){L[I[P].trim()]=P;
}J._orderMap=L;
}if("colorCoder" in J._settings){J._colorCoder=J._uiContext.getExhibit().getComponent(J._settings.colorCoder);
}if(J._settings.collapsed){J._settings.collapsible=true;
}J._cache=new Exhibit.FacetUtilities.Cache(J._uiContext.getDatabase(),J._uiContext.getCollection(),J._expression);
};
Exhibit.ImageFacet.prototype.dispose=function(){this._cache.dispose();
this._cache=null;
this._uiContext.getCollection().removeFacet(this);
this._uiContext=null;
this._colorCoder=null;
this._div.innerHTML="";
this._div=null;
this._dom=null;
this._expression=null;
this._valueSet=null;
this._settings=null;
};
Exhibit.ImageFacet.prototype.hasRestrictions=function(){return this._valueSet.size()>0||this._selectMissing;
};
Exhibit.ImageFacet.prototype.clearAllRestrictions=function(){var B={selection:[],selectMissing:false};
if(this.hasRestrictions()){this._valueSet.visit(function(A){B.selection.push(A);
});
this._valueSet=new Exhibit.Set();
B.selectMissing=this._selectMissing;
this._selectMissing=false;
this._notifyCollection();
}return B;
};
Exhibit.ImageFacet.prototype.applyRestrictions=function(D){this._valueSet=new Exhibit.Set();
for(var C=0;
C<D.selection.length;
C++){this._valueSet.add(D.selection[C]);
}this._selectMissing=D.selectMissing;
this._notifyCollection();
};
Exhibit.ImageFacet.prototype.setSelection=function(D,C){if(C){this._valueSet.add(D);
}else{this._valueSet.remove(D);
}this._notifyCollection();
};
Exhibit.ImageFacet.prototype.setSelectMissing=function(B){if(B!=this._selectMissing){this._selectMissing=B;
this._notifyCollection();
}};
Exhibit.ImageFacet.prototype.restrict=function(C){if(this._valueSet.size()==0&&!this._selectMissing){return C;
}var D=this._cache.getItemsFromValues(this._valueSet,C);
if(this._selectMissing){this._cache.getItemsMissingValue(C,D);
}return D;
};
Exhibit.ImageFacet.prototype.update=function(B){this._dom.valuesContainer.style.display="none";
this._dom.valuesContainer.innerHTML="";
this._constructBody(this._computeFacet(B));
this._dom.valuesContainer.style.display="block";
};
Exhibit.ImageFacet.prototype._computeFacet=function(R){var N=this._uiContext.getDatabase();
var M=this._cache.getValueCountsFromItems(R);
var J=M.entries;
var L=M.valueType;
if(J.length>0){var O=this._valueSet;
var Q=L=="item"?function(A){var B=N.getObject(A,"label");
return B!=null?B:A;
}:function(A){return A;
};
for(var K=0;
K<J.length;
K++){var P=J[K];
P.actionLabel=P.selectionLabel=Q(P.value);
P.image=this._imageExpression.evaluateSingleOnItem(P.value,N).value;
P.tooltip=this._tooltipExpression.evaluateSingleOnItem(P.value,N).value;
P.selected=O.contains(P.value);
}J.sort(this._createSortFunction(L));
}return J;
};
Exhibit.ImageFacet.prototype._notifyCollection=function(){this._uiContext.getCollection().onFacetUpdated(this);
};
Exhibit.ImageFacet.prototype._initializeUI=function(){var B=this;
this._dom=Exhibit.FacetUtilities[this._settings.scroll?"constructFacetFrame":"constructFlowingFacetFrame"](this,this._div,this._settings.facetLabel,function(E,F,A){B._clearSelections();
},this._uiContext,this._settings.collapsible,this._settings.collapsed);
if("height" in this._settings&&this._settings.scroll){this._dom.valuesContainer.style.height=this._settings.height;
}};
Exhibit.ImageFacet.prototype._constructBody=function(H){var N=this;
var J=this._settings.overlayCounts;
var I=this._dom.valuesContainer;
I.style.display="none";
var L=this._valueSet.size()>0||this._selectMissing;
var K=function(A){var C=function(S,T,O){N._filter(A.value,A.actionLabel,!(T.ctrlKey||T.metaKey));
SimileAjax.DOM.cancelEvent(T);
return false;
};
var D=document.createElement("span");
var F=document.createElement("div");
F.className="wrapper";
var G=document.createElement("img");
G.src=A.image;
F.appendChild(G);
if(J==true){var B=document.createElement("div");
B.className="countDiv";
var P=document.createElement("div");
P.className="countBackground";
B.appendChild(P);
var E=document.createElement("div");
E.className="text";
E.innerHTML=A.count;
B.appendChild(E);
F.appendChild(B);
}D.appendChild(F);
D.className=A.selected?"inline-block exhibit-imageFacet-value exhibit-imageFacet-value-selected":"inline-block exhibit-imageFacet-value";
D.title=A.count+" "+A.tooltip;
SimileAjax.WindowManager.registerEvent(D,"click",C,SimileAjax.WindowManager.getBaseLayer());
I.appendChild(D);
};
for(var M=0;
M<H.length;
M++){K(H[M]);
}I.style.display="block";
this._dom.setSelectionCount(this._valueSet.size()+(this._selectMissing?1:0));
};
Exhibit.ImageFacet.prototype._filter=function(X,a,S){var V=this;
var R,Z,c;
var W=new Exhibit.Set(this._valueSet);
var Y=this._selectMissing;
var U;
var b;
var T;
var d;
var Q;
if(X==null){d=Y;
Q=d&&(W.size()==0);
if(S){if(W.size()==0){b=!Y;
}else{b=true;
}U=new Exhibit.Set();
}else{b=!Y;
U=new Exhibit.Set(W);
}}else{d=W.contains(X);
Q=d&&(W.size()==1)&&!Y;
if(S){b=false;
U=new Exhibit.Set();
if(!W.contains(X)){U.add(X);
}else{if(W.size()>1||Y){U.add(X);
}}}else{b=Y;
U=new Exhibit.Set(W);
if(U.contains(X)){U.remove(X);
}else{U.add(X);
}}}var g={selection:U.toArray(),selectMissing:b};
var e={selection:W.toArray(),selectMissing:Y};
SimileAjax.History.addLengthyAction(function(){V.applyRestrictions(g);
},function(){V.applyRestrictions(e);
},(S&&!Q)?String.substitute(Exhibit.FacetUtilities.l10n["facetSelectOnlyActionTitle"],[a,this._settings.facetLabel]):String.substitute(Exhibit.FacetUtilities.l10n[d?"facetUnselectActionTitle":"facetSelectActionTitle"],[a,this._settings.facetLabel]));
};
Exhibit.ImageFacet.prototype._clearSelections=function(){var D={};
var C=this;
SimileAjax.History.addLengthyAction(function(){D.restrictions=C.clearAllRestrictions();
},function(){C.applyRestrictions(D.restrictions);
},String.substitute(Exhibit.FacetUtilities.l10n["facetClearSelectionsActionTitle"],[this._settings.facetLabel]));
};
Exhibit.ImageFacet.prototype._createSortFunction=function(G){var I=function(A,B){return A.selectionLabel.localeCompare(B.selectionLabel);
};
if("_orderMap" in this){var H=this._orderMap;
I=function(A,B){if(A.selectionLabel in H){if(B.selectionLabel in H){return H[A.selectionLabel]-H[B.selectionLabel];
}else{return -1;
}}else{if(B.selectionLabel in H){return 1;
}else{return A.selectionLabel.localeCompare(B.selectionLabel);
}}};
}else{if(G=="number"){I=function(A,B){A=parseFloat(A.value);
B=parseFloat(B.value);
return A<B?-1:A>B?1:0;
};
}}var F=I;
if(this._settings.sortMode=="count"){F=function(B,C){var A=C.count-B.count;
return A!=0?A:I(B,C);
};
}var J=F;
if(this._settings.sortDirection=="reverse"){J=function(A,B){return F(B,A);
};
}return J;
};
Exhibit.ListFacet=function(D,C){this._div=D;
this._uiContext=C;
this._colorCoder=null;
this._expression=null;
this._valueSet=new Exhibit.Set();
this._selectMissing=false;
this._delayedUpdateItems=null;
this._settings={};
this._dom=null;
};
Exhibit.ListFacet._settingSpecs={"facetLabel":{type:"text"},"fixedOrder":{type:"text"},"sortMode":{type:"text",defaultValue:"value"},"sortDirection":{type:"text",defaultValue:"forward"},"showMissing":{type:"boolean",defaultValue:true},"missingLabel":{type:"text"},"scroll":{type:"boolean",defaultValue:true},"height":{type:"text"},"colorCoder":{type:"text",defaultValue:null},"collapsible":{type:"boolean",defaultValue:false},"collapsed":{type:"boolean",defaultValue:false},"formatter":{type:"text",defaultValue:null}};
Exhibit.ListFacet.create=function(F,H,E){var E=Exhibit.UIContext.create(F,E);
var G=new Exhibit.ListFacet(H,E);
Exhibit.ListFacet._configure(G,F);
G._initializeUI();
E.getCollection().addFacet(G);
return G;
};
Exhibit.ListFacet.createFromDOM=function(O,L,U){var M=Exhibit.getConfigurationFromDOM(O);
var U=Exhibit.UIContext.createFromDOM(O,U);
var N=new Exhibit.ListFacet(L!=null?L:O,U);
Exhibit.SettingsUtilities.collectSettingsFromDOM(O,Exhibit.ListFacet._settingSpecs,N._settings);
try{var V=Exhibit.getAttribute(O,"expression");
if(V!=null&&V.length>0){N._expression=Exhibit.ExpressionParser.parse(V);
}var Q=Exhibit.getAttribute(O,"selection",";");
if(Q!=null&&Q.length>0){for(var T=0,P;
P=Q[T];
T++){N._valueSet.add(P);
}}var S=Exhibit.getAttribute(O,"selectMissing");
if(S!=null&&S.length>0){N._selectMissing=(S=="true");
}}catch(R){SimileAjax.Debug.exception(R,"ListFacet: Error processing configuration of list facet");
}Exhibit.ListFacet._configure(N,M);
N._initializeUI();
U.getCollection().addFacet(N);
return N;
};
Exhibit.ListFacet._configure=function(facet,configuration){Exhibit.SettingsUtilities.collectSettings(configuration,Exhibit.ListFacet._settingSpecs,facet._settings);
if("expression" in configuration){facet._expression=Exhibit.ExpressionParser.parse(configuration.expression);
}if("selection" in configuration){var selection=configuration.selection;
for(var i=0;
i<selection.length;
i++){facet._valueSet.add(selection[i]);
}}if("selectMissing" in configuration){facet._selectMissing=configuration.selectMissing;
}if(!("facetLabel" in facet._settings)){facet._settings.facetLabel="missing ex:facetLabel";
if(facet._expression!=null&&facet._expression.isPath()){var segment=facet._expression.getPath().getLastSegment();
var property=facet._uiContext.getDatabase().getProperty(segment.property);
if(property!=null){facet._settings.facetLabel=segment.forward?property.getLabel():property.getReverseLabel();
}}}if("fixedOrder" in facet._settings){var values=facet._settings.fixedOrder.split(";");
var orderMap={};
for(var i=0;
i<values.length;
i++){orderMap[values[i].trim()]=i;
}facet._orderMap=orderMap;
}if("colorCoder" in facet._settings){facet._colorCoder=facet._uiContext.getExhibit().getComponent(facet._settings.colorCoder);
}if(facet._settings.collapsed){facet._settings.collapsible=true;
}if("formatter" in facet._settings){var formatter=facet._settings.formatter;
if(formatter!=null&&formatter.length>0){try{facet._formatter=eval(formatter);
}catch(e){SimileAjax.Debug.log(e);
}}}facet._cache=new Exhibit.FacetUtilities.Cache(facet._uiContext.getDatabase(),facet._uiContext.getCollection(),facet._expression);
};
Exhibit.ListFacet.prototype.dispose=function(){this._cache.dispose();
this._cache=null;
this._uiContext.getCollection().removeFacet(this);
this._uiContext=null;
this._colorCoder=null;
this._div.innerHTML="";
this._div=null;
this._dom=null;
this._expression=null;
this._valueSet=null;
this._settings=null;
};
Exhibit.ListFacet.prototype.hasRestrictions=function(){return this._valueSet.size()>0||this._selectMissing;
};
Exhibit.ListFacet.prototype.clearAllRestrictions=function(){var B={selection:[],selectMissing:false};
if(this.hasRestrictions()){this._valueSet.visit(function(A){B.selection.push(A);
});
this._valueSet=new Exhibit.Set();
B.selectMissing=this._selectMissing;
this._selectMissing=false;
this._notifyCollection();
}return B;
};
Exhibit.ListFacet.prototype.applyRestrictions=function(D){this._valueSet=new Exhibit.Set();
for(var C=0;
C<D.selection.length;
C++){this._valueSet.add(D.selection[C]);
}this._selectMissing=D.selectMissing;
this._notifyCollection();
};
Exhibit.ListFacet.prototype.setSelection=function(D,C){if(C){this._valueSet.add(D);
}else{this._valueSet.remove(D);
}this._notifyCollection();
};
Exhibit.ListFacet.prototype.setSelectMissing=function(B){if(B!=this._selectMissing){this._selectMissing=B;
this._notifyCollection();
}};
Exhibit.ListFacet.prototype.restrict=function(C){if(this._valueSet.size()==0&&!this._selectMissing){return C;
}var D=this._cache.getItemsFromValues(this._valueSet,C);
if(this._selectMissing){this._cache.getItemsMissingValue(C,D);
}return D;
};
Exhibit.ListFacet.prototype.onUncollapse=function(){if(this._delayedUpdateItems!=null){this.update(this._delayedUpdateItems);
this._delayedUpdateItems=null;
}};
Exhibit.ListFacet.prototype.update=function(B){if(Exhibit.FacetUtilities.isCollapsed(this)){this._delayedUpdateItems=B;
return ;
}this._dom.valuesContainer.style.display="none";
this._dom.valuesContainer.innerHTML="";
this._constructBody(this._computeFacet(B));
this._dom.valuesContainer.style.display="block";
};
Exhibit.ListFacet.prototype._computeFacet=function(U){var P=this._uiContext.getDatabase();
var O=this._cache.getValueCountsFromItems(U);
var L=O.entries;
var N=O.valueType;
if(L.length>0){var Q=this._valueSet;
var T=N=="item"?function(B){var A=P.getObject(B,"label");
return A!=null?A:B;
}:function(A){return A;
};
for(var M=0;
M<L.length;
M++){var R=L[M];
R.actionLabel=R.selectionLabel=T(R.value);
R.selected=Q.contains(R.value);
}L.sort(this._createSortFunction(N));
}if(this._settings.showMissing||this._selectMissing){var V=this._cache.countItemsMissingValue(U);
if(V>0||this._selectMissing){var S=document.createElement("span");
S.innerHTML=("missingLabel" in this._settings)?this._settings.missingLabel:Exhibit.FacetUtilities.l10n.missingThisField;
S.className="exhibit-facet-value-missingThisField";
L.unshift({value:null,count:V,selected:this._selectMissing,selectionLabel:S,actionLabel:Exhibit.FacetUtilities.l10n.missingThisField});
}}return L;
};
Exhibit.ListFacet.prototype._notifyCollection=function(){this._uiContext.getCollection().onFacetUpdated(this);
};
Exhibit.ListFacet.prototype._initializeUI=function(){var B=this;
this._dom=Exhibit.FacetUtilities[this._settings.scroll?"constructFacetFrame":"constructFlowingFacetFrame"](this,this._div,this._settings.facetLabel,function(E,F,A){B._clearSelections();
},this._uiContext,this._settings.collapsible,this._settings.collapsed);
if("height" in this._settings&&this._settings.scroll){this._dom.valuesContainer.style.height=this._settings.height;
}};
Exhibit.ListFacet.prototype._constructBody=function(H){var N=this;
var I=this._dom.valuesContainer;
I.style.display="none";
var J=Exhibit.FacetUtilities[this._settings.scroll?"constructFacetItem":"constructFlowingFacetItem"];
var L=this._valueSet.size()>0||this._selectMissing;
var K=function(A){var D=function(G,E,F){N._filter(A.value,A.actionLabel,false);
SimileAjax.DOM.cancelEvent(E);
return false;
};
var B=function(G,E,F){N._filter(A.value,A.actionLabel,!(E.ctrlKey||E.metaKey));
SimileAjax.DOM.cancelEvent(E);
return false;
};
var C=J(A.selectionLabel,A.count,(N._colorCoder!=null)?N._colorCoder.translate(A.value):null,A.selected,L,D,B,N._uiContext);
if(N._formatter){N._formatter(C);
}I.appendChild(C);
};
for(var M=0;
M<H.length;
M++){K(H[M]);
}I.style.display="block";
this._dom.setSelectionCount(this._valueSet.size()+(this._selectMissing?1:0));
};
Exhibit.ListFacet.prototype._filter=function(X,a,S){var V=this;
var R,Z,c;
var W=new Exhibit.Set(this._valueSet);
var Y=this._selectMissing;
var U;
var b;
var T;
var d;
var Q;
if(X==null){d=Y;
Q=d&&(W.size()==0);
if(S){if(W.size()==0){b=!Y;
}else{b=true;
}U=new Exhibit.Set();
}else{b=!Y;
U=new Exhibit.Set(W);
}}else{d=W.contains(X);
Q=d&&(W.size()==1)&&!Y;
if(S){b=false;
U=new Exhibit.Set();
if(!W.contains(X)){U.add(X);
}else{if(W.size()>1||Y){U.add(X);
}}}else{b=Y;
U=new Exhibit.Set(W);
if(U.contains(X)){U.remove(X);
}else{U.add(X);
}}}var g={selection:U.toArray(),selectMissing:b};
var e={selection:W.toArray(),selectMissing:Y};
SimileAjax.History.addLengthyAction(function(){V.applyRestrictions(g);
},function(){V.applyRestrictions(e);
},(S&&!Q)?String.substitute(Exhibit.FacetUtilities.l10n["facetSelectOnlyActionTitle"],[a,this._settings.facetLabel]):String.substitute(Exhibit.FacetUtilities.l10n[d?"facetUnselectActionTitle":"facetSelectActionTitle"],[a,this._settings.facetLabel]));
};
Exhibit.ListFacet.prototype._clearSelections=function(){var D={};
var C=this;
SimileAjax.History.addLengthyAction(function(){D.restrictions=C.clearAllRestrictions();
},function(){C.applyRestrictions(D.restrictions);
},String.substitute(Exhibit.FacetUtilities.l10n["facetClearSelectionsActionTitle"],[this._settings.facetLabel]));
};
Exhibit.ListFacet.prototype._createSortFunction=function(G){var I=function(A,B){return A.selectionLabel.localeCompare(B.selectionLabel);
};
if("_orderMap" in this){var H=this._orderMap;
I=function(A,B){if(A.selectionLabel in H){if(B.selectionLabel in H){return H[A.selectionLabel]-H[B.selectionLabel];
}else{return -1;
}}else{if(B.selectionLabel in H){return 1;
}else{return A.selectionLabel.localeCompare(B.selectionLabel);
}}};
}else{if(G=="number"){I=function(A,B){A=parseFloat(A.value);
B=parseFloat(B.value);
return A<B?-1:A>B?1:0;
};
}}var F=I;
if(this._settings.sortMode=="count"){F=function(B,C){var A=C.count-B.count;
return A!=0?A:I(B,C);
};
}var J=F;
if(this._settings.sortDirection=="reverse"){J=function(A,B){return F(B,A);
};
}return J;
};
Exhibit.ListFacet.prototype.exportFacetSelection=function(){var B=[];
this._valueSet.visit(function(A){B.push(A);
});
if(B.length>0){return B.join(",");
}};
Exhibit.ListFacet.prototype.importFacetSelection=function(D){var C=this;
C.applyRestrictions({selection:D.split(","),selectMissing:C._selectMissing});
};
Exhibit.NumericRangeFacet=function(E,F){this._div=E;
this._uiContext=F;
this._expression=null;
this._settings={};
this._dom=null;
this._ranges=[];
var D=this;
this._listener={onRootItemsChanged:function(){if("_rangeIndex" in D){delete D._rangeIndex;
}}};
F.getCollection().addListener(this._listener);
};
Exhibit.NumericRangeFacet._settingSpecs={"facetLabel":{type:"text"},"scroll":{type:"boolean",defaultValue:true},"height":{type:"text"},"interval":{type:"float",defaultValue:10},"collapsible":{type:"boolean",defaultValue:false},"collapsed":{type:"boolean",defaultValue:false}};
Exhibit.NumericRangeFacet.create=function(F,H,E){var E=Exhibit.UIContext.create(F,E);
var G=new Exhibit.NumericRangeFacet(H,E);
Exhibit.NumericRangeFacet._configure(G,F);
G._initializeUI();
E.getCollection().addFacet(G);
return G;
};
Exhibit.NumericRangeFacet.createFromDOM=function(K,L,H){var I=Exhibit.getConfigurationFromDOM(K);
var H=Exhibit.UIContext.createFromDOM(K,H);
var J=new Exhibit.NumericRangeFacet(L!=null?L:K,H);
Exhibit.SettingsUtilities.collectSettingsFromDOM(K,Exhibit.NumericRangeFacet._settingSpecs,J._settings);
try{var N=Exhibit.getAttribute(K,"expression");
if(N!=null&&N.length>0){J._expression=Exhibit.ExpressionParser.parse(N);
}}catch(M){SimileAjax.Debug.exception(M,"NumericRangeFacet: Error processing configuration of numeric range facet");
}Exhibit.NumericRangeFacet._configure(J,I);
J._initializeUI();
H.getCollection().addFacet(J);
return J;
};
Exhibit.NumericRangeFacet._configure=function(F,G){Exhibit.SettingsUtilities.collectSettings(G,Exhibit.NumericRangeFacet._settingSpecs,F._settings);
if("expression" in G){F._expression=Exhibit.ExpressionParser.parse(G.expression);
}if(!("facetLabel" in F._settings)){F._settings.facetLabel="missing ex:facetLabel";
if(F._expression!=null&&F._expression.isPath()){var E=F._expression.getPath().getLastSegment();
var H=F._uiContext.getDatabase().getProperty(E.property);
if(H!=null){F._settings.facetLabel=E.forward?H.getLabel():H.getReverseLabel();
}}}if(F._settings.collapsed){F._settings.collapsible=true;
}};
Exhibit.NumericRangeFacet.prototype.dispose=function(){this._uiContext.getCollection().removeFacet(this);
this._uiContext.getCollection().removeListener(this._listener);
this._uiContext=null;
this._div.innerHTML="";
this._div=null;
this._dom=null;
this._expression=null;
this._settings=null;
this._ranges=null;
};
Exhibit.NumericRangeFacet.prototype.hasRestrictions=function(){return this._ranges.length>0;
};
Exhibit.NumericRangeFacet.prototype.clearAllRestrictions=function(){var B=[];
if(this._ranges.length>0){B=B.concat(this._ranges);
this._ranges=[];
this._notifyCollection();
}return B;
};
Exhibit.NumericRangeFacet.prototype.applyRestrictions=function(B){this._ranges=B;
this._notifyCollection();
};
Exhibit.NumericRangeFacet.prototype.setRange=function(G,H,I){if(I){for(var J=0;
J<this._ranges.length;
J++){var F=this._ranges[J];
if(F.from==G&&F.to==H){return ;
}}this._ranges.push({from:G,to:H});
}else{for(var J=0;
J<this._ranges.length;
J++){var F=this._ranges[J];
if(F.from==G&&F.to==H){this._ranges.splice(J,1);
break;
}}}this._notifyCollection();
};
Exhibit.NumericRangeFacet.prototype.restrict=function(L){if(this._ranges.length==0){return L;
}else{if(this._expression.isPath()){var I=this._expression.getPath();
var J=this._uiContext.getDatabase();
var H=new Exhibit.Set();
for(var K=0;
K<this._ranges.length;
K++){var G=this._ranges[K];
H.addSet(I.rangeBackward(G.from,G.to,false,L,J).values);
}return H;
}else{this._buildRangeIndex();
var H=new Exhibit.Set();
for(var K=0;
K<this._ranges.length;
K++){var G=this._ranges[K];
this._rangeIndex.getSubjectsInRange(G.from,G.to,false,H,L);
}return H;
}}};
Exhibit.NumericRangeFacet.prototype.update=function(B){this._dom.valuesContainer.style.display="none";
this._dom.valuesContainer.innerHTML="";
this._reconstruct(B);
this._dom.valuesContainer.style.display="block";
};
Exhibit.NumericRangeFacet.prototype._reconstruct=function(b){var c=this;
var n=[];
var U;
var l;
if(this._expression.isPath()){var e=this._uiContext.getDatabase();
var a=this._expression.getPath();
var Y=a.getLastSegment().property;
var m=e.getProperty(Y);
if(m==null){return null;
}U=m.getRangeIndex();
countItems=function(A){return a.rangeBackward(A.from,A.to,false,b,e).values.size();
};
}else{this._buildRangeIndex();
U=this._rangeIndex;
countItems=function(A){return U.getSubjectsInRange(A.from,A.to,false,null,b).size();
};
}var X=U.getMin();
var W=U.getMax();
X=Math.floor(X/this._settings.interval)*this._settings.interval;
W=Math.ceil((W+this._settings.interval)/this._settings.interval)*this._settings.interval;
for(var k=X;
k<W;
k+=this._settings.interval){var d={from:k,to:k+this._settings.interval,selected:false};
d.count=countItems(d);
for(var V=0;
V<this._ranges.length;
V++){var g=this._ranges[V];
if(g.from==d.from&&g.to==d.to){d.selected=true;
h=true;
break;
}}n.push(d);
}var h=this._ranges.length>0;
var i=this._dom.valuesContainer;
i.style.display="none";
var T=Exhibit.FacetUtilities[this._settings.scroll?"constructFacetItem":"constructFlowingFacetItem"];
var Z=function(E,F,G,A){var D=function(H,I,J){c._toggleRange(E,F,A,false);
SimileAjax.DOM.cancelEvent(I);
return false;
};
var B=function(H,I,J){c._toggleRange(E,F,A,!(I.ctrlKey||I.metaKey));
SimileAjax.DOM.cancelEvent(I);
return false;
};
var C=T(E+" - "+F,G,null,A,h,D,B,c._uiContext);
i.appendChild(C);
};
for(var V=0;
V<n.length;
V++){var d=n[V];
if(d.selected||d.count>0){Z(d.from,d.to,d.count,d.selected);
}}i.style.display="block";
this._dom.setSelectionCount(this._ranges.length);
};
Exhibit.NumericRangeFacet.prototype._notifyCollection=function(){this._uiContext.getCollection().onFacetUpdated(this);
};
Exhibit.NumericRangeFacet.prototype._initializeUI=function(){var B=this;
this._dom=Exhibit.FacetUtilities[this._settings.scroll?"constructFacetFrame":"constructFlowingFacetFrame"](this,this._div,this._settings.facetLabel,function(E,F,A){B._clearSelections();
},this._uiContext,this._settings.collapsible,this._settings.collapsed);
if("height" in this._settings){this._dom.valuesContainer.style.height=this._settings.height;
}};
Exhibit.NumericRangeFacet.prototype._toggleRange=function(P,O,J,R){var N=this;
var Q=P+" to "+O;
var M=(this._ranges.length==1&&J);
if(R&&!M){var L=[{from:P,to:O}];
var K=[].concat(this._ranges);
SimileAjax.History.addLengthyAction(function(){N.applyRestrictions(L);
},function(){N.applyRestrictions(K);
},String.substitute(Exhibit.FacetUtilities.l10n["facetSelectOnlyActionTitle"],[Q,this._settings.facetLabel]));
}else{SimileAjax.History.addLengthyAction(function(){N.setRange(P,O,!J);
},function(){N.setRange(P,O,J);
},String.substitute(Exhibit.FacetUtilities.l10n[J?"facetUnselectActionTitle":"facetSelectActionTitle"],[Q,this._settings.facetLabel]));
}};
Exhibit.NumericRangeFacet.prototype._clearSelections=function(){var D={};
var C=this;
SimileAjax.History.addLengthyAction(function(){D.restrictions=C.clearAllRestrictions();
},function(){C.applyRestrictions(D.restrictions);
},String.substitute(Exhibit.FacetUtilities.l10n["facetClearSelectionsActionTitle"],[this._settings.facetLabel]));
};
Exhibit.NumericRangeFacet.prototype._buildRangeIndex=function(){if(!("_rangeIndex" in this)){var E=this._expression;
var F=this._uiContext.getDatabase();
var D=function(B,A){E.evaluateOnItem(B,F).values.visit(function(C){if(typeof C!="number"){C=parseFloat(C);
}if(!isNaN(C)){A(C);
}});
};
this._rangeIndex=new Exhibit.Database._RangeIndex(this._uiContext.getCollection().getAllItems(),D);
}};
Exhibit.SliderFacet=function(D,C){this._div=D;
this._uiContext=C;
this._expression=null;
this._settings={};
this._selection={min:null,max:null};
this._range={min:null,max:null};
this._maxRange={min:null,max:null};
};
Exhibit.SliderFacet._settingsSpecs={"facetLabel":{type:"text"},"scroll":{type:"boolean",defaultValue:true},"height":{type:"text"},"precision":{type:"float",defaultValue:1},"histogram":{type:"boolean",defaultValue:true},"height":{type:"int",defaultValue:false},"width":{type:"int",defaultValue:false},"horizontal":{type:"boolean",defaultValue:true},"inputText":{type:"boolean",defaultValue:true}};
Exhibit.SliderFacet.create=function(F,H,E){var E=Exhibit.UIContext.create(F,E);
var G=new Exhibit.SliderFacet(H,E);
Exhibit.SliderFacet._configure(G,F);
G._initializeUI();
E.getCollection().addFacet(G);
return G;
};
Exhibit.SliderFacet.createFromDOM=function(K,L,H){var I=Exhibit.getConfigurationFromDOM(K);
var H=Exhibit.UIContext.createFromDOM(K,H);
var J=new Exhibit.SliderFacet(L!=null?L:K,H);
Exhibit.SettingsUtilities.collectSettingsFromDOM(K,Exhibit.SliderFacet._settingsSpecs,J._settings);
try{var N=Exhibit.getAttribute(K,"expression");
if(N!=null&&N.length>0){J._expression=Exhibit.ExpressionParser.parse(N);
}}catch(M){SimileAjax.Debug.exception(M,"SliderFacet: Error processing configuration of slider facet");
}Exhibit.SliderFacet._configure(J,I);
J._initializeUI();
H.getCollection().addFacet(J);
return J;
};
Exhibit.SliderFacet._configure=function(G,H){Exhibit.SettingsUtilities.collectSettings(H,Exhibit.SliderFacet._settingsSpecs,G._settings);
if("expression" in H){G._expression=Exhibit.ExpressionParser.parse(H.expression);
}if("selection" in H){var F=H.selection;
G._selection={min:F[0],max:F[1]};
}if(!("facetLabel" in G._settings)){G._settings.facetLabel="missing ex:facetLabel";
if(G._expression!=null&&G._expression.isPath()){var J=G._expression.getPath().getLastSegment();
var I=G._uiContext.getDatabase().getProperty(J.property);
if(I!=null){G._settings.facetLabel=J.forward?I.getLabel():I.getReverseLabel();
}}}G._maxRange=G._getMaxRange();
};
Exhibit.SliderFacet.prototype._initializeUI=function(){this._dom=SimileAjax.DOM.createDOMFromString(this._div,"<div class='exhibit-facet-header'><span class='exhibit-facet-header-title'>"+this._settings.facetLabel+"</span></div><div class='exhibit-slider' id='slider'></div>");
this._slider=new Exhibit.SliderFacet.slider(this._dom.slider,this,this._settings.precision,this._settings.horizontal);
};
Exhibit.SliderFacet.prototype.hasRestrictions=function(){return(this._range.min&&this._range.min!=this._maxRange.min)||(this._range.max&&this._range.max!=this._maxRange.max);
};
Exhibit.SliderFacet.prototype.update=function(N){if(this._settings.histogram){var K=[];
var I=75;
var H=(this._maxRange.max-this._maxRange.min)/I;
var L=this._uiContext.getDatabase();
var J=this._expression.getPath();
for(var M=0;
M<I;
M++){K[M]=J.rangeBackward(this._maxRange.min+M*H,this._maxRange.min+(M+1)*H,false,N,L).values.size();
}this._slider.updateHistogram(K);
}};
Exhibit.SliderFacet.prototype.restrict=function(D){if(!this.hasRestrictions()){return D;
}var E=this._expression.getPath();
var F=this._uiContext.getDatabase();
return E.rangeBackward(this._range.min,this._range.max,false,D,F).values;
};
Exhibit.SliderFacet.prototype._getMaxRange=function(){var G=this._expression.getPath();
var I=this._uiContext.getDatabase();
var H=G.getLastSegment().property;
var J=I.getProperty(H);
var F=J.getRangeIndex();
return{min:F.getMin(),max:F.getMax()};
};
Exhibit.SliderFacet.prototype.changeRange=function(B){this._range=B;
this._notifyCollection();
};
Exhibit.SliderFacet.prototype._notifyCollection=function(){this._uiContext.getCollection().onFacetUpdated(this);
};
Exhibit.SliderFacet.prototype.clearAllRestrictions=function(){this._slider.resetSliders();
this._range=this._maxRange;
};
Exhibit.SliderFacet.prototype.dispose=function(){this._uiContext.getCollection().removeFacet(this);
this._uiContext=null;
this._colorCoder=null;
this._div.innerHTML="";
this._div=null;
this._dom=null;
this._expression=null;
this._settings=null;
this._selection=null;
this._range=null;
this._maxRange=null;
};
Exhibit.SliderFacet.slider=function(G,H,J){this._div=G;
this._facet=H;
this._prec=J||0.1;
this._maxRange={min:parseFloat(Exhibit.Util.round(H._maxRange.min-J/2,this._prec)),max:parseFloat(Exhibit.Util.round(H._maxRange.max+J/2,this._prec))};
this._horizontal=this._facet._settings.horizontal;
this._scaleFactor=null;
this._slider1={};
this._slider2={};
this._dom=SimileAjax.DOM.createDOMFromString(G,'<div class="exhibit-slider-bar" id="bar"><div id="slider1"></div><div id="slider2"></div>'+(this._facet._settings.histogram?'<div class="exhibit-slider-histogram" id="histogram"></div>':"")+'</div><div class="exhibit-slider-display">'+(this._facet._settings.inputText?'<input type="text" id="minDisplay"></input> - <input type="text" id="maxDisplay"></input> ':'<span id="minDisplay"></span> - <span id="maxDisplay"></span>')+"</div>");
var F=this._horizontal;
var I=this._dom.histogram;
if(F&&I){this._dom.bar.style.height="14px";
this._dom.bar.style.width="150px";
}else{if(F&&!I){this._dom.bar.style.height="1px";
this._dom.bar.style.width="150px";
}else{if(!F&&I){this._dom.bar.style.height="150px";
this._dom.bar.style.width="14px";
}else{this._dom.bar.style.height="150px";
this._dom.bar.style.width="1px";
}}}if(this._facet._settings.height){this._dom.bar.style.height=this._facet._settings.height+"px";
}if(this._facet._settings.width){this._dom.bar.style.width=this._facet._settings.width+"px";
}if(I){this._dom.histogram.style.height=this._dom.bar.offsetHeight;
this._dom.histogram.style.width=this._dom.bar.offsetWidth;
}if(F){this._scaleFactor=(this._maxRange.max-this._maxRange.min)/this._dom.bar.offsetWidth;
}else{this._scaleFactor=(this._maxRange.max-this._maxRange.min)/this._dom.bar.offsetHeight;
}this._slider1=new Exhibit.SliderFacet.slider.slider(this._dom.slider1,this);
this._slider2=new Exhibit.SliderFacet.slider.slider(this._dom.slider2,this);
this._setSlider(this._slider1,this._maxRange.min);
this._setSlider(this._slider2,this._maxRange.max);
this._registerDragging();
if(this._facet._settings.inputText){this._registerInputs();
}};
Exhibit.SliderFacet.slider.prototype.resetSliders=function(){this._setSlider(this._slider1,this._maxRange.min);
this._setSlider(this._slider2,this._maxRange.max);
};
Exhibit.SliderFacet.slider.prototype._setSlider=function(C,D){if(D>this._maxRange.max){D=this._maxRange.max;
}else{if(D<this._maxRange.min){D=this._maxRange.min;
}}D=parseFloat(Exhibit.Util.round(D,this._prec));
C.value=D;
if(this._horizontal){C.div.style.left=((D-this._maxRange.min)/this._scaleFactor-C.offset)+"px";
}else{C.div.style.top=((D-this._maxRange.min)/this._scaleFactor-C.offset)+"px";
}this._setDisplays(C);
};
Exhibit.SliderFacet.slider.prototype._setMin=function(E){var F=this._slider1.value<this._slider2.value?this._slider1:this._slider2;
var D=(F==this._slider1)?this._slider2:this._slider1;
E=parseFloat(E);
if(isNaN(E)){return ;
}if(E>D.value){E=D.value;
}this._setSlider(F,E);
};
Exhibit.SliderFacet.slider.prototype._setMax=function(E){var F=this._slider1.value>this._slider2.value?this._slider1:this._slider2;
var D=(F==this._slider1)?this._slider2:this._slider1;
E=parseFloat(E);
if(isNaN(E)){return ;
}if(E<D.value){E=D.value;
}this._setSlider(F,E);
};
Exhibit.SliderFacet.slider.prototype._setDisplays=function(F){var H=(F==this._slider1)?this._slider2:this._slider1;
var G=Math.min(F.value,H.value);
var E=Math.max(F.value,H.value);
if(this._facet._settings.inputText){this._dom.minDisplay.value=G;
this._dom.maxDisplay.value=E;
}else{this._dom.minDisplay.innerHTML=G;
this._dom.maxDisplay.innerHTML=E;
}};
Exhibit.SliderFacet.slider.slider=function(E,F){var D=F._dom.bar;
this.div=E;
if(F._horizontal){this.div.className="exhibit-slider-handle";
this.div.style.backgroundImage='url("'+Exhibit.urlPrefix+'images/slider-handle.png")';
this.offset=this.div.offsetWidth/2;
this.min=-this.offset;
this.max=D.offsetWidth-this.offset;
}else{this.div.className="exhibit-slider-handle2";
this.div.style.backgroundImage='url("'+Exhibit.urlPrefix+'images/slider-handle2.png")';
this.offset=this.div.offsetHeight/2;
this.min=-this.offset;
this.max=D.offsetHeight-this.offset;
}if(F._facet._settings.histogram){this.div.style.top=(D.offsetHeight-4)+"px";
}};
Exhibit.SliderFacet.slider.prototype._registerDragging=function(){var L=this;
var G=function(A){return function(C){C=C||window.event;
var B=L._horizontal?J(C,A):K(C,A);
if(document.attachEvent){document.attachEvent("onmousemove",B);
document.attachEvent("onmouseup",H(A,B));
}else{document.addEventListener("mousemove",B,false);
document.addEventListener("mouseup",H(A,B),false);
}SimileAjax.DOM.cancelEvent(C);
return false;
};
};
var J=function(B,D){var A=B.screenX;
var C=parseInt(D.div.style.left);
var E=D.min;
var F=D.max;
return function(P){P=P||window.event;
var R=P.screenX-A;
var Q=C+R;
if(Q<E){Q=E;
}if(Q>F){Q=F;
}D.div.style.left=Q+"px";
setTimeout(function(){var M=parseInt(D.div.style.left)+D.offset;
D.value=parseFloat(Exhibit.Util.round(M*L._scaleFactor+L._maxRange.min,L._prec));
L._setDisplays(D);
},0);
};
};
var K=function(C,D){var B=C.screenY;
var A=parseInt(D.div.style.top);
var E=D.min;
var F=D.max;
return function(P){P=P||window.event;
var R=P.screenY-B;
var Q=A+R;
if(Q<E){Q=E;
}if(Q>F){Q=F;
}D.div.style.top=Q+"px";
setTimeout(function(){var M=parseInt(D.div.style.top)+D.offset;
D.value=parseFloat(Exhibit.Util.round(M*L._scaleFactor+L._maxRange.min,L._prec));
L._setDisplays(D);
},0);
};
};
var H=function(B,A){return function(C){if(document.detachEvent){document.detachEvent("onmousemove",A);
document.detachEvent("onmouseup",arguments.callee);
}else{document.removeEventListener("mousemove",A,false);
document.removeEventListener("mouseup",arguments.callee,false);
}L._notifyFacet();
};
};
var I=function(A){if(document.attachEvent){A.div.attachEvent("onmousedown",G(A));
}else{A.div.addEventListener("mousedown",G(A),false);
}};
I(this._slider1);
I(this._slider2);
};
Exhibit.SliderFacet.slider.prototype._notifyFacet=function(){var D=this._slider1.value;
var C=this._slider2.value;
this._facet.changeRange({min:Math.min(D,C),max:Math.max(D,C)});
};
Exhibit.SliderFacet.slider.prototype.updateHistogram=function(L){var M=L.length;
var R=this._dom.histogram;
var O=Math.max.apply(Math,L);
if(!O){return ;
}if(this._horizontal){var N=R.offsetWidth/M;
var Q=R.offsetHeight;
var S=Q/O;
R.innerHTML="";
for(var K=0;
K<M;
K++){var P=Math.round(L[K]*S);
var T=document.createElement("div");
R.appendChild(T);
T.style.width=N+"px";
T.style.height=P+"px";
T.style.display=P?"":"none";
T.style.position="absolute";
T.style.top=(Q-P)+"px";
T.style.left=K*N+"px";
}}else{var N=R.offsetHeight/M;
var Q=R.offsetWidth;
var S=Q/O;
R.innerHTML="";
for(var K=0;
K<M;
K++){var P=Math.round(L[K]*S);
var T=document.createElement("div");
T.style.height=N;
T.style.width=P;
T.style.position="absolute";
T.style.left=0;
T.style.top=K*N;
R.appendChild(T);
}}};
Exhibit.SliderFacet.slider.prototype._registerInputs=function(){var B=this;
if(document.attachEvent){this._dom.minDisplay.attachEvent("onchange",function(A){B._setMin(this.value);
B._notifyFacet();
});
this._dom.maxDisplay.attachEvent("onchange",function(A){B._setMax(this.value);
B._notifyFacet();
});
}else{this._dom.minDisplay.addEventListener("change",function(A){B._setMin(this.value);
B._notifyFacet();
},false);
this._dom.maxDisplay.addEventListener("change",function(A){B._setMax(this.value);
B._notifyFacet();
},false);
}};
Exhibit.TextSearchFacet=function(E,F){this._div=E;
this._uiContext=F;
this._expressions=[];
this._text=null;
this._settings={};
this._dom=null;
this._timerID=null;
var D=this;
this._listener={onRootItemsChanged:function(){if("_itemToValue" in D){delete D._itemToValue;
}}};
F.getCollection().addListener(this._listener);
};
Exhibit.TextSearchFacet._settingSpecs={"facetLabel":{type:"text"},"queryParamName":{type:"text"},"requiresEnter":{type:"boolean",defaultValue:false}};
Exhibit.TextSearchFacet.create=function(F,H,E){var E=Exhibit.UIContext.create(F,E);
var G=new Exhibit.TextSearchFacet(H,E);
Exhibit.TextSearchFacet._configure(G,F);
G._initializeUI();
E.getCollection().addFacet(G);
return G;
};
Exhibit.TextSearchFacet.createFromDOM=function(L,M,I){var J=Exhibit.getConfigurationFromDOM(L);
var I=Exhibit.UIContext.createFromDOM(L,I);
var K=new Exhibit.TextSearchFacet(M!=null?M:L,I);
Exhibit.SettingsUtilities.collectSettingsFromDOM(L,Exhibit.TextSearchFacet._settingSpecs,K._settings);
try{var P=Exhibit.getAttribute(L,"expressions");
if(P!=null&&P.length>0){K._expressions=Exhibit.ExpressionParser.parseSeveral(P);
}var O=Exhibit.getAttribute(L,"query");
if(O!=null&&O.length>0){K._text=O;
}}catch(N){SimileAjax.Debug.exception(N,"TextSearchFacet: Error processing configuration of list facet");
}Exhibit.TextSearchFacet._configure(K,J);
K._initializeUI();
I.getCollection().addFacet(K);
return K;
};
Exhibit.TextSearchFacet._configure=function(G,H){Exhibit.SettingsUtilities.collectSettings(H,Exhibit.TextSearchFacet._settingSpecs,G._settings);
if("expressions" in H){for(var F=0;
F<H.expressions.length;
F++){G._expressions.push(Exhibit.ExpressionParser.parse(H.expressions[F]));
}}if("selection" in H){var J=H.selection;
for(var F=0;
F<J.length;
F++){G._valueSet.add(J[F]);
}}if("query" in H){G._text=H.query;
}if("queryParamName" in G._settings){var I=SimileAjax.parseURLParameters();
if(G._settings["queryParamName"] in I){G._text=I[G._settings["queryParamName"]];
}}if(!("facetLabel" in G._settings)){G._settings.facetLabel="";
}};
Exhibit.TextSearchFacet.prototype.dispose=function(){this._uiContext.getCollection().removeFacet(this);
this._uiContext.getCollection().removeListener(this._listener);
this._uiContext=null;
this._div.innerHTML="";
this._div=null;
this._dom=null;
this._expressions=null;
this._itemToValue=null;
this._settings=null;
};
Exhibit.TextSearchFacet.prototype.hasRestrictions=function(){return this._text!=null;
};
Exhibit.TextSearchFacet.prototype.clearAllRestrictions=function(){var B=this._text;
if(this._text!=null){this._text=null;
this._notifyCollection();
}this._dom.input.value="";
return B;
};
Exhibit.TextSearchFacet.prototype.applyRestrictions=function(B){this.setText(B);
};
Exhibit.TextSearchFacet.prototype.setText=function(B){if(B!=null){B=B.trim();
this._dom.input.value=B;
B=B.length>0?B:null;
}else{this._dom.input.value="";
}if(B!=this._text){this._text=B;
this._notifyCollection();
}};
Exhibit.TextSearchFacet.prototype.restrict=function(E){if(this._text==null){return E;
}else{this._buildMaps();
var F=new Exhibit.Set();
var H=this._itemToValue;
var G=this._text.toLowerCase();
E.visit(function(A){if(A in H){var B=H[A];
for(var C=0;
C<B.length;
C++){if(B[C].indexOf(G)>=0){F.add(A);
break;
}}}});
return F;
}};
Exhibit.TextSearchFacet.prototype.update=function(B){};
Exhibit.TextSearchFacet.prototype._notifyCollection=function(){this._uiContext.getCollection().onFacetUpdated(this);
};
Exhibit.TextSearchFacet.prototype._initializeUI=function(){var B=this;
this._dom=Exhibit.TextSearchFacet.constructFacetFrame(this._div,this._settings.facetLabel);
if(this._text!=null){this._dom.input.value=this._text;
}SimileAjax.WindowManager.registerEvent(this._dom.input,"keyup",function(E,F,A){B._onTextInputKeyUp(F);
});
};
Exhibit.TextSearchFacet.constructFacetFrame=function(D,C){if(C!==""&&C!==null){return SimileAjax.DOM.createDOMFromString(D,"<div class='exhibit-facet-header'><span class='exhibit-facet-header-title'>"+C+"</span></div><div class='exhibit-text-facet'><input type='text' id='input'></div>");
}else{return SimileAjax.DOM.createDOMFromString(D,"<div class='exhibit-text-facet'><input type='text' id='input'></div>");
}};
Exhibit.TextSearchFacet.prototype._onTextInputKeyUp=function(D){if(this._timerID!=null){window.clearTimeout(this._timerID);
}var F=this;
if(this._settings.requiresEnter==false){this._timerID=window.setTimeout(function(){F._onTimeout();
},500);
}else{var E=this._dom.input.value.trim();
if(E.length==0||D.keyCode==13){this._timerID=window.setTimeout(function(){F._onTimeout();
},0);
}}};
Exhibit.TextSearchFacet.prototype._onTimeout=function(){this._timerID=null;
var E=this._dom.input.value.trim();
if(E.length==0){E=null;
}if(E!=this._text){var F=this;
var D=this._text;
SimileAjax.History.addLengthyAction(function(){F.setText(E);
},function(){F.setText(D);
},E!=null?String.substitute(Exhibit.FacetUtilities.l10n["facetTextSearchActionTitle"],[E]):Exhibit.FacetUtilities.l10n["facetClearTextSearchActionTitle"]);
}};
Exhibit.TextSearchFacet.prototype._buildMaps=function(){if(!("_itemToValue" in this)){var F={};
var J=this._uiContext.getCollection().getAllItems();
var H=this._uiContext.getDatabase();
if(this._expressions.length>0){var I=this._expressions;
J.visit(function(B){var C=[];
for(var D=0;
D<I.length;
D++){var A=I[D];
A.evaluateOnItem(B,H).values.visit(function(E){C.push(E.toLowerCase());
});
}F[B]=C;
});
}else{var G=H.getAllProperties();
J.visit(function(B){var C=[];
for(var A=0;
A<G.length;
A++){H.getObjects(B,G[A]).visit(function(D){C.push(D.toLowerCase());
});
}F[B]=C;
});
}this._itemToValue=F;
}};
Exhibit.TextSearchFacet.prototype.exportFacetSelection=function(){return this._text;
};
Exhibit.TextSearchFacet.prototype.importFacetSelection=function(B){this.setText(B);
};
Exhibit.FormatParser=new Object();
Exhibit.FormatParser.parse=function(F,H,G,J){G=G||0;
J=J||{};
var I=new Exhibit.FormatScanner(H,G);
try{return Exhibit.FormatParser._internalParse(F,I,J,false);
}finally{J.index=I.token()!=null?I.token().start:I.index();
}};
Exhibit.FormatParser.parseSeveral=function(F,H,G,J){G=G||0;
J=J||{};
var I=new Exhibit.FormatScanner(H,G);
try{return Exhibit.FormatParser._internalParse(F,I,J,true);
}finally{J.index=I.token()!=null?I.token().start:I.index();
}};
Exhibit.FormatParser._valueTypes={"list":true,"number":true,"date":true,"item":true,"text":true,"url":true,"image":true,"currency":true};
Exhibit.FormatParser._internalParse=function(i,t,b,w){var Z=Exhibit.FormatScanner;
var o=t.token();
var c=function(){t.next();
o=t.token();
};
var q=function(){return o!=null?o.start:t.index();
};
var u=function(A,C,B){i.putSetting("format/"+A+"/"+C,B);
};
var s=function(A,B,C){if(o!=null&&o.type!=Z.IDENTIFIER&&o.value in C){u(A,B,C[o.value]);
c();
return false;
}return true;
};
var k=function(A,B,C){if(s(A,B,C)){if(o==null||o.type!=Z.NUMBER){throw new Error("Missing number at position "+q());
}u(A,B,o.value);
c();
}};
var a=function(A,B,C){if(s(A,B,C)){if(o==null||o.type!=Z.NUMBER){throw new Error("Missing integer at position "+q());
}u(A,B,Math.round(o.value));
c();
}};
var X=function(A,B,C){if(s(A,B,C)){if(o==null||o.type!=Z.NUMBER||o.value<0){throw new Error("Missing non-negative integer at position "+q());
}u(A,B,Math.round(o.value));
c();
}};
var n=function(A,B,C){if(s(A,B,C)){if(o==null||o.type!=Z.STRING){throw new Error("Missing string at position "+q());
}u(A,B,o.value);
c();
}};
var h=function(A,B,C){if(s(A,B,C)){if(o==null||o.type!=Z.URL){throw new Error("Missing url at position "+q());
}u(A,B,o.value);
c();
}};
var d=function(A,B,C){if(s(A,B,C)){if(o==null||o.type!=Z.EXPRESSION){throw new Error("Missing expression at position "+q());
}u(A,B,o.value);
c();
}};
var r=function(A,B,C){if(s(A,B,C)){if(o==null||(o.type!=Z.EXPRESSION&&o.type!=Z.STRING)){throw new Error("Missing expression or string at position "+q());
}u(A,B,o.value);
c();
}};
var e=function(A,C,B){if(o==null||o.type!=Z.IDENTIFIER){throw new Error("Missing option at position "+q());
}for(var D=0;
D<B.length;
D++){if(o.value==B[D]){u(A,C,o.value);
c();
return ;
}}throw new Error("Unsupported option "+o.value+" for setting "+C+" on value type "+A+" found at position "+q());
};
var m=function(A,B,D,E){outer:while(o!=null&&o.type==Z.IDENTIFIER){for(var C=0;
C<D.length;
C++){if(o.value==D[C]){u(A,B+"/"+o.value,true);
c();
continue outer;
}}if(o.value in E){u(A,B+"/"+E[o.value],false);
c();
continue outer;
}throw new Error("Unsupported flag "+o.value+" for setting "+B+" on value type "+A+" found at position "+q());
}};
var Y=function(A,B){switch(A){case"number":switch(B){case"decimal-digits":X(A,B,{"default":-1});
return ;
}break;
case"date":switch(B){case"time-zone":k(A,B,{"default":null});
return ;
case"show":e(A,B,["date","time","date-time"]);
return ;
case"mode":e(A,B,["short","medium","long","full"]);
u(A,"template",null);
return ;
case"template":n(A,B,{});
u(A,"mode",null);
return ;
}break;
case"boolean":switch(B){}break;
case"text":switch(B){case"max-length":a(A,B,{"none":0});
return ;
}break;
case"image":switch(B){case"tooltip":r(A,B,{"none":null});
return ;
case"max-width":case"max-height":a(A,B,{"none":-1});
return ;
}break;
case"url":switch(B){case"target":n(A,B,{"none":null});
return ;
case"external-icon":h(A,B,{"none":null});
return ;
}break;
case"item":switch(B){case"title":d(A,B,{"default":null});
return ;
}break;
case"currency":switch(B){case"negative-format":m(A,B,["red","parentheses","signed"],{"unsigned":"signed","no-parenthesis":"parentheses","black":"red"});
return ;
case"symbol":n(A,B,{"default":"$","none":null});
return ;
case"symbol-placement":e(A,B,["first","last","after-sign"]);
return ;
case"decimal-digits":X(A,B,{"default":-1});
return ;
}break;
case"list":switch(B){case"separator":case"last-separator":case"pair-separator":case"empty-text":n(A,B,{});
return ;
}break;
}throw new Error("Unsupported setting called "+B+" for value type "+A+" found at position "+q());
};
var g=function(A){while(o!=null&&o.type==Z.IDENTIFIER){var B=o.value;
c();
if(o==null||o.type!=Z.DELIMITER||o.value!=":"){throw new Error("Missing : at position "+q());
}c();
Y(A,B);
if(o==null||o.type!=Z.DELIMITER||o.value!=";"){break;
}else{c();
}}};
var l=function(){if(o==null||o.type!=Z.IDENTIFIER){throw new Error("Missing value type at position "+q());
}var A=o.value;
if(!(A in Exhibit.FormatParser._valueTypes)){throw new Error("Unsupported value type "+A+" at position "+q());
}c();
if(o!=null&&o.type==Z.DELIMITER&&o.value=="{"){c();
g(A);
if(o==null||o.type!=Z.DELIMITER||o.value!="}"){throw new Error("Missing } at position "+q());
}c();
}return A;
};
var v=function(){var A="text";
while(o!=null&&o.type==Z.IDENTIFIER){A=l();
}return A;
};
if(w){return v();
}else{return l();
}};
Exhibit.FormatScanner=function(D,C){this._text=D+" ";
this._maxIndex=D.length;
this._index=C;
this.next();
};
Exhibit.FormatScanner.DELIMITER=0;
Exhibit.FormatScanner.NUMBER=1;
Exhibit.FormatScanner.STRING=2;
Exhibit.FormatScanner.IDENTIFIER=3;
Exhibit.FormatScanner.URL=4;
Exhibit.FormatScanner.EXPRESSION=5;
Exhibit.FormatScanner.COLOR=6;
Exhibit.FormatScanner.prototype.token=function(){return this._token;
};
Exhibit.FormatScanner.prototype.index=function(){return this._index;
};
Exhibit.FormatScanner.prototype.next=function(){this._token=null;
var Q=this;
var N=function(A){while(A<Q._maxIndex&&" \t\r\n".indexOf(Q._text.charAt(A))>=0){A++;
}return A;
};
this._index=N(this._index);
if(this._index<this._maxIndex){var V=this._text.charAt(this._index);
var M=this._text.charAt(this._index+1);
if("{}(),:;".indexOf(V)>=0){this._token={type:Exhibit.FormatScanner.DELIMITER,value:V,start:this._index,end:this._index+1};
this._index++;
}else{if("\"'".indexOf(V)>=0){var U=this._index+1;
while(U<this._maxIndex){if(this._text.charAt(U)==V&&this._text.charAt(U-1)!="\\"){break;
}U++;
}if(U<this._maxIndex){this._token={type:Exhibit.FormatScanner.STRING,value:this._text.substring(this._index+1,U).replace(/\\'/g,"'").replace(/\\"/g,'"'),start:this._index,end:U+1};
this._index=U+1;
}else{throw new Error("Unterminated string starting at "+this._index);
}}else{if(V=="#"){var U=this._index+1;
while(U<this._maxIndex&&this._isHexDigit(this._text.charAt(U))){U++;
}this._token={type:Exhibit.FormatScanner.COLOR,value:this._text.substring(this._index,U),start:this._index,end:U};
this._index=U;
}else{if(this._isDigit(V)){var U=this._index;
while(U<this._maxIndex&&this._isDigit(this._text.charAt(U))){U++;
}if(U<this._maxIndex&&this._text.charAt(U)=="."){U++;
while(U<this._maxIndex&&this._isDigit(this._text.charAt(U))){U++;
}}this._token={type:Exhibit.FormatScanner.NUMBER,value:parseFloat(this._text.substring(this._index,U)),start:this._index,end:U};
this._index=U;
}else{var U=this._index;
while(U<this._maxIndex){var L=this._text.substr(U).search(/\W/);
if(L>0){U+=L;
}else{if("-".indexOf(this._text.charAt(U))>=0){U++;
}else{break;
}}}var S=this._text.substring(this._index,U);
while(true){if(S=="url"){var P=N(U);
if(this._text.charAt(P)=="("){var T=this._text.indexOf(")",P);
if(T>0){this._token={type:Exhibit.FormatScanner.URL,value:this._text.substring(P+1,T),start:this._index,end:T+1};
this._index=T+1;
break;
}else{throw new Error("Missing ) to close url at "+this._index);
}}}else{if(S=="expression"){var P=N(U);
if(this._text.charAt(P)=="("){var O={};
var R=Exhibit.ExpressionParser.parse(this._text,P+1,O);
var T=N(O.index);
if(this._text.charAt(T)==")"){this._token={type:Exhibit.FormatScanner.EXPRESSION,value:R,start:this._index,end:T+1};
this._index=T+1;
break;
}else{throw new Error("Missing ) to close expression at "+O.index);
}}}}this._token={type:Exhibit.FormatScanner.IDENTIFIER,value:S,start:this._index,end:U};
this._index=U;
break;
}}}}}}};
Exhibit.FormatScanner.prototype._isDigit=function(B){return"0123456789".indexOf(B)>=0;
};
Exhibit.FormatScanner.prototype._isHexDigit=function(B){return"0123456789abcdefABCDEF".indexOf(B)>=0;
};
Exhibit.Formatter=new Object();
Exhibit.Formatter.createListDelimiter=function(I,M,H){var J=H.getSetting("format/list/separator");
var N=H.getSetting("format/list/last-separator");
var K=H.getSetting("format/list/pair-separator");
if(typeof J!="string"){J=Exhibit.Formatter.l10n.listSeparator;
}if(typeof N!="string"){N=Exhibit.Formatter.l10n.listLastSeparator;
}if(typeof K!="string"){K=Exhibit.Formatter.l10n.listPairSeparator;
}var L=function(){if(L.index>0&&L.index<M){if(M>2){I.appendChild(document.createTextNode((L.index==M-1)?N:J));
}else{I.appendChild(document.createTextNode(K));
}}L.index++;
};
L.index=0;
return L;
};
Exhibit.Formatter._lessThanRegex=/</g;
Exhibit.Formatter._greaterThanRegex=/>/g;
Exhibit.Formatter.encodeAngleBrackets=function(B){return B.replace(Exhibit.Formatter._lessThanRegex,"&lt;").replace(Exhibit.Formatter._greaterThanRegex,"&gt;");
};
Exhibit.Formatter._ListFormatter=function(B){this._uiContext=B;
this._separator=B.getSetting("format/list/separator");
this._lastSeparator=B.getSetting("format/list/last-separator");
this._pairSeparator=B.getSetting("format/list/pair-separator");
this._emptyText=B.getSetting("format/list/empty-text");
if(typeof this._separator!="string"){this._separator=Exhibit.Formatter.l10n.listSeparator;
}if(typeof this._lastSeparator!="string"){this._lastSeparator=Exhibit.Formatter.l10n.listLastSeparator;
}if(typeof this._pairSeparator!="string"){this._pairSeparator=Exhibit.Formatter.l10n.listPairSeparator;
}};
Exhibit.Formatter._ListFormatter.prototype.formatList=function(L,J,I,H){var M=this._uiContext;
var N=this;
if(J==0){if(this._emptyText!=null&&this._emptyText.length>0){H(document.createTextNode(this._emptyText));
}}else{if(J==1){L.visit(function(A){M.format(A,I,H);
});
}else{var K=0;
if(J==2){L.visit(function(A){M.format(A,I,H);
K++;
if(K==1){H(document.createTextNode(N._pairSeparator));
}});
}else{L.visit(function(A){M.format(A,I,H);
K++;
if(K<J){H(document.createTextNode((K==J-1)?N._lastSeparator:N._separator));
}});
}}}};
Exhibit.Formatter._TextFormatter=function(B){this._maxLength=B.getSetting("format/text/max-length");
if(typeof this._maxLength=="number"){this._maxLength=Math.max(3,Math.round(this._maxLength));
}else{this._maxLength=0;
}};
Exhibit.Formatter._TextFormatter.prototype.format=function(E,D){var F=document.createElement("span");
F.innerHTML=this.formatText(E);
D(F);
};
Exhibit.Formatter._TextFormatter.prototype.formatText=function(B){if(Exhibit.params.safe){B=Exhibit.Formatter.encodeAngleBrackets(B);
}if(this._maxLength==0||B.length<=this._maxLength){return B;
}else{return B.substr(0,this._maxLength)+Exhibit.Formatter.l10n.textEllipsis;
}};
Exhibit.Formatter._BooleanFormatter=function(B){};
Exhibit.Formatter._BooleanFormatter.prototype.format=function(E,D){var F=document.createElement("span");
F.innerHTML=this.formatText(E);
D(F);
};
Exhibit.Formatter._BooleanFormatter.prototype.formatText=function(B){return(typeof B=="boolean"?B:(typeof B=="string"?(B=="true"):false))?Exhibit.Formatter.l10n.booleanTrue:Exhibit.Formatter.l10n.booleanFalse;
};
Exhibit.Formatter._NumberFormatter=function(B){this._decimalDigits=B.getSetting("format/number/decimal-digits");
if(typeof this._decimalDigits=="number"){this._decimalDigits=Math.max(-1,Math.round(this._decimalDigits));
}else{this._decimalDigits=-1;
}};
Exhibit.Formatter._NumberFormatter.prototype.format=function(D,C){C(document.createTextNode(this.formatText(D)));
};
Exhibit.Formatter._NumberFormatter.prototype.formatText=function(B){if(this._decimalDigits==-1){return B.toString();
}else{return new Number(B).toFixed(this._decimalDigits);
}};
Exhibit.Formatter._ImageFormatter=function(B){this._uiContext=B;
this._maxWidth=B.getSetting("format/image/max-width");
if(typeof this._maxWidth=="number"){this._maxWidth=Math.max(-1,Math.round(this._maxWidth));
}else{this._maxWidth=-1;
}this._maxHeight=B.getSetting("format/image/max-height");
if(typeof this._maxHeight=="number"){this._maxHeight=Math.max(-1,Math.round(this._maxHeight));
}else{this._maxHeight=-1;
}this._tooltip=B.getSetting("format/image/tooltip");
};
Exhibit.Formatter._ImageFormatter.prototype.format=function(E,D){if(Exhibit.params.safe){E=E.trim().startsWith("javascript:")?"":E;
}var F=document.createElement("img");
F.src=E;
if(this._tooltip!=null){if(typeof this._tooltip=="string"){F.title=this._tootlip;
}else{F.title=this._tooltip.evaluateSingleOnItem(this._uiContext.getSetting("itemID"),this._uiContext.getDatabase()).value;
}}D(F);
};
Exhibit.Formatter._ImageFormatter.prototype.formatText=function(B){return B;
};
Exhibit.Formatter._URLFormatter=function(B){this._target=B.getSetting("format/url/target");
this._externalIcon=B.getSetting("format/url/external-icon");
};
Exhibit.Formatter._URLFormatter.prototype.format=function(E,F){var D=document.createElement("a");
D.href=E;
D.innerHTML=E;
if(this._target!=null){D.target=this._target;
}if(this._externalIcon!=null){}F(D);
};
Exhibit.Formatter._URLFormatter.prototype.formatText=function(B){if(Exhibit.params.safe){B=B.trim().startsWith("javascript:")?"":B;
}return B;
};
Exhibit.Formatter._CurrencyFormatter=function(B){this._decimalDigits=B.getSetting("format/currency/decimal-digits");
if(typeof this._decimalDigits=="number"){this._decimalDigits=Math.max(-1,Math.round(this._decimalDigits));
}else{this._decimalDigits=2;
}this._symbol=B.getSetting("format/currency/symbol");
if(this._symbol==null){this._symbol=Exhibit.Formatter.l10n.currencySymbol;
}this._symbolPlacement=B.getSetting("format/currency/symbol-placement");
if(this._symbolPlacement==null){this._symbol=Exhibit.Formatter.l10n.currencySymbolPlacement;
}this._negativeFormat={signed:B.getBooleanSetting("format/currency/negative-format/signed",Exhibit.Formatter.l10n.currencyShowSign),red:B.getBooleanSetting("format/currency/negative-format/red",Exhibit.Formatter.l10n.currencyShowRed),parentheses:B.getBooleanSetting("format/currency/negative-format/parentheses",Exhibit.Formatter.l10n.currencyShowParentheses)};
};
Exhibit.Formatter._CurrencyFormatter.prototype.format=function(G,E){var F=this.formatText(G);
if(G<0&&this._negativeFormat.red){var H=document.createElement("span");
H.innerHTML=F;
H.style.color="red";
E(H);
}else{E(document.createTextNode(F));
}};
Exhibit.Formatter._CurrencyFormatter.prototype.formatText=function(G){var H=G<0;
var F;
if(this._decimalDigits==-1){F=Math.abs(G);
}else{F=new Number(Math.abs(G)).toFixed(this._decimalDigits);
}var E=(H&&this._negativeFormat.signed)?"-":"";
if(H&&this._negativeFormat.parentheses){F="("+F+")";
}switch(this._negativeFormat){case"first":F=this._symbol+E+F;
break;
case"after-sign":F=E+this._symbol+F;
break;
case"last":F=E+F+this._symbol;
break;
}return F;
};
Exhibit.Formatter._ItemFormatter=function(B){this._uiContext=B;
this._title=B.getSetting("format/item/title");
};
Exhibit.Formatter._ItemFormatter.prototype.format=function(I,L){var K=this;
var H=this.formatText(I);
var G=SimileAjax.DOM.createElementFromString('<a href="'+Exhibit.Persistence.getItemLink(I)+"\" class='exhibit-item'>"+H+"</a>");
var J=function(B,C,A){Exhibit.UI.showItemInPopup(I,B,K._uiContext);
};
SimileAjax.WindowManager.registerEvent(G,"click",J,this._uiContext.getSetting("layer"));
L(G);
};
Exhibit.Formatter._ItemFormatter.prototype.formatText=function(F){var D=this._uiContext.getDatabase();
var E=null;
if(this._title==null){E=D.getObject(F,"label");
}else{E=this._title.evaluateSingleOnItem(F,D).value;
}if(E==null){E=F;
}return E;
};
Exhibit.Formatter._DateFormatter=function(M){this._timeZone=M.getSetting("format/date/time-zone");
if(!(typeof this._timeZone=="number")){this._timeZone=-(new Date().getTimezoneOffset())/60;
}this._timeZoneOffset=this._timeZone*3600000;
var V=M.getSetting("format/date/mode");
var R=M.getSetting("format/date/show");
var P=null;
switch(V){case"short":P=R=="date"?Exhibit.Formatter.l10n.dateShortFormat:(R=="time"?Exhibit.Formatter.l10n.timeShortFormat:Exhibit.Formatter.l10n.dateTimeShortFormat);
break;
case"medium":P=R=="date"?Exhibit.Formatter.l10n.dateMediumFormat:(R=="time"?Exhibit.Formatter.l10n.timeMediumFormat:Exhibit.Formatter.l10n.dateTimeMediumFormat);
break;
case"long":P=R=="date"?Exhibit.Formatter.l10n.dateLongFormat:(R=="time"?Exhibit.Formatter.l10n.timeLongFormat:Exhibit.Formatter.l10n.dateTimeLongFormat);
break;
case"full":P=R=="date"?Exhibit.Formatter.l10n.dateFullFormat:(R=="time"?Exhibit.Formatter.l10n.timeFullFormat:Exhibit.Formatter.l10n.dateTimeFullFormat);
break;
default:P=M.getSetting("format/date/template");
}if(typeof P!="string"){P=Exhibit.Formatter.l10n.dateTimeDefaultFormat;
}var L=[];
var T=P.match(/\b\w+\b/g);
var Q=0;
for(var O=0;
O<T.length;
O++){var S=T[O];
var U=P.indexOf(S,Q);
if(U>Q){L.push(P.substring(Q,U));
}var N=Exhibit.Formatter._DateFormatter._retrievers[S];
if(typeof N=="function"){L.push(N);
}else{L.push(S);
}Q=U+S.length;
}if(Q<P.length){L.push(P.substr(Q));
}this._segments=L;
};
Exhibit.Formatter._DateFormatter.prototype.format=function(D,C){C(document.createTextNode(this.formatText(D)));
};
Exhibit.Formatter._DateFormatter.prototype.formatText=function(I){var L=(I instanceof Date)?I:SimileAjax.DateTime.parseIso8601DateTime(I);
if(L==null){return I;
}L.setTime(L.getTime()+this._timeZoneOffset);
var H="";
var G=this._segments;
for(var K=0;
K<G.length;
K++){var J=G[K];
if(typeof J=="string"){H+=J;
}else{H+=J(L);
}}return H;
};
Exhibit.Formatter._DateFormatter._pad=function(B){return B<10?("0"+B):B.toString();
};
Exhibit.Formatter._DateFormatter._pad3=function(B){return B<10?("00"+B):(B<100?("0"+B):B.toString());
};
Exhibit.Formatter._DateFormatter._retrievers={"d":function(B){return B.getUTCDate().toString();
},"dd":function(B){return Exhibit.Formatter._DateFormatter._pad(B.getUTCDate());
},"EEE":function(B){return Exhibit.Formatter.l10n.shortDaysOfWeek[B.getUTCDay()];
},"EEEE":function(B){return Exhibit.Formatter.l10n.daysOfWeek[B.getUTCDay()];
},"MM":function(B){return Exhibit.Formatter._DateFormatter._pad(B.getUTCMonth()+1);
},"MMM":function(B){return Exhibit.Formatter.l10n.shortMonths[B.getUTCMonth()];
},"MMMM":function(B){return Exhibit.Formatter.l10n.months[B.getUTCMonth()];
},"yy":function(B){return Exhibit.Formatter._DateFormatter._pad(B.getUTCFullYear()%100);
},"yyyy":function(C){var D=C.getUTCFullYear();
return D>0?D.toString():(1-D);
},"G":function(C){var D=C.getUTCYear();
return D>0?Exhibit.Formatter.l10n.commonEra:Exhibit.Formatter.l10n.beforeCommonEra;
},"HH":function(B){return Exhibit.Formatter._DateFormatter._pad(B.getUTCHours());
},"hh":function(C){var D=C.getUTCHours();
return Exhibit.Formatter._DateFormatter._pad(D==0?12:(D>12?D-12:D));
},"h":function(C){var D=C.getUTCHours();
return(D==0?12:(D>12?D-12:D)).toString();
},"a":function(B){return B.getUTCHours()<12?Exhibit.Formatter.l10n.beforeNoon:Exhibit.Formatter.l10n.afterNoon;
},"A":function(B){return B.getUTCHours()<12?Exhibit.Formatter.l10n.BeforeNoon:Exhibit.Formatter.l10n.AfterNoon;
},"mm":function(B){return Exhibit.Formatter._DateFormatter._pad(B.getUTCMinutes());
},"ss":function(B){return Exhibit.Formatter._DateFormatter._pad(B.getUTCSeconds());
},"S":function(B){return Exhibit.Formatter._DateFormatter._pad3(B.getUTCMilliseconds());
}};
Exhibit.Formatter._constructors={"number":Exhibit.Formatter._NumberFormatter,"date":Exhibit.Formatter._DateFormatter,"text":Exhibit.Formatter._TextFormatter,"boolean":Exhibit.Formatter._BooleanFormatter,"image":Exhibit.Formatter._ImageFormatter,"url":Exhibit.Formatter._URLFormatter,"item":Exhibit.Formatter._ItemFormatter,"currency":Exhibit.Formatter._CurrencyFormatter};
Exhibit.LensRegistry=function(B){this._parentRegistry=B;
this._defaultLens=null;
this._typeToLens={};
this._editLensTemplates={};
this._submissionLensTemplates={};
this._lensSelectors=[];
};
Exhibit.LensRegistry.prototype.registerDefaultLens=function(B){this._defaultLens=(typeof B=="string")?B:B.cloneNode(true);
};
Exhibit.LensRegistry.prototype.registerLensForType=function(F,D){if(typeof F=="string"){this._typeToLens[D]=F;
}var E=Exhibit.getRoleAttribute(F);
if(E=="lens"){this._typeToLens[D]=F.cloneNode(true);
}else{if(E=="edit-lens"){this._editLensTemplates[D]=F.cloneNode(true);
}else{if(E=="submission-lens"){this._submissionLensTemplates[D]=F.cloneNode(true);
}else{SimileAjax.Debug.warn("Unknown lens type "+F);
}}}};
Exhibit.LensRegistry.prototype.addLensSelector=function(B){this._lensSelectors.unshift(B);
};
Exhibit.LensRegistry.prototype.getLens=function(D,C){return C.isBeingEdited(D)?this.getEditLens(D,C):this.getNormalLens(D,C);
};
Exhibit.LensRegistry.prototype.getNormalLens=function(H,L){var G=L.getDatabase();
for(var J=0;
J<this._lensSelectors.length;
J++){var K=this._lensSelectors[J](H,G);
if(K!=null){return K;
}}var I=G.getObject(H,"type");
if(I in this._typeToLens){return this._typeToLens[I];
}if(this._defaultLens!=null){return this._defaultLens;
}if(this._parentRegistry){return this._parentRegistry.getLens(H,L);
}return null;
};
Exhibit.LensRegistry.prototype.getEditLens=function(E,D){var F=D.getDatabase().getObject(E,"type");
if(F in this._editLensTemplates){return this._editLensTemplates[F];
}else{return this._parentRegistry&&this._parentRegistry.getEditLens(E,D);
}};
Exhibit.LensRegistry.prototype.createLens=function(I,H,G,J){var L=new Exhibit.Lens();
if(G.getDatabase().isNewItem(I)){SimileAjax.jQuery(H).addClass("newItem");
}J=J||{};
var K=J.lensTemplate||this.getLens(I,G);
if(K==null){L._constructDefaultUI(I,H,G);
}else{if(typeof K=="string"){L._constructFromLensTemplateURL(I,H,G,K,J);
}else{L._constructFromLensTemplateDOM(I,H,G,K,J);
}}return L;
};
Exhibit.LensRegistry.prototype.createEditLens=function(G,F,E,H){H=H||{};
H.lensTemplate=this.getEditLens(G,E);
return this.createLens(G,F,E,H);
};
Exhibit.LensRegistry.prototype.createNormalLens=function(G,F,E,H){H=H||{};
H.lensTemplate=this.getNormalLens(G,E);
return this.createLens(G,F,E,H);
};
Exhibit.Lens=function(){};
Exhibit.Lens._commonProperties=null;
Exhibit.Lens.prototype._constructDefaultUI=function(Q,S,Z){var U=Z.getDatabase();
if(Exhibit.Lens._commonProperties==null){Exhibit.Lens._commonProperties=U.getAllProperties();
}var X=Exhibit.Lens._commonProperties;
var V=U.getObject(Q,"label");
V=V!=null?V:Q;
if(Exhibit.params.safe){V=Exhibit.Formatter.encodeAngleBrackets(V);
}var T={elmt:S,className:"exhibit-lens",children:[{tag:"div",className:"exhibit-lens-title",title:V,children:[V+" (",{tag:"a",href:Exhibit.Persistence.getItemLink(Q),target:"_blank",children:[Exhibit.l10n.itemLinkLabel]},")"]},{tag:"div",className:"exhibit-lens-body",children:[{tag:"table",className:"exhibit-lens-properties",field:"propertiesTable"}]}]};
var a=SimileAjax.DOM.createDOMFromTemplate(T);
S.setAttribute("ex:itemID",Q);
var R=Exhibit.ViewPanel.getPropertyValuesPairs(Q,X,U);
for(var b=0;
b<R.length;
b++){var c=R[b];
var W=a.propertiesTable.insertRow(b);
W.className="exhibit-lens-property";
var d=W.insertCell(0);
d.className="exhibit-lens-property-name";
d.innerHTML=c.propertyLabel+": ";
var Y=W.insertCell(1);
Y.className="exhibit-lens-property-values";
if(c.valueType=="item"){for(var P=0;
P<c.values.length;
P++){if(P>0){Y.appendChild(document.createTextNode(", "));
}Y.appendChild(Exhibit.UI.makeItemSpan(c.values[P],null,Z));
}}else{for(var P=0;
P<c.values.length;
P++){if(P>0){Y.appendChild(document.createTextNode(", "));
}Y.appendChild(Exhibit.UI.makeValueSpan(c.values[P],c.valueType));
}}}};
Exhibit.Lens.prototype._constructDefaultEditingUI=function(F,E,D){};
Exhibit.Lens._compiledTemplates={};
Exhibit.Lens._handlers=["onblur","onfocus","onkeydown","onkeypress","onkeyup","onmousedown","onmouseenter","onmouseleave","onmousemove","onmouseout","onmouseover","onmouseup","onclick","onresize","onscroll"];
Exhibit.Lens.prototype._constructFromLensTemplateURL=function(J,H,L,I){var K={lens:this,itemID:J,div:H,uiContext:L,opts:opts};
var G=Exhibit.Lens._compiledTemplates[I];
if(G==null){Exhibit.Lens._startCompilingTemplate(I,K);
}else{if(!G.compiled){G.jobs.push(K);
}else{K.template=G;
Exhibit.Lens._performConstructFromLensTemplateJob(K);
}}};
Exhibit.Lens.prototype._constructFromLensTemplateDOM=function(L,J,P,N,O){var M={lens:this,itemID:L,div:J,uiContext:P,opts:O};
var K=N.id;
if(K==null||K.length==0){K="exhibitLensTemplate"+Math.floor(Math.random()*10000);
N.id=K;
}var I=Exhibit.Lens._compiledTemplates[K];
if(I==null){I={url:K,template:Exhibit.Lens.compileTemplate(N,false,P),compiled:true,jobs:[]};
Exhibit.Lens._compiledTemplates[K]=I;
}M.template=I;
Exhibit.Lens._performConstructFromLensTemplateJob(M);
};
Exhibit.Lens._startCompilingTemplate=function(G,I){var F={url:G,template:null,compiled:false,jobs:[I]};
Exhibit.Lens._compiledTemplates[G]=F;
var H=function(A,C,B){SimileAjax.Debug.log("Failed to load view template from "+G+"\n"+A);
};
var J=function(C){try{F.template=Exhibit.Lens.compileTemplate(C.responseXML.documentElement,true,I.uiContext);
F.compiled=true;
for(var D=0;
D<F.jobs.length;
D++){try{var A=F.jobs[D];
A.template=F;
Exhibit.Lens._performConstructFromLensTemplateJob(A);
}catch(B){SimileAjax.Debug.exception(B,"Lens: Error constructing lens template in job queue");
}}F.jobs=null;
}catch(B){SimileAjax.Debug.exception(B,"Lens: Error compiling lens template and processing template job queue");
}};
SimileAjax.XmlHttp.get(G,H,J);
return F;
};
Exhibit.Lens.compileTemplate=function(F,E,D){return Exhibit.Lens._processTemplateNode(F,E,D);
};
Exhibit.Lens._processTemplateNode=function(F,E,D){if(F.nodeType==1){return Exhibit.Lens._processTemplateElement(F,E,D);
}else{return F.nodeValue;
}};
Exhibit.Lens._processTemplateElement=function(c,U,Z){var P={tag:c.tagName.toLowerCase(),uiContext:Z,control:null,condition:null,content:null,contentAttributes:null,subcontentAttributes:null,attributes:[],styles:[],handlers:[],children:null};
var a={parseChildTextNodes:true};
var Y=c.attributes;
for(var X=0;
X<Y.length;
X++){var d=Y[X];
var R=d.nodeName;
var V=d.nodeValue;
Exhibit.Lens._processTemplateAttribute(Z,P,a,R,V);
}if(!U&&SimileAjax.Platform.browser.isIE){var b=Exhibit.Lens._handlers;
for(var W=0;
W<b.length;
W++){var T=b[W];
var Q=c[T];
if(Q!=null){P.handlers.push({name:T,code:Q});
}}}var S=c.firstChild;
if(S!=null){P.children=[];
while(S!=null){if((a.parseChildTextNodes&&S.nodeType==3)||S.nodeType==1){P.children.push(Exhibit.Lens._processTemplateNode(S,U,P.uiContext));
}S=S.nextSibling;
}}return P;
};
Exhibit.Lens._processTemplateAttribute=function(N,L,K,M,I){if(I==null||typeof I!="string"||I.length==0||M=="contentEditable"){return ;
}if(M=="ex:onshow"){L.attributes.push({name:M,value:I});
}else{if(M.length>3&&M.substr(0,3)=="ex:"){M=M.substr(3);
if(M=="formats"){L.uiContext=Exhibit.UIContext._createWithParent(N);
Exhibit.FormatParser.parseSeveral(L.uiContext,I,0,{});
}else{if(M=="control"){L.control=I;
}else{if(M=="content"){L.content=Exhibit.ExpressionParser.parse(I);
}else{if(M=="edit"){L.edit=I;
}else{if(M=="options"){L.options=I;
}else{if(M=="editvalues"){L.editValues=I;
}else{if(M=="tag"){L.tag=I;
}else{if(M=="if-exists"){L.condition={test:"if-exists",expression:Exhibit.ExpressionParser.parse(I)};
}else{if(M=="if"){L.condition={test:"if",expression:Exhibit.ExpressionParser.parse(I)};
K.parseChildTextNodes=false;
}else{if(M=="select"){L.condition={test:"select",expression:Exhibit.ExpressionParser.parse(I)};
}else{if(M=="case"){L.condition={test:"case",value:I};
K.parseChildTextNodes=false;
}else{var J=false;
var H=M.indexOf("-style-content");
if(H>0){J=true;
}else{H=M.indexOf("-content");
}if(H>0){if(L.contentAttributes==null){L.contentAttributes=[];
}L.contentAttributes.push({name:M.substr(0,H),expression:Exhibit.ExpressionParser.parse(I),isStyle:J});
}else{H=M.indexOf("-style-subcontent");
if(H>0){J=true;
}else{H=M.indexOf("-subcontent");
}if(H>0){if(L.subcontentAttributes==null){L.subcontentAttributes=[];
}L.subcontentAttributes.push({name:M.substr(0,H),fragments:Exhibit.Lens._parseSubcontentAttribute(I),isStyle:J});
}}}}}}}}}}}}}}else{if(M=="style"){Exhibit.Lens._processStyle(L,I);
}else{if(M!="id"){if(M=="class"){if(SimileAjax.Platform.browser.isIE){M="className";
}}else{if(M=="cellspacing"){M="cellSpacing";
}else{if(M=="cellpadding"){M="cellPadding";
}else{if(M=="bgcolor"){M="bgColor";
}}}}L.attributes.push({name:M,value:I});
}}}}};
Exhibit.Lens._processStyle=function(M,N){var P=N.split(";");
for(var O=0;
O<P.length;
O++){var K=P[O].split(":");
if(K.length>1){var L=K[0].trim();
var Q=K[1].trim();
if(L=="float"){L=SimileAjax.Platform.browser.isIE?"styleFloat":"cssFloat";
}else{if(L=="-moz-opacity"){L="MozOpacity";
}else{if(L.indexOf("-")>0){var J=L.split("-");
L=J[0];
for(var R=1;
R<J.length;
R++){L+=J[R].substr(0,1).toUpperCase()+J[R].substr(1);
}}}}M.styles.push({name:L,value:Q});
}}};
Exhibit.Lens._parseSubcontentAttribute=function(I){var F=[];
var H=0;
var J;
while(H<I.length&&(J=I.indexOf("{{",H))>=0){var G=I.indexOf("}}",J);
if(G<0){break;
}F.push(I.substring(H,J));
F.push(Exhibit.ExpressionParser.parse(I.substring(J+2,G)));
H=G+2;
}if(H<I.length){F.push(I.substr(H));
}return F;
};
Exhibit.Lens.constructFromLensTemplate=function(H,J,G,F,I){return Exhibit.Lens._performConstructFromLensTemplateJob({itemID:H,template:{template:J},div:G,uiContext:F,opts:I});
};
Exhibit.Lens._performConstructFromLensTemplateJob=function(H){Exhibit.Lens._constructFromLensTemplateNode({"value":H.itemID},{"value":"item"},H.template.template,H.div,H.opts);
var I=H.div.tagName.toLowerCase()=="table"?H.div.rows[H.div.rows.length-1]:H.div.lastChild;
var J=I.tagName.toLowerCase();
switch(J){case"span":I.style.display="inline";
break;
case"tr":I.style.display="table-row";
break;
case"td":I.style.display="table-cell";
break;
default:I.style.display="block";
}I.setAttribute("ex:itemID",H.itemID);
if(!Exhibit.params.safe){var F=Exhibit.getAttribute(I,"onshow");
if(F!=null&&F.length>0){try{(new Function(F)).call(I);
}catch(G){SimileAjax.Debug.log(G);
}}}return I;
};
Exhibit.Lens._constructFromLensTemplateNode=function(x,u,AI,AD,r){if(typeof AI=="string"){AD.appendChild(document.createTextNode(AI));
return ;
}var w=AI.uiContext;
var q=w.getDatabase();
var z=AI.children;
function o(){if(z!=null){for(var A=0;
A<z.length;
A++){Exhibit.Lens._constructFromLensTemplateNode(x,u,z[A],v,r);
}}}if(AI.condition!=null){if(AI.condition.test=="if-exists"){if(!AI.condition.expression.testExists(x,u,"value",q)){return ;
}}else{if(AI.condition.test=="if"){if(AI.condition.expression.evaluate(x,u,"value",q).values.contains(true)){if(z!=null&&z.length>0){Exhibit.Lens._constructFromLensTemplateNode(x,u,z[0],AD,r);
}}else{if(z!=null&&z.length>1){Exhibit.Lens._constructFromLensTemplateNode(x,u,z[1],AD,r);
}}return ;
}else{if(AI.condition.test=="select"){var AE=AI.condition.expression.evaluate(x,u,"value",q).values;
if(z!=null){var AB=null;
for(var a=0;
a<z.length;
a++){var t=z[a];
if(t.condition!=null&&t.condition.test=="case"){if(AE.contains(t.condition.value)){Exhibit.Lens._constructFromLensTemplateNode(x,u,t,AD,r);
return ;
}}else{if(typeof t!="string"){AB=t;
}}}}if(AB!=null){Exhibit.Lens._constructFromLensTemplateNode(x,u,AB,AD,r);
}return ;
}}}}var v=Exhibit.Lens._constructElmtWithAttributes(AI,AD,q);
if(AI.contentAttributes!=null){var AL=AI.contentAttributes;
for(var h=0;
h<AL.length;
h++){var s=AL[h];
var AE=[];
s.expression.evaluate(x,u,"value",q).values.visit(function(A){AE.push(A);
});
var k=AE.join(";");
if(s.isStyle){v.style[s.name]=k;
}else{if("class"==s.name){v.className=k;
}else{if(Exhibit.Lens._attributeValueIsSafe(s.name,k)){v.setAttribute(s.name,k);
}}}}}if(AI.subcontentAttributes!=null){var AA=AI.subcontentAttributes;
for(var h=0;
h<AA.length;
h++){var s=AA[h];
var AH=s.fragments;
var l="";
for(var n=0;
n<AH.length;
n++){var AG=AH[n];
if(typeof AG=="string"){l+=AG;
}else{l+=AG.evaluateSingle(x,u,"value",q).value;
}}if(s.isStyle){v.style[s.name]=l;
}else{if("class"==s.name){v.className=l;
}else{if(Exhibit.Lens._attributeValueIsSafe(s.name,l)){v.setAttribute(s.name,l);
}}}}}if(!Exhibit.params.safe){var m=AI.handlers;
for(var c=0;
c<m.length;
c++){var AF=m[c];
v[AF.name]=AF.code;
}}var AC=x["value"];
if(AI.control!=null){switch(AI.control){case"item-link":var AK=document.createElement("a");
AK.innerHTML=Exhibit.l10n.itemLinkLabel;
AK.href=Exhibit.Persistence.getItemLink(AC);
AK.target="_blank";
v.appendChild(AK);
break;
case"remove-item":if(!r.disableEditWidgets&&q.isNewItem(AC)){if(AI.tag=="a"){v.href="javascript:";
}SimileAjax.jQuery(v).click(function(){q.removeItem(AC);
});
o();
}else{AD.removeChild(v);
}break;
case"start-editing":if(AI.tag=="a"){v.href="javascript:";
}if(r.disableEditWidgets){AD.removeChild(v);
}else{if(r.inPopup){SimileAjax.jQuery(v).click(function(){Exhibit.UI.showItemInPopup(AC,null,w,{lensType:"edit",coords:r.coords});
});
o();
}else{SimileAjax.jQuery(v).click(function(){w.setEditMode(AC,true);
w.getCollection()._listeners.fire("onItemsChanged",[]);
});
o();
}}break;
case"stop-editing":if(AI.tag=="a"){v.href="javascript:";
}if(r.disableEditWidgets){AD.removeChild(v);
}else{if(r.inPopup){SimileAjax.jQuery(v).click(function(){Exhibit.UI.showItemInPopup(AC,null,w,{lensType:"normal",coords:r.coords});
});
o();
}else{SimileAjax.jQuery(v).click(function(){w.setEditMode(AC,false);
w.getCollection()._listeners.fire("onItemsChanged",[]);
});
o();
}}break;
case"accept-changes":if(q.isSubmission(AC)){if(AI.tag=="a"){v.href="javascript:";
}SimileAjax.jQuery(v).click(function(){q.mergeSubmissionIntoItem(AC);
});
o();
}else{SimileAjax.Debug.warn("accept-changes element in non-submission item");
AD.removeChild(v);
}break;
}}else{if(AI.content!=null){var l=AI.content.evaluate(x,u,"value",q);
if(z!=null){var i={"value":l.valueType,"index":"number"};
var y=1;
var AJ=function(C){var A={"value":C,"index":y++};
for(var B=0;
B<z.length;
B++){Exhibit.Lens._constructFromLensTemplateNode(A,i,z[B],v,r);
}};
if(l.values instanceof Array){for(var h=0;
h<l.values.length;
h++){AJ(l.values[h]);
}}else{l.values.visit(AJ);
}}else{Exhibit.Lens._constructDefaultValueList(l.values,l.valueType,v,AI.uiContext);
}}else{if(AI.edit!=null){o();
Exhibit.Lens._constructEditableContent(AI,v,AC,w);
}else{if(z!=null){for(var h=0;
h<z.length;
h++){Exhibit.Lens._constructFromLensTemplateNode(x,u,z[h],v,r);
}}}}}};
Exhibit.Lens._constructElmtWithAttributes=function(N,V,Q){var L;
if(N.tag=="input"&&SimileAjax.Platform.browser.isIE){var R=["<input"];
var U=N.attributes;
for(var T=0;
T<U.length;
T++){var M=U[T];
if(Exhibit.Lens._attributeValueIsSafe(M.name,M.value)){R.push(M.name+'="'+M.value+'"');
}}R.push("></input>");
L=SimileAjax.DOM.createElementFromString(R.join(" "));
V.appendChild(L);
}else{switch(N.tag){case"tr":L=V.insertRow(V.rows.length);
break;
case"td":L=V.insertCell(V.cells.length);
break;
default:L=document.createElement(N.tag);
V.appendChild(L);
}var U=N.attributes;
for(var T=0;
T<U.length;
T++){var M=U[T];
if(Exhibit.Lens._attributeValueIsSafe(M.name,M.value)){try{L.setAttribute(M.name,M.value);
}catch(S){}}}}var P=N.styles;
for(var T=0;
T<P.length;
T++){var O=P[T];
L.style[O.name]=O.value;
}return L;
};
Exhibit.Lens._constructEditableContent=function(L,M,K,O){var P=O.getDatabase();
var I=L.edit.replace(".","");
var J=P.getObject(K,I);
var N=function(){if(this.value&&this.value!=J){P.editItem(K,I,this.value);
}};
if(L.tag=="select"){Exhibit.Lens._constructEditableSelect(L,M,K,O,J);
SimileAjax.jQuery(M).blur(N);
}else{M.value=J;
SimileAjax.jQuery(M).change(N);
}};
Exhibit.Lens.doesSelectContain=function(E,F){for(var G in E.options){var H=E.options[G];
if(H.text==F||H.value==F){return true;
}}return false;
};
Exhibit.Lens._constructEditableSelect=function(O,N,P,X,M){if(O.options){var Q=Exhibit.ExpressionParser.parse(O.options);
var T=X.getDatabase().getAllItems();
var V=Q.evaluate({"value":T},{value:"item"},"value",X.getDatabase());
var R=V.values.toArray().sort();
for(var W in R){var S=R[W];
if(!Exhibit.Lens.doesSelectContain(N,S)){var U=new Option(R[W],R[W]);
N.add(U,null);
}}}if(!M){if(!Exhibit.Lens.doesSelectContain(N,"")){var U=new Option("","",true);
N.add(U,N.options[0]);
}}else{for(var W in N.options){if(N.options.hasOwnProperty(W)&&N.options[W].value==M){N.selectedIndex=W;
}}}};
Exhibit.Lens._constructDefaultValueList=function(H,F,G,E){E.formatList(H,H.size(),F,function(A){G.appendChild(A);
});
};
Exhibit.Lens._attributeValueIsSafe=function(C,D){if(Exhibit.params.safe){if((C=="href"&&D.startsWith("javascript:"))||(C.startsWith("on"))){return false;
}}return true;
};
Exhibit.UIContext=function(){this._parent=null;
this._exhibit=null;
this._collection=null;
this._lensRegistry=new Exhibit.LensRegistry();
this._settings={};
this._formatters={};
this._listFormatter=null;
this._editModeRegistry={};
this._popupFunc=null;
};
Exhibit.UIContext.createRootContext=function(H,L){var K=new Exhibit.UIContext();
K._exhibit=L;
var J=Exhibit.UIContext.l10n.initialSettings;
for(var I in J){K._settings[I]=J[I];
}var G=Exhibit.getAttribute(document.body,"formats");
if(G!=null&&G.length>0){Exhibit.FormatParser.parseSeveral(K,G,0,{});
}Exhibit.SettingsUtilities.collectSettingsFromDOM(document.body,Exhibit.UIContext._settingSpecs,K._settings);
Exhibit.UIContext._configure(K,H);
return K;
};
Exhibit.UIContext.create=function(F,H,E){var G=Exhibit.UIContext._createWithParent(H);
Exhibit.UIContext._configure(G,F,E);
return G;
};
Exhibit.UIContext.createFromDOM=function(I,K,L){var J=Exhibit.UIContext._createWithParent(K);
if(!(L)){Exhibit.UIContext.registerLensesFromDOM(I,J.getLensRegistry());
}var H=Exhibit.getAttribute(I,"collectionID");
if(H!=null&&H.length>0){J._collection=J._exhibit.getCollection(H);
}var G=Exhibit.getAttribute(I,"formats");
if(G!=null&&G.length>0){Exhibit.FormatParser.parseSeveral(J,G,0,{});
}Exhibit.SettingsUtilities.collectSettingsFromDOM(I,Exhibit.UIContext._settingSpecs,J._settings);
Exhibit.UIContext._configure(J,Exhibit.getConfigurationFromDOM(I),L);
return J;
};
Exhibit.UIContext.prototype.dispose=function(){};
Exhibit.UIContext.prototype.getParentUIContext=function(){return this._parent;
};
Exhibit.UIContext.prototype.getExhibit=function(){return this._exhibit;
};
Exhibit.UIContext.prototype.getDatabase=function(){return this.getExhibit().getDatabase();
};
Exhibit.UIContext.prototype.getCollection=function(){if(this._collection==null){if(this._parent!=null){this._collection=this._parent.getCollection();
}else{this._collection=this._exhibit.getDefaultCollection();
}}return this._collection;
};
Exhibit.UIContext.prototype.getLensRegistry=function(){return this._lensRegistry;
};
Exhibit.UIContext.prototype.getSetting=function(B){return B in this._settings?this._settings[B]:(this._parent!=null?this._parent.getSetting(B):undefined);
};
Exhibit.UIContext.prototype.getBooleanSetting=function(E,D){var F=this.getSetting(E);
return F==undefined||F==null?D:F;
};
Exhibit.UIContext.prototype.putSetting=function(C,D){this._settings[C]=D;
};
Exhibit.UIContext.prototype.format=function(G,F,E){var H;
if(F in this._formatters){H=this._formatters[F];
}else{H=this._formatters[F]=new Exhibit.Formatter._constructors[F](this);
}H.format(G,E);
};
Exhibit.UIContext.prototype.formatList=function(H,G,F,E){if(this._listFormatter==null){this._listFormatter=new Exhibit.Formatter._ListFormatter(this);
}this._listFormatter.formatList(H,G,F,E);
};
Exhibit.UIContext.prototype.setEditMode=function(C,D){if(D){this._editModeRegistry[C]=true;
}else{this._editModeRegistry[C]=false;
}};
Exhibit.UIContext.prototype.isBeingEdited=function(B){return !!this._editModeRegistry[B];
};
Exhibit.UIContext._createWithParent=function(D){var C=new Exhibit.UIContext();
C._parent=D;
C._exhibit=D._exhibit;
C._lensRegistry=new Exhibit.LensRegistry(D.getLensRegistry());
C._editModeRegistry=D._editModeRegistry;
return C;
};
Exhibit.UIContext._settingSpecs={"bubbleWidth":{type:"int"},"bubbleHeight":{type:"int"}};
Exhibit.UIContext._configure=function(F,E,D){Exhibit.UIContext.registerLenses(E,F.getLensRegistry());
if("collectionID" in E){F._collection=F._exhibit.getCollection(E["collectionID"]);
}if("formats" in E){Exhibit.FormatParser.parseSeveral(F,E.formats,0,{});
}if(!(D)){Exhibit.SettingsUtilities.collectSettings(E,Exhibit.UIContext._settingSpecs,F._settings);
}};
Exhibit.UIContext.registerLens=function(F,E){var G=F.templateFile;
if(G!=null){if("itemTypes" in F){for(var H=0;
H<F.itemTypes.length;
H++){E.registerLensForType(G,F.itemTypes[H]);
}}else{E.registerDefaultLens(G);
}}};
Exhibit.UIContext.registerLensFromDOM=function(N,P){N.style.display="none";
var K=Exhibit.getAttribute(N,"itemTypes",",");
var L=null;
var I=Exhibit.getAttribute(N,"templateFile");
if(I!=null&&I.length>0){L=I;
}else{var J=Exhibit.getAttribute(N,"template");
var M=J&&document.getElementById(J);
if(M!=null){L=M;
}else{L=N;
}}if(L!=null){if(K==null||K.length==0||(K.length==1&&K[0]=="")){P.registerDefaultLens(L);
}else{for(var O=0;
O<K.length;
O++){P.registerLensForType(L,K[O]);
}}}};
Exhibit.UIContext.registerLenses=function(F,H){if("lenses" in F){for(var G=0;
G<F.lenses.length;
G++){Exhibit.UIContext.registerLens(F.lenses[G],H);
}}if("lensSelector" in F){var E=F.lensSelector;
if(typeof E=="function"){H.addLensSelector(E);
}else{SimileAjax.Debug.log("lensSelector is not a function");
}}};
Exhibit.UIContext.registerLensesFromDOM=function(parentNode,lensRegistry){var node=parentNode.firstChild;
while(node!=null){if(node.nodeType==1){var role=Exhibit.getRoleAttribute(node);
if(role=="lens"||role=="edit-lens"){Exhibit.UIContext.registerLensFromDOM(node,lensRegistry);
}}node=node.nextSibling;
}var lensSelectorString=Exhibit.getAttribute(parentNode,"lensSelector");
if(lensSelectorString!=null&&lensSelectorString.length>0){try{var lensSelector=eval(lensSelectorString);
if(typeof lensSelector=="function"){lensRegistry.addLensSelector(lensSelector);
}else{SimileAjax.Debug.log("lensSelector expression "+lensSelectorString+" is not a function");
}}catch(e){SimileAjax.Debug.exception(e,"Bad lensSelector expression: "+lensSelectorString);
}}};
Exhibit.UIContext.createLensRegistry=function(E,F){var D=new Exhibit.LensRegistry(F);
Exhibit.UIContext.registerLenses(E,D);
return D;
};
Exhibit.UIContext.createLensRegistryFromDOM=function(E,F,G){var H=new Exhibit.LensRegistry(G);
Exhibit.UIContext.registerLensesFromDOM(E,H);
Exhibit.UIContext.registerLenses(F,H);
return H;
};
Exhibit.UI=new Object();
Exhibit.UI.componentMap={};
Exhibit.UI.registerComponent=function(F,D){var E="Cannot register component "+F+" -- ";
if(F in Exhibit.UI.componentMap){SimileAjax.Debug.warn(E+"another component has taken that name");
}else{if(!D){SimileAjax.Debug.warn(E+"no component object provided");
}else{if(!D.create){SimileAjax.Debug.warn(E+"component has no create function");
}else{if(!D.createFromDOM){SimileAjax.Debug.warn(E+"component has no createFromDOM function");
}else{Exhibit.UI.componentMap[F]=D;
}}}}};
Exhibit.UI.create=function(G,J,F){if("role" in G){var H=G.role;
if(H!=null&&H.startsWith("exhibit-")){H=H.substr("exhibit-".length);
}if(H in Exhibit.UI.componentMap){var I=Exhibit.UI.componentMap[H].create;
return I(G,J,F);
}switch(H){case"lens":case"edit-lens":Exhibit.UIContext.registerLens(G,F.getLensRegistry());
return null;
case"view":return Exhibit.UI.createView(G,J,F);
case"facet":return Exhibit.UI.createFacet(G,J,F);
case"coordinator":return Exhibit.UI.createCoordinator(G,F);
case"coder":return Exhibit.UI.createCoder(G,F);
case"viewPanel":return Exhibit.ViewPanel.create(G,J,F);
case"logo":return Exhibit.Logo.create(G,J,F);
case"hiddenContent":J.style.display="none";
return null;
}}return null;
};
Exhibit.UI.createFromDOM=function(G,E){var F=Exhibit.getRoleAttribute(G);
if(F in Exhibit.UI.componentMap){var H=Exhibit.UI.componentMap[F].createFromDOM;
return H(G,E);
}switch(F){case"lens":case"edit-lens":Exhibit.UIContext.registerLensFromDOM(G,E.getLensRegistry());
return null;
case"view":return Exhibit.UI.createViewFromDOM(G,null,E);
case"facet":return Exhibit.UI.createFacetFromDOM(G,null,E);
case"coordinator":return Exhibit.UI.createCoordinatorFromDOM(G,E);
case"coder":return Exhibit.UI.createCoderFromDOM(G,E);
case"viewPanel":return Exhibit.ViewPanel.createFromDOM(G,E);
case"logo":return Exhibit.Logo.createFromDOM(G,E);
case"hiddenContent":G.style.display="none";
return null;
}return null;
};
Exhibit.UI.generateCreationMethods=function(B){B.create=function(A,I,J){var G=Exhibit.UIContext.create(A,J);
var H={};
Exhibit.SettingsUtilities.collectSettings(A,B._settingSpecs||{},H);
return new B(I,G,H);
};
B.createFromDOM=function(G,H){var A=Exhibit.UIContext.createFromDOM(G,H);
var F={};
Exhibit.SettingsUtilities.collectSettingsFromDOM(G,B._settingSpecs||{},F);
return new B(G,A,F);
};
};
Exhibit.UI.createView=function(F,H,E){var G="viewClass" in F?F.viewClass:Exhibit.TileView;
if(typeof G=="string"){G=Exhibit.UI.viewClassNameToViewClass(G);
}return G.create(F,H,E);
};
Exhibit.UI.createViewFromDOM=function(G,E,H){var F=Exhibit.UI.viewClassNameToViewClass(Exhibit.getAttribute(G,"viewClass"));
return F.createFromDOM(G,E,H);
};
Exhibit.UI.viewClassNameToViewClass=function(C){if(C!=null&&C.length>0){try{return Exhibit.UI._stringToObject(C,"View");
}catch(D){SimileAjax.Debug.warn("Unknown viewClass "+C);
}}return Exhibit.TileView;
};
Exhibit.UI.createFacet=function(F,H,E){var G="facetClass" in F?F.facetClass:Exhibit.ListFacet;
if(typeof G=="string"){G=Exhibit.UI.facetClassNameToFacetClass(G);
}return G.create(F,H,E);
};
Exhibit.UI.createFacetFromDOM=function(G,E,H){var F=Exhibit.UI.facetClassNameToFacetClass(Exhibit.getAttribute(G,"facetClass"));
return F.createFromDOM(G,E,H);
};
Exhibit.UI.facetClassNameToFacetClass=function(C){if(C!=null&&C.length>0){try{return Exhibit.UI._stringToObject(C,"Facet");
}catch(D){SimileAjax.Debug.warn("Unknown facetClass "+C);
}}return Exhibit.ListFacet;
};
Exhibit.UI.createCoder=function(E,D){var F="coderClass" in E?E.coderClass:Exhibit.ColorCoder;
if(typeof F=="string"){F=Exhibit.UI.coderClassNameToCoderClass(F);
}return F.create(E,D);
};
Exhibit.UI.createCoderFromDOM=function(F,D){var E=Exhibit.UI.coderClassNameToCoderClass(Exhibit.getAttribute(F,"coderClass"));
return E.createFromDOM(F,D);
};
Exhibit.UI.coderClassNameToCoderClass=function(C){if(C!=null&&C.length>0){try{return Exhibit.UI._stringToObject(C,"Coder");
}catch(D){SimileAjax.Debug.warn("Unknown coderClass "+C);
}}return Exhibit.ColorCoder;
};
Exhibit.UI.createCoordinator=function(D,C){return Exhibit.Coordinator.create(D,C);
};
Exhibit.UI.createCoordinatorFromDOM=function(D,C){return Exhibit.Coordinator.createFromDOM(D,C);
};
Exhibit.UI._stringToObject=function(name,suffix){if(!name.startsWith("Exhibit.")){if(!name.endsWith(suffix)){try{return eval("Exhibit."+name+suffix);
}catch(e){}}try{return eval("Exhibit."+name);
}catch(e){}}if(!name.endsWith(suffix)){try{return eval(name+suffix);
}catch(e){}}try{return eval(name);
}catch(e){}throw new Error("Unknown class "+name);
};
Exhibit.UI.docRoot="http://simile.mit.edu/wiki/";
Exhibit.UI.validator="http://simile.mit.edu/babel/validator";
Exhibit.UI.showHelp=function(F,D,E){E=(E)?E:"_blank";
if(D!=null){if(window.confirm(F+"\n\n"+Exhibit.l10n.showDocumentationMessage)){window.open(D,E);
}}else{window.alert(F);
}};
Exhibit.UI.showJavascriptExpressionValidation=function(D,E){var F="_blank";
if(window.confirm(D+"\n\n"+Exhibit.l10n.showJavascriptValidationMessage)){window.open(Exhibit.UI.validator+"?expresson="+encodeURIComponent(E),F);
}};
Exhibit.UI.showJsonFileValidation=function(F,D){var E="_blank";
if(D.indexOf("file:")==0){if(window.confirm(F+"\n\n"+Exhibit.l10n.showJsonValidationFormMessage)){window.open(Exhibit.UI.validator,E);
}}else{if(window.confirm(F+"\n\n"+Exhibit.l10n.showJsonValidationMessage)){window.open(Exhibit.UI.validator+"?url="+D,E);
}}};
Exhibit.UI._busyIndicator=null;
Exhibit.UI._busyIndicatorCount=0;
Exhibit.UI.showBusyIndicator=function(){Exhibit.UI._busyIndicatorCount++;
if(Exhibit.UI._busyIndicatorCount>1){return ;
}if(Exhibit.UI._busyIndicator==null){Exhibit.UI._busyIndicator=Exhibit.UI.createBusyIndicator();
}var E=("scrollTop" in document.body)?document.body.scrollTop:document.body.parentNode.scrollTop;
var D=("innerHeight" in window)?window.innerHeight:("clientHeight" in document.body?document.body.clientHeight:document.body.parentNode.clientHeight);
var F=Math.floor(E+D/3);
Exhibit.UI._busyIndicator.style.top=F+"px";
document.body.appendChild(Exhibit.UI._busyIndicator);
};
Exhibit.UI.hideBusyIndicator=function(){Exhibit.UI._busyIndicatorCount--;
if(Exhibit.UI._busyIndicatorCount>0){return ;
}try{document.body.removeChild(Exhibit.UI._busyIndicator);
}catch(B){}};
Exhibit.UI.protectUI=function(B){SimileAjax.DOM.appendClassName(B,"exhibit-ui-protection");
};
Exhibit.UI.makeActionLink=function(G,H,I){var J=document.createElement("a");
J.href="javascript:";
J.className="exhibit-action";
J.innerHTML=G;
var F=function(B,C,A){if("true"!=B.getAttribute("disabled")){H(B,C,A);
}};
SimileAjax.WindowManager.registerEvent(J,"click",F,I);
return J;
};
Exhibit.UI.enableActionLink=function(C,D){C.setAttribute("disabled",D?"false":"true");
C.className=D?"exhibit-action":"exhibit-action-disabled";
};
Exhibit.UI.makeItemSpan=function(H,K,L,J){if(K==null){K=database.getObject(H,"label");
if(K==null){K=H;
}}var G=SimileAjax.DOM.createElementFromString('<a href="'+Exhibit.Persistence.getItemLink(H)+"\" class='exhibit-item'>"+K+"</a>");
var I=function(B,C,A){Exhibit.UI.showItemInPopup(H,B,L);
};
SimileAjax.WindowManager.registerEvent(G,"click",I,J);
return G;
};
Exhibit.UI.makeValueSpan=function(J,G,I){var H=document.createElement("span");
H.className="exhibit-value";
if(G=="url"){var F=J;
if(Exhibit.params.safe&&F.trim().startsWith("javascript:")){H.appendChild(document.createTextNode(F));
}else{H.innerHTML='<a href="'+F+"\" target='_blank'>"+(J.length>50?J.substr(0,20)+" ... "+J.substr(J.length-20):J)+"</a>";
}}else{if(Exhibit.params.safe){J=Exhibit.Formatter.encodeAngleBrackets(J);
}H.innerHTML=J;
}return H;
};
Exhibit.UI.calculatePopupPosition=function(C){var D=SimileAjax.DOM.getPageCoordinates(C);
return{x:D.left+Math.round(C.offsetWidth/2),y:D.top+Math.round(C.offsetHeight/2)};
};
Exhibit.UI.showItemInPopup=function(H,J,L,I){SimileAjax.WindowManager.popAllLayers();
I=I||{};
I.coords=I.coords||Exhibit.UI.calculatePopupPosition(J);
var G=document.createElement("div");
var K={inPopup:true,coords:I.coords};
if(I.lensType=="normal"){K.lensTemplate=L.getLensRegistry().getNormalLens(H,L);
}else{if(I.lensType=="edit"){K.lensTemplate=L.getLensRegistry().getEditLens(H,L);
}else{if(I.lensType){SimileAjax.Debug.warn("Unknown Exhibit.UI.showItemInPopup opts.lensType: "+I.lensType);
}}}L.getLensRegistry().createLens(H,G,L,K);
SimileAjax.Graphics.createBubbleForContentAndPoint(G,I.coords.x,I.coords.y,L.getSetting("bubbleWidth"));
};
Exhibit.UI.createButton=function(E,F,G){var H=document.createElement("button");
H.className=(G||"exhibit-button")+" screen";
H.innerHTML=E;
if(F){SimileAjax.WindowManager.registerEvent(H,"click",F);
}return H;
};
Exhibit.UI.createPopupMenuDom=function(D){var E=document.createElement("div");
E.className="exhibit-menu-popup exhibit-ui-protection";
var F={elmt:E,close:function(){document.body.removeChild(this.elmt);
},open:function(){var C=this;
this.layer=SimileAjax.WindowManager.pushLayer(function(){C.close();
},true,E);
var B=document.body.offsetWidth;
var H=document.body.offsetHeight;
var A=SimileAjax.DOM.getPageCoordinates(D);
E.style.top=(A.top+D.scrollHeight)+"px";
E.style.right=(B-(A.left+D.scrollWidth))+"px";
document.body.appendChild(this.elmt);
},appendMenuItem:function(J,C,B){var K=this;
var L=document.createElement("a");
L.className="exhibit-menu-item";
L.href="javascript:";
SimileAjax.WindowManager.registerEvent(L,"click",function(H,I,G){B(H,I,G);
SimileAjax.WindowManager.popLayer(K.layer);
SimileAjax.DOM.cancelEvent(I);
return false;
});
var A=document.createElement("div");
L.appendChild(A);
A.appendChild(SimileAjax.Graphics.createTranslucentImage(C!=null?C:(Exhibit.urlPrefix+"images/blank-16x16.png")));
A.appendChild(document.createTextNode(J));
this.elmt.appendChild(L);
},appendSeparator:function(){var A=document.createElement("hr");
this.elmt.appendChild(A);
}};
return F;
};
Exhibit.UI.createBusyIndicator=function(){var T=Exhibit.urlPrefix+"images/";
var P=document.createElement("div");
if(SimileAjax.Graphics.pngIsTranslucent){var O=document.createElement("div");
O.style.height="33px";
O.style.background="url("+T+"message-bubble/message-top-left.png) top left no-repeat";
O.style.paddingLeft="44px";
P.appendChild(O);
var L=document.createElement("div");
L.style.height="33px";
L.style.background="url("+T+"message-bubble/message-top-right.png) top right no-repeat";
O.appendChild(L);
var Q=document.createElement("div");
Q.style.background="url("+T+"message-bubble/message-left.png) top left repeat-y";
Q.style.paddingLeft="44px";
P.appendChild(Q);
var N=document.createElement("div");
N.style.background="url("+T+"message-bubble/message-right.png) top right repeat-y";
N.style.paddingRight="44px";
Q.appendChild(N);
var K=document.createElement("div");
N.appendChild(K);
var M=document.createElement("div");
M.style.height="55px";
M.style.background="url("+T+"message-bubble/message-bottom-left.png) bottom left no-repeat";
M.style.paddingLeft="44px";
P.appendChild(M);
var R=document.createElement("div");
R.style.height="55px";
R.style.background="url("+T+"message-bubble/message-bottom-right.png) bottom right no-repeat";
M.appendChild(R);
}else{P.style.border="2px solid #7777AA";
P.style.padding="20px";
P.style.background="white";
SimileAjax.Graphics.setOpacity(P,90);
var K=document.createElement("div");
P.appendChild(K);
}P.className="exhibit-busyIndicator";
K.className="exhibit-busyIndicator-content";
var S=document.createElement("img");
S.src=T+"progress-running.gif";
K.appendChild(S);
K.appendChild(document.createTextNode(" "+Exhibit.l10n.busyIndicatorMessage));
return P;
};
Exhibit.UI.createFocusDialogBox=function(I,F,G){var J={tag:"div",className:"exhibit-focusDialog exhibit-ui-protection",children:[{tag:"div",className:"exhibit-focusDialog-viewContainer",field:"viewContainer"},{tag:"div",className:"exhibit-focusDialog-controls",children:[{tag:"button",field:"closeButton",children:[Exhibit.l10n.focusDialogBoxCloseButtonLabel]}]}]};
var H=SimileAjax.DOM.createDOMFromTemplate(J);
H.close=function(){document.body.removeChild(H.elmt);
};
H.open=function(){H.layer=SimileAjax.WindowManager.pushLayer(function(){H.close();
},false);
var A=new Exhibit.Lens(I,H.viewContainer,F,G);
H.elmt.style.top=(document.body.scrollTop+100)+"px";
document.body.appendChild(H.elmt);
SimileAjax.WindowManager.registerEvent(H.closeButton,"click",function(C,D,B){SimileAjax.WindowManager.popLayer(H.layer);
SimileAjax.DOM.cancelEvent(D);
return false;
},H.layer);
};
return H;
};
Exhibit.UI.createTranslucentImage=function(C,D){return SimileAjax.Graphics.createTranslucentImage(Exhibit.urlPrefix+C,D);
};
Exhibit.UI.createTranslucentImageHTML=function(C,D){return SimileAjax.Graphics.createTranslucentImageHTML(Exhibit.urlPrefix+C,D);
};
Exhibit.UI.findAttribute=function(E,F,H){var H=SimileAjax.jQuery(H||document.body);
var G=function(){var A=this.getAttribute(E);
if(F===undefined){return !!A;
}else{if(F instanceof Array){return F.indexOf(A)!=-1;
}else{return F.toString()==A;
}}};
return H.find("*").add(H).filter(G);
};
Exhibit.HTMLView=function(E,D,F){this.html=F;
this.view=this.moveChildNodes(F,E);
};
Exhibit.HTMLView.create=Exhibit.HTMLView.createFromDOM=function(E,F,D){return new Exhibit.HTMLView(F!=null?F:E,null,E);
};
Exhibit.HTMLView.prototype.dispose=function(){this.html=this.moveChildNodes(this.view,this.html);
this.view=this.html=null;
};
Exhibit.HTMLView.prototype.moveChildNodes=function(F,E){if(F===E){return E;
}var D=document.createDocumentFragment();
while(F.firstChild){D.appendChild(F.firstChild);
}E.appendChild(D);
return E;
};
Exhibit.OrderedViewFrame=function(B){this._uiContext=B;
this._orders=null;
this._possibleOrders=null;
this._settings={};
};
Exhibit.OrderedViewFrame._settingSpecs={"showAll":{type:"boolean",defaultValue:false},"grouped":{type:"boolean",defaultValue:true},"showDuplicates":{type:"boolean",defaultValue:false},"abbreviatedCount":{type:"int",defaultValue:10},"showHeader":{type:"boolean",defaultValue:true},"showSummary":{type:"boolean",defaultValue:true},"showControls":{type:"boolean",defaultValue:true},"showFooter":{type:"boolean",defaultValue:true},"paginate":{type:"boolean",defaultValue:false},"pageSize":{type:"int",defaultValue:20},"pageWindow":{type:"int",defaultValue:2},"page":{type:"int",defaultValue:0}};
Exhibit.OrderedViewFrame.prototype.configure=function(B){if("orders" in B){this._orders=[];
this._configureOrders(B.orders);
}if("possibleOrders" in B){this._possibleOrders=[];
this._configurePossibleOrders(B.possibleOrders);
}Exhibit.SettingsUtilities.collectSettings(B,Exhibit.OrderedViewFrame._settingSpecs,this._settings);
this._internalValidate();
};
Exhibit.OrderedViewFrame.prototype.configureFromDOM=function(G){var I=Exhibit.getAttribute(G,"orders",",");
if(I!=null&&I.length>0){this._orders=[];
this._configureOrders(I);
}var H=Exhibit.getAttribute(G,"directions",",");
if(H!=null&&H.length>0&&this._orders!=null){for(var J=0;
J<H.length&&J<this._orders.length;
J++){this._orders[J].ascending=(H[J].toLowerCase()!="descending");
}}var L=Exhibit.getAttribute(G,"possibleOrders",",");
if(L!=null&&L.length>0){this._possibleOrders=[];
this._configurePossibleOrders(L);
}var K=Exhibit.getAttribute(G,"possibleDirections",",");
if(K!=null&&K.length>0&&this._possibleOrders!=null){for(var J=0;
J<K.length&&J<this._possibleOrders.length;
J++){this._possibleOrders[J].ascending=(K[J].toLowerCase()!="descending");
}}Exhibit.SettingsUtilities.collectSettingsFromDOM(G,Exhibit.OrderedViewFrame._settingSpecs,this._settings);
this._internalValidate();
};
Exhibit.OrderedViewFrame.prototype.dispose=function(){if(this._headerDom){this._headerDom.dispose();
this._headerDom=null;
}if(this._footerDom){this._footerDom.dispose();
this._footerDom=null;
}this._divHeader=null;
this._divFooter=null;
this._uiContext=null;
};
Exhibit.OrderedViewFrame.prototype._internalValidate=function(){if(this._orders!=null&&this._orders.length==0){this._orders=null;
}if(this._possibleOrders!=null&&this._possibleOrders.length==0){this._possibleOrders=null;
}};
Exhibit.OrderedViewFrame.prototype._configureOrders=function(K){for(var J=0;
J<K.length;
J++){var M=K[J];
var O;
var L=true;
if(typeof M=="string"){O=M;
}else{if(typeof M=="object"){O=M.expression,L=("ascending" in M)?(M.ascending):true;
}else{SimileAjax.Debug.warn("Bad order object "+M);
continue;
}}try{var P=Exhibit.ExpressionParser.parse(O);
if(P.isPath()){var N=P.getPath();
if(N.getSegmentCount()==1){var R=N.getSegment(0);
this._orders.push({property:R.property,forward:R.forward,ascending:L});
}}}catch(Q){SimileAjax.Debug.warn("Bad order expression "+O);
}}};
Exhibit.OrderedViewFrame.prototype._configurePossibleOrders=function(M){for(var J=0;
J<M.length;
J++){var L=M[J];
var O;
var K=true;
if(typeof L=="string"){O=L;
}else{if(typeof L=="object"){O=L.expression,K=("ascending" in L)?(L.ascending):true;
}else{SimileAjax.Debug.warn("Bad possible order object "+L);
continue;
}}try{var P=Exhibit.ExpressionParser.parse(O);
if(P.isPath()){var N=P.getPath();
if(N.getSegmentCount()==1){var R=N.getSegment(0);
this._possibleOrders.push({property:R.property,forward:R.forward,ascending:K});
}}}catch(Q){SimileAjax.Debug.warn("Bad possible order expression "+O);
}}};
Exhibit.OrderedViewFrame.prototype.initializeUI=function(){var B=this;
if(this._settings.showHeader){this._headerDom=Exhibit.OrderedViewFrame.createHeaderDom(this._uiContext,this._divHeader,this._settings.showSummary,this._settings.showControls,function(E,F,A){B._openSortPopup(E,-1);
},function(E,F,A){B._toggleGroup();
},function(A){B._gotoPage(A);
});
}if(this._settings.showFooter){this._footerDom=Exhibit.OrderedViewFrame.createFooterDom(this._uiContext,this._divFooter,function(E,F,A){B._setShowAll(true);
},function(E,F,A){B._setShowAll(false);
},function(A){B._gotoPage(A);
});
}};
Exhibit.OrderedViewFrame.prototype.reconstruct=function(){var P=this;
var M=this._uiContext.getCollection();
var S=this._uiContext.getDatabase();
var L=M.countAllItems();
var R=M.countRestrictedItems();
var V=false;
if(R>0){var U=M.getRestrictedItems();
V=this._internalReconstruct(U);
var Q=[];
var T=function(A,C){var B=S.getProperty(A.property);
var D=B!=null?(A.forward?B.getPluralLabel():B.getReversePluralLabel()):(A.forward?A.property:"reverse of "+A.property);
Q.push(Exhibit.UI.makeActionLink(D,function(F,G,E){P._openSortPopup(F,C);
}));
};
var O=this._getOrders();
for(var N=0;
N<O.length;
N++){T(O[N],N);
}if(this._settings.showHeader&&this._settings.showControls){this._headerDom.setOrders(Q);
this._headerDom.enableThenByAction(Q.length<this._getPossibleOrders().length);
}}if(this._settings.showHeader&&this._settings.showControls){this._headerDom.groupOptionWidget.setChecked(this._settings.grouped);
}if(this._settings.showFooter){this._footerDom.setCounts(R,this._settings.abbreviatedCount,this._settings.showAll,!(V&&this._grouped)&&!this._settings.paginate);
}};
Exhibit.OrderedViewFrame.prototype._internalReconstruct=function(a){var U=this;
var g=this._settings;
var W=this._uiContext.getDatabase();
var d=this._getOrders();
var S=0;
var Z=false;
var c=function(A){if((S>=X&&S<e)||(Z&&g.grouped)){U.onNewItem(A,S);
}S++;
};
var Y=function(B,A,C){if((S>=X&&S<e)||(Z&&g.grouped)){U.onNewGroup(B,A,C);
}};
var T=function(E,G){var J=d[G];
var B=J.forward?W.getObjectsUnion(E,J.property):W.getSubjectsUnion(E,J.property);
var H="text";
if(J.forward){var C=W.getProperty(J.property);
H=C!=null?C.getValueType():"text";
}else{H="item";
}var A=(H=="item"||H=="text")?R(E,G,B,H):b(E,G,B,H);
var F=false;
for(var I=0;
I<A.length;
I++){if(A[I].items.size()>1){F=true;
}}if(F){Z=true;
}for(var I=0;
I<A.length;
I++){var D=A[I];
if(D.items.size()>0){if(F&&g.grouped){Y(D.display,H,G);
}E.removeSet(D.items);
if(D.items.size()>1&&G<d.length-1){T(D.items,G+1);
}else{D.items.visit(c);
}}}if(E.size()>0){if(F&&g.grouped){Y(Exhibit.l10n.missingSortKey,H,G);
}if(E.size()>1&&G<d.length-1){T(E,G+1);
}else{E.visit(c);
}}};
var R=function(F,G,C,H){var B=[];
var E;
var A;
var J=d[G];
if(H=="item"){C.visit(function(K){var L=W.getObject(K,"label");
L=L!=null?L:K;
B.push({itemID:K,display:L});
});
E=function(K,L){var M=K.display.localeCompare(L.display);
return M!=0?M:K.itemID.localeCompare(L.itemID);
};
A=J.forward?function(K){return W.getSubjects(K.itemID,J.property,null,F);
}:function(K){return W.getObjects(K.itemID,J.property,null,F);
};
}else{C.visit(function(K){B.push({display:K});
});
E=function(K,L){return K.display.localeCompare(L.display);
};
A=J.forward?function(K){return W.getSubjects(K.display,J.property,null,F);
}:function(K){return W.getObjects(K.display,J.property,null,F);
};
}B.sort(function(K,L){return(J.ascending?1:-1)*E(K,L);
});
for(var I=0;
I<B.length;
I++){var D=B[I];
D.items=A(D);
if(!g.showDuplicates){F.removeSet(D.items);
}}return B;
};
var b=function(E,G,A,H){var K=[];
var F={};
var J=d[G];
var D;
if(H=="number"){D=function(L){if(typeof L=="number"){return L;
}else{try{return parseFloat(L);
}catch(M){return null;
}}};
}else{D=function(L){if(L instanceof Date){return L.getTime();
}else{try{return SimileAjax.DateTime.parseIso8601DateTime(L.toString()).getTime();
}catch(M){return null;
}}};
}A.visit(function(M){var N=D(M);
if(N!=null){var L=F[N];
if(!L){L={sortkey:N,display:M,values:[],items:new Exhibit.Set()};
F[N]=L;
K.push(L);
}L.values.push(M);
}});
K.sort(function(M,L){return(J.ascending?1:-1)*(M.sortkey-L.sortkey);
});
for(var I=0;
I<K.length;
I++){var B=K[I];
var A=B.values;
for(var C=0;
C<A.length;
C++){if(J.forward){W.getSubjects(A[C],J.property,B.items,E);
}else{W.getObjects(A[C],J.property,B.items,E);
}}if(!g.showDuplicates){E.removeSet(B.items);
}}return K;
};
var V=a.size();
var Q=Math.ceil(V/g.pageSize);
var X=0;
var e=g.showAll?V:Math.min(V,g.abbreviatedCount);
if(!g.grouped&&g.paginate&&Q>1){X=g.page*g.pageSize;
e=Math.min(X+g.pageSize,V);
if(g.showHeader){this._headerDom.renderPageLinks(g.page,Q,g.pageWindow);
}if(g.showFooter){this._footerDom.renderPageLinks(g.page,Q,g.pageWindow);
}}else{if(g.showHeader){this._headerDom.hidePageLinks();
}if(g.showFooter){this._footerDom.hidePageLinks();
}}T(a,0);
return Z;
};
Exhibit.OrderedViewFrame.prototype._getOrders=function(){return this._orders||[this._getPossibleOrders()[0]];
};
Exhibit.OrderedViewFrame.prototype._getPossibleOrders=function(){var D=null;
if(this._possibleOrders==null){D=this._uiContext.getDatabase().getAllProperties();
for(var F=0,E;
E=D[F];
F++){D[F]={ascending:true,forward:true,property:E};
}}else{D=[].concat(this._possibleOrders);
}if(D.length==0){D.push({property:"label",forward:true,ascending:true});
}return D;
};
Exhibit.OrderedViewFrame.prototype._openSortPopup=function(g,i){var c=this;
var e=this._uiContext.getDatabase();
var T=Exhibit.UI.createPopupMenuDom(g);
var b=this._getOrders();
if(i>=0){var Y=b[i];
var k=e.getProperty(Y.property);
var d=Y.forward?k.getPluralLabel():k.getReversePluralLabel();
var W=Y.forward?k.getValueType():"item";
var l=Exhibit.Database.l10n.sortLabels[W];
l=(l!=null)?l:Exhibit.Database.l10n.sortLabels["text"];
T.appendMenuItem(l.ascending,Exhibit.urlPrefix+(Y.ascending?"images/option-check.png":"images/option.png"),Y.ascending?function(){}:function(){c._reSort(i,Y.property,Y.forward,true,false);
});
T.appendMenuItem(l.descending,Exhibit.urlPrefix+(Y.ascending?"images/option.png":"images/option-check.png"),Y.ascending?function(){c._reSort(i,Y.property,Y.forward,false,false);
}:function(){});
if(b.length>1){T.appendSeparator();
T.appendMenuItem(Exhibit.OrderedViewFrame.l10n.removeOrderLabel,null,function(){c._removeOrder(i);
});
}}var n=[];
var m=this._getPossibleOrders();
for(X=0;
X<m.length;
X++){var h=m[X];
var a=false;
for(var Z=(i<0)?b.length-1:i;
Z>=0;
Z--){var V=b[Z];
if(V.property==h.property&&V.forward==h.forward){a=true;
break;
}}if(!a){var k=e.getProperty(h.property);
n.push({property:h.property,forward:h.forward,ascending:h.ascending,label:h.forward?k.getPluralLabel():k.getReversePluralLabel()});
}}if(n.length>0){if(i>=0){T.appendSeparator();
}n.sort(function(A,B){return A.label.localeCompare(B.label);
});
var U=function(A){T.appendMenuItem(A.label,null,function(){c._reSort(i,A.property,A.forward,A.ascending,true);
});
};
for(var X=0;
X<n.length;
X++){U(n[X]);
}}T.open();
};
Exhibit.OrderedViewFrame.prototype._reSort=function(U,R,V,O,T){var M=this._getOrders();
U=(U<0)?M.length:U;
var W=M.slice(0,U);
W.push({property:R,forward:V,ascending:O});
if(!T){W=W.concat(M.slice(U+1));
}var S=this._uiContext.getDatabase().getProperty(R);
var P=V?S.getPluralLabel():S.getReversePluralLabel();
var N=V?S.getValueType():"item";
var X=Exhibit.Database.l10n.sortLabels[N];
X=(X!=null)?X:Exhibit.Database.l10n.sortLabels["text"];
var Q=this;
SimileAjax.History.addLengthyAction(function(){Q._orders=W;
Q.parentReconstruct();
},function(){Q._orders=M;
Q.parentReconstruct();
},Exhibit.OrderedViewFrame.l10n.formatSortActionTitle(P,O?X.ascending:X.descending));
};
Exhibit.OrderedViewFrame.prototype._removeOrder=function(P){var J=this._getOrders();
var Q=J.slice(0,P).concat(J.slice(P+1));
var M=J[P];
var O=this._uiContext.getDatabase().getProperty(M.property);
var L=M.forward?O.getPluralLabel():O.getReversePluralLabel();
var K=M.forward?O.getValueType():"item";
var R=Exhibit.Database.l10n.sortLabels[K];
R=(R!=null)?R:Exhibit.Database.l10n.sortLabels["text"];
var N=this;
SimileAjax.History.addLengthyAction(function(){N._orders=Q;
N.parentReconstruct();
},function(){N._orders=J;
N.parentReconstruct();
},Exhibit.OrderedViewFrame.l10n.formatRemoveOrderActionTitle(L,M.ascending?R.ascending:R.descending));
};
Exhibit.OrderedViewFrame.prototype._setShowAll=function(F){var D=this;
var E=this._settings;
SimileAjax.History.addLengthyAction(function(){E.showAll=F;
D.parentReconstruct();
},function(){E.showAll=!F;
D.parentReconstruct();
},Exhibit.OrderedViewFrame.l10n[F?"showAllActionTitle":"dontShowAllActionTitle"]);
};
Exhibit.OrderedViewFrame.prototype._toggleGroup=function(){var E=this._settings;
var F=E.grouped;
var D=this;
SimileAjax.History.addLengthyAction(function(){E.grouped=!F;
D.parentReconstruct();
},function(){E.grouped=F;
D.parentReconstruct();
},Exhibit.OrderedViewFrame.l10n[F?"ungroupAsSortedActionTitle":"groupAsSortedActionTitle"]);
};
Exhibit.OrderedViewFrame.prototype._toggleShowDuplicates=function(){var E=this._settings;
var F=E.showDuplicates;
var D=this;
SimileAjax.History.addLengthyAction(function(){E.showDuplicates=!F;
D.parentReconstruct();
},function(){E.showDuplicates=F;
D.parentReconstruct();
},Exhibit.OrderedViewFrame.l10n[F?"hideDuplicatesActionTitle":"showDuplicatesActionTitle"]);
};
Exhibit.OrderedViewFrame.prototype._gotoPage=function(E){var G=this._settings;
var F=G.page;
var H=this;
SimileAjax.History.addLengthyAction(function(){G.page=E;
H.parentReconstruct();
},function(){G.page=F;
H.parentReconstruct();
},Exhibit.OrderedViewFrame.l10n.makePagingActionTitle(E));
};
Exhibit.OrderedViewFrame.headerTemplate="<div id='collectionSummaryDiv' style='display: none;'></div><div class='exhibit-collectionView-header-sortControls' style='display: none;' id='controlsDiv'>%0<span class='exhibit-collectionView-header-groupControl'> \u2022 <a id='groupOption' class='exhibit-action'></a></span></div><div class='exhibit-collectionView-pagingControls' style='display: none;' id='topPagingDiv'></div>";
Exhibit.OrderedViewFrame.createHeaderDom=function(K,R,S,L,T,N,Q){var O=Exhibit.OrderedViewFrame.l10n;
var P=String.substitute(Exhibit.OrderedViewFrame.headerTemplate,[O.sortingControlsTemplate]);
var M=SimileAjax.DOM.createDOMFromString(R,P,{});
R.className="exhibit-collectionView-header";
if(S){M.collectionSummaryDiv.style.display="block";
M.collectionSummaryWidget=Exhibit.CollectionSummaryWidget.create({},M.collectionSummaryDiv,K);
}if(L){M.controlsDiv.style.display="block";
M.groupOptionWidget=Exhibit.OptionWidget.create({label:O.groupedAsSortedOptionLabel,onToggle:N},M.groupOption,K);
SimileAjax.WindowManager.registerEvent(M.thenSortByAction,"click",T);
M.enableThenByAction=function(A){Exhibit.UI.enableActionLink(M.thenSortByAction,A);
};
M.setOrders=function(C){M.ordersSpan.innerHTML="";
var B=Exhibit.Formatter.createListDelimiter(M.ordersSpan,C.length,K);
for(var A=0;
A<C.length;
A++){B();
M.ordersSpan.appendChild(C[A]);
}B();
};
}M.renderPageLinks=function(C,A,B){Exhibit.OrderedViewFrame.renderPageLinks(M.topPagingDiv,C,A,B,Q);
M.topPagingDiv.style.display="block";
};
M.hidePageLinks=function(){M.topPagingDiv.style.display="none";
};
M.dispose=function(){if("collectionSummaryWidget" in M){M.collectionSummaryWidget.dispose();
M.collectionSummaryWidget=null;
}M.groupOptionWidget.dispose();
M.groupOptionWidget=null;
};
return M;
};
Exhibit.OrderedViewFrame.footerTemplate="<div id='showAllSpan'></div><div class='exhibit-collectionView-pagingControls' style='display: none;' id='bottomPagingDiv'></div>";
Exhibit.OrderedViewFrame.createFooterDom=function(H,K,L,N,J){var M=Exhibit.OrderedViewFrame.l10n;
var I=SimileAjax.DOM.createDOMFromString(K,Exhibit.OrderedViewFrame.footerTemplate,{});
K.className="exhibit-collectionView-footer";
I.setCounts=function(B,C,D,A){I.showAllSpan.innerHTML="";
if(A&&B>C){I.showAllSpan.style.display="block";
if(D){I.showAllSpan.appendChild(Exhibit.UI.makeActionLink(M.formatDontShowAll(C),N));
}else{I.showAllSpan.appendChild(Exhibit.UI.makeActionLink(M.formatShowAll(B),L));
}}};
I.renderPageLinks=function(A,B,C){Exhibit.OrderedViewFrame.renderPageLinks(I.bottomPagingDiv,A,B,C,J);
I.bottomPagingDiv.style.display="block";
I.showAllSpan.style.display="none";
};
I.hidePageLinks=function(){I.bottomPagingDiv.style.display="none";
};
I.dispose=function(){};
return I;
};
Exhibit.OrderedViewFrame.renderPageLinks=function(P,W,N,Q,T){var R=Exhibit.OrderedViewFrame.l10n;
P.className="exhibit-collectionView-pagingControls";
P.innerHTML="";
var S=this;
var O=function(B,C){var D=document.createElement("a");
D.innerHTML=B;
D.className="exhibit-collectionView-pagingControls-page";
D.href="javascript:{}";
P.appendChild(D);
var A=function(F,G,E){T(C);
SimileAjax.DOM.cancelEvent(G);
return false;
};
SimileAjax.WindowManager.registerEvent(D,"click",A);
};
var U=function(B){if(B==W){var A=document.createElement("span");
A.className="exhibit-collectionView-pagingControls-currentPage";
A.innerHTML=(B+1);
P.appendChild(A);
}else{O(B+1,B);
}};
var Y=function(B){var A=document.createElement("span");
A.innerHTML=B;
P.appendChild(A);
};
if(W>0){O(R.previousPage,W-1);
Y(" ");
}var X=0;
var V=N-1;
if(W-Q>1){U(0);
Y(R.pageWindowEllipses);
X=W-Q;
}if(W+Q<N-2){V=W+Q;
}for(var Z=X;
Z<=V;
Z++){if(Z>X){Y(R.pageSeparator);
}U(Z);
}if(V<N-1){Y(R.pageWindowEllipses);
U(N-1);
}if(W<N-1){Y(" ");
O(R.nextPage,W+1);
}};
Exhibit.TabularView=function(E,F){this._div=E;
this._uiContext=F;
this._settings={rowStyler:null,tableStyler:null};
this._columns=[];
this._rowTemplate=null;
var D=this;
this._listener={onItemsChanged:function(){D._settings.page=0;
D._reconstruct();
}};
F.getCollection().addListener(this._listener);
};
Exhibit.TabularView._settingSpecs={"sortAscending":{type:"boolean",defaultValue:true},"sortColumn":{type:"int",defaultValue:0},"showSummary":{type:"boolean",defaultValue:true},"showToolbox":{type:"boolean",defaultValue:true},"border":{type:"int",defaultValue:1},"cellPadding":{type:"int",defaultValue:5},"cellSpacing":{type:"int",defaultValue:3},"paginate":{type:"boolean",defaultValue:false},"pageSize":{type:"int",defaultValue:20},"pageWindow":{type:"int",defaultValue:2},"page":{type:"int",defaultValue:0}};
Exhibit.TabularView.create=function(F,G,H){var E=new Exhibit.TabularView(G,Exhibit.UIContext.create(F,H));
Exhibit.TabularView._configure(E,F);
E._internalValidate();
E._initializeUI();
return E;
};
Exhibit.TabularView.createFromDOM=function(configElmt,containerElmt,uiContext){var configuration=Exhibit.getConfigurationFromDOM(configElmt);
uiContext=Exhibit.UIContext.createFromDOM(configElmt,uiContext);
var view=new Exhibit.TabularView(containerElmt!=null?containerElmt:configElmt,uiContext);
Exhibit.SettingsUtilities.collectSettingsFromDOM(configElmt,Exhibit.TabularView._settingSpecs,view._settings);
try{var expressions=[];
var labels=Exhibit.getAttribute(configElmt,"columnLabels",",")||[];
var s=Exhibit.getAttribute(configElmt,"columns");
if(s!=null&&s.length>0){expressions=Exhibit.ExpressionParser.parseSeveral(s);
}for(var i=0;
i<expressions.length;
i++){var expression=expressions[i];
view._columns.push({expression:expression,uiContext:Exhibit.UIContext.create({},view._uiContext,true),styler:null,label:i<labels.length?labels[i]:null,format:"list"});
}var formats=Exhibit.getAttribute(configElmt,"columnFormats");
if(formats!=null&&formats.length>0){var index=0;
var startPosition=0;
while(index<view._columns.length&&startPosition<formats.length){var column=view._columns[index];
var o={};
column.format=Exhibit.FormatParser.parseSeveral(column.uiContext,formats,startPosition,o);
startPosition=o.index;
while(startPosition<formats.length&&" \t\r\n".indexOf(formats.charAt(startPosition))>=0){startPosition++;
}if(startPosition<formats.length&&formats.charAt(startPosition)==","){startPosition++;
}index++;
}}var tables=configElmt.getElementsByTagName("table");
if(tables.length>0&&tables[0].rows.length>0){view._rowTemplate=Exhibit.Lens.compileTemplate(tables[0].rows[0],false,uiContext);
}}catch(e){SimileAjax.Debug.exception(e,"TabularView: Error processing configuration of tabular view");
}var s=Exhibit.getAttribute(configElmt,"rowStyler");
if(s!=null&&s.length>0){var f=eval(s);
if(typeof f=="function"){view._settings.rowStyler=f;
}}s=Exhibit.getAttribute(configElmt,"tableStyler");
if(s!=null&&s.length>0){f=eval(s);
if(typeof f=="function"){view._settings.tableStyler=f;
}}Exhibit.TabularView._configure(view,configuration);
view._internalValidate();
view._initializeUI();
return view;
};
Exhibit.TabularView._configure=function(U,O){Exhibit.SettingsUtilities.collectSettings(O,Exhibit.TabularView._settingSpecs,U._settings);
if("columns" in O){var M=O.columns;
for(var L=0;
L<M.length;
L++){var N=M[L];
var R;
var P=null;
var T=null;
var S=null;
if(typeof N=="string"){R=N;
}else{R=N.expression;
P=N.styler;
T=N.label;
S=N.format;
}var V=Exhibit.ExpressionParser.parse(R);
if(V.isPath()){var Q=V.getPath();
if(S!=null&&S.length>0){S=Exhibit.FormatParser.parse(U._uiContext,S,0);
}else{S="list";
}U._columns.push({expression:V,styler:P,label:T,format:S,uiContext:U._uiContext});
}}}if("rowStyler" in O){U._settings.rowStyler=O.rowStyler;
}if("tableStyler" in O){U._settings.tableStyler=O.tableStyler;
}};
Exhibit.TabularView.prototype._internalValidate=function(){if(this._columns.length==0){var H=this._uiContext.getDatabase();
var F=H.getAllProperties();
for(var E=0;
E<F.length;
E++){var G=F[E];
if(G!="uri"){this._columns.push({expression:Exhibit.ExpressionParser.parse("."+G),styler:null,label:H.getProperty(G).getLabel(),format:"list"});
}}}this._settings.sortColumn=Math.max(0,Math.min(this._settings.sortColumn,this._columns.length-1));
};
Exhibit.TabularView.prototype.dispose=function(){this._uiContext.getCollection().removeListener(this._listener);
if(this._toolboxWidget){this._toolboxWidget.dispose();
this._toolboxWidget=null;
}this._collectionSummaryWidget.dispose();
this._collectionSummaryWidget=null;
this._uiContext.dispose();
this._uiContext=null;
this._div.innerHTML="";
this._dom=null;
this._div=null;
};
Exhibit.TabularView.prototype._initializeUI=function(){var B=this;
this._div.innerHTML="";
this._dom=Exhibit.TabularView.createDom(this._div);
this._collectionSummaryWidget=Exhibit.CollectionSummaryWidget.create({},this._dom.collectionSummaryDiv,this._uiContext);
if(this._settings.showToolbox){this._toolboxWidget=Exhibit.ToolboxWidget.createFromDOM(this._div,this._div,this._uiContext);
this._toolboxWidget.getGeneratedHTML=function(){return B._dom.bodyDiv.innerHTML;
};
}if(!this._settings.showSummary){this._dom.collectionSummaryDiv.style.display="none";
}this._reconstruct();
};
Exhibit.TabularView.prototype._reconstruct=function(){var U=this;
var c=this._uiContext.getCollection();
var W=this._uiContext.getDatabase();
var Q=this._dom.bodyDiv;
Q.innerHTML="";
var a=[];
var b=c.countAllItems();
if(b>0){var Y=c.getRestrictedItems();
Y.visit(function(A){a.push({id:A,sortKey:""});
});
}if(a.length>0){var R=this._columns[this._settings.sortColumn];
a.sort(this._createSortFunction(a,R.expression,this._settings.sortAscending));
var V=document.createElement("table");
V.className="exhibit-tabularView-body";
if(this._settings.tableStyler!=null){this._settings.tableStyler(V,W);
}else{V.cellSpacing=this._settings.cellSpacing;
V.cellPadding=this._settings.cellPadding;
V.border=this._settings.border;
}var Z=V.insertRow(0);
var X=function(C){var B=U._columns[C];
if(B.label==null){B.label=U._getColumnLabel(B.expression);
}var A=document.createElement("th");
Exhibit.TabularView.createColumnHeader(exhibit,A,B.label,C==U._settings.sortColumn,U._settings.sortAscending,function(E,F,D){U._doSort(C);
SimileAjax.DOM.cancelEvent(F);
return false;
});
Z.appendChild(A);
};
for(var d=0;
d<this._columns.length;
d++){X(d);
}var e;
if(this._rowTemplate!=null){e=function(C){var B=a[C];
var A=Exhibit.Lens.constructFromLensTemplate(B.id,U._rowTemplate,V,U._uiContext);
if(U._settings.rowStyler!=null){U._settings.rowStyler(B.id,W,A,C);
}};
}else{e=function(F){var D=a[F];
var C=V.insertRow(V.rows.length);
for(var H=0;
H<U._columns.length;
H++){var E=U._columns[H];
var A=C.insertCell(H);
var G=E.expression.evaluate({"value":D.id},{"value":"item"},"value",W);
var B=E.format=="list"?G.valueType:E.format;
E.uiContext.formatList(G.values,G.size,B,function(I){A.appendChild(I);
});
if(E.styler!=null){E.styler(D.id,W,A);
}}if(U._settings.rowStyler!=null){U._settings.rowStyler(D.id,W,C,F);
}};
}var T,g;
var S=false;
if(this._settings.paginate){T=this._settings.page*this._settings.pageSize;
g=Math.min(T+this._settings.pageSize,a.length);
S=a.length>this._settings.pageSize;
}else{T=0;
g=a.length;
}for(var d=T;
d<g;
d++){e(d);
}Q.appendChild(V);
if(S){this._renderPagingDiv(this._dom.topPagingDiv,a.length,this._settings.page);
this._renderPagingDiv(this._dom.bottomPagingDiv,a.length,this._settings.page);
this._dom.topPagingDiv.style.display="block";
this._dom.bottomPagingDiv.style.display="block";
}else{this._dom.topPagingDiv.style.display="none";
this._dom.bottomPagingDiv.style.display="none";
}}};
Exhibit.TabularView.prototype._renderPagingDiv=function(O,P,U){var Q=Exhibit.TabularView.l10n;
var M=Math.ceil(P/this._settings.pageSize);
O.className="exhibit-tabularView-pagingControls";
O.innerHTML="";
var R=this;
var N=function(B,C){var D=document.createElement("a");
D.innerHTML=B;
D.className="exhibit-tabularView-pagingControls-page";
D.href="javascript:{}";
O.appendChild(D);
var A=function(F,G,E){R._gotoPage(C);
SimileAjax.DOM.cancelEvent(G);
return false;
};
SimileAjax.WindowManager.registerEvent(D,"click",A);
};
var S=function(B){if(B==U){var A=document.createElement("span");
A.className="exhibit-tabularView-pagingControls-currentPage";
A.innerHTML=(B+1);
O.appendChild(A);
}else{N(B+1,B);
}};
var W=function(B){var A=document.createElement("span");
A.innerHTML=B;
O.appendChild(A);
};
if(U>0){N(Q.previousPage,U-1);
W(" ");
}var V=0;
var T=M-1;
if(U-this._settings.pageWindow>1){S(0);
W(Q.pageWindowEllipses);
V=U-this._settings.pageWindow;
}if(U+this._settings.pageWindow<M-2){T=U+this._settings.pageWindow;
}for(var X=V;
X<=T;
X++){if(X>V){W(Q.pageSeparator);
}S(X);
}if(T<M-1){W(Q.pageWindowEllipses);
S(M-1);
}if(U<M-1){W(" ");
N(Q.nextPage,U+1);
}};
Exhibit.TabularView.prototype._getColumnLabel=function(H){var K=this._uiContext.getDatabase();
var I=H.getPath();
var G=I.getSegment(I.getSegmentCount()-1);
var J=G.property;
var L=K.getProperty(J);
if(L!=null){return G.forward?L.getLabel():L.getReverseLabel();
}else{return J;
}};
Exhibit.TabularView.prototype._createSortFunction=function(a,b,Q){var W=this._uiContext.getDatabase();
var R=Q?1:-1;
var Y=function(A,B){return R*(A.sortKey-B.sortKey);
};
var T=function(A,B){return R*A.sortKey.localeCompare(B.sortKey);
};
var Z=[];
var c={};
for(var d=0;
d<a.length;
d++){var U=a[d];
var S=b.evaluate({"value":U.id},{"value":"item"},"value",W);
S.values.visit(function(A){U.sortKey=A;
});
if(!(S.valueType in c)){c[S.valueType]=true;
Z.push(S.valueType);
}}var P="text";
if(Z.length==1){P=Z[0];
}else{P="text";
}var V;
var X;
if(P=="number"){X=Y;
V=function(B){if(B==null){return Number.NEGATIVE_INFINITY;
}else{if(typeof B=="number"){return B;
}else{var A=parseFloat(B);
if(isNaN(A)){return Number.NEGATIVE_INFINITY;
}else{return A;
}}}};
}else{if(P=="date"){X=Y;
V=function(B){if(B==null){return Number.NEGATIVE_INFINITY;
}else{if(B instanceof Date){return B.getTime();
}else{try{return SimileAjax.DateTime.parseIso8601DateTime(B).getTime();
}catch(A){return Number.NEGATIVE_INFINITY;
}}}};
}else{if(P=="boolean"){X=Y;
V=function(A){if(A==null){return Number.NEGATIVE_INFINITY;
}else{if(typeof A=="boolean"){return A?1:0;
}else{return A.toString().toLowerCase()=="true";
}}};
}else{if(P=="item"){X=T;
V=function(B){if(B==null){return Exhibit.l10n.missingSortKey;
}else{var A=W.getObject(B,"label");
return(A==null)?B:A;
}};
}else{X=T;
V=function(A){if(A==null){return Exhibit.l10n.missingSortKey;
}else{return A.toString();
}};
}}}}for(var d=0;
d<a.length;
d++){var U=a[d];
U.sortKey=V(U.sortKey);
}return X;
};
Exhibit.TabularView.prototype._doSort=function(K){var R=this._settings.sortColumn;
var P=this._settings.sortAscending;
var O=K;
var Q=R==O?!P:true;
var J=this._settings.page;
var M=0;
var L=this._settings;
var N=this;
SimileAjax.History.addLengthyAction(function(){L.sortColumn=O;
L.sortAscending=Q;
L.page=M;
N._reconstruct();
},function(){L.sortColumn=R;
L.sortAscending=P;
L.page=J;
N._reconstruct();
},Exhibit.TabularView.l10n.makeSortActionTitle(this._columns[K].label,Q));
};
Exhibit.TabularView.prototype._gotoPage=function(H){var G=this._settings.page;
var I=H;
var J=this._settings;
var F=this;
SimileAjax.History.addLengthyAction(function(){J.page=I;
F._reconstruct();
},function(){J.page=G;
F._reconstruct();
},Exhibit.TabularView.l10n.makePagingActionTitle(H));
};
Exhibit.TabularView._constructDefaultValueList=function(H,F,G,E){E.formatList(H,H.size(),F,function(A){G.appendChild(A);
});
};
Exhibit.TabularView.createDom=function(E){var D=Exhibit.TabularView.l10n;
var F={elmt:E,className:"exhibit-collectionView-header",children:[{tag:"div",field:"collectionSummaryDiv"},{tag:"div",className:"exhibit-tabularView-pagingControls",field:"topPagingDiv"},{tag:"div",field:"bodyDiv"},{tag:"div",className:"exhibit-tabularView-pagingControls",field:"bottomPagingDiv"}]};
return SimileAjax.DOM.createDOMFromTemplate(F);
};
Exhibit.TabularView.createColumnHeader=function(P,M,R,K,J,O){var N=Exhibit.TabularView.l10n;
var Q={elmt:M,className:K?"exhibit-tabularView-columnHeader-sorted":"exhibit-tabularView-columnHeader",title:K?N.columnHeaderReSortTooltip:N.columnHeaderSortTooltip,children:[R]};
if(K){Q.children.push({elmt:Exhibit.UI.createTranslucentImage(J?"images/up-arrow.png":"images/down-arrow.png")});
}SimileAjax.WindowManager.registerEvent(M,"click",O,null);
var L=SimileAjax.DOM.createDOMFromTemplate(Q);
return L;
};
Exhibit.ThumbnailView=function(E,F){this._div=E;
this._uiContext=F;
this._settings={};
var D=this;
this._listener={onItemsChanged:function(){D._orderedViewFrame._settings.page=0;
D._reconstruct();
}};
F.getCollection().addListener(this._listener);
this._orderedViewFrame=new Exhibit.OrderedViewFrame(F);
this._orderedViewFrame.parentReconstruct=function(){D._reconstruct();
};
};
Exhibit.ThumbnailView._settingSpecs={"showToolbox":{type:"boolean",defaultValue:true}};
Exhibit.ThumbnailView.create=function(F,G,H){var E=new Exhibit.ThumbnailView(G,Exhibit.UIContext.create(F,H,true));
E._lensRegistry=Exhibit.UIContext.createLensRegistry(F,H.getLensRegistry());
Exhibit.SettingsUtilities.collectSettings(F,Exhibit.ThumbnailView._settingSpecs,E._settings);
E._orderedViewFrame.configure(F);
E._initializeUI();
return E;
};
Exhibit.ThumbnailView.createFromDOM=function(H,I,J){var G=Exhibit.getConfigurationFromDOM(H);
var F=new Exhibit.ThumbnailView(I!=null?I:H,Exhibit.UIContext.createFromDOM(H,J,true));
F._lensRegistry=Exhibit.UIContext.createLensRegistryFromDOM(H,G,J.getLensRegistry());
Exhibit.SettingsUtilities.collectSettingsFromDOM(H,Exhibit.ThumbnailView._settingSpecs,F._settings);
Exhibit.SettingsUtilities.collectSettings(G,Exhibit.ThumbnailView._settingSpecs,F._settings);
F._orderedViewFrame.configureFromDOM(H);
F._orderedViewFrame.configure(G);
F._initializeUI();
return F;
};
Exhibit.ThumbnailView.prototype.dispose=function(){this._uiContext.getCollection().removeListener(this._listener);
if(this._toolboxWidget){this._toolboxWidget.dispose();
this._toolboxWidget=null;
}this._orderedViewFrame.dispose();
this._orderedViewFrame=null;
this._lensRegistry=null;
this._dom=null;
this._div.innerHTML="";
this._div=null;
this._uiContext=null;
};
Exhibit.ThumbnailView.prototype._initializeUI=function(){var C=this;
this._div.innerHTML="";
var D={elmt:this._div,children:[{tag:"div",field:"headerDiv"},{tag:"div",className:"exhibit-collectionView-body",field:"bodyDiv"},{tag:"div",field:"footerDiv"}]};
this._dom=SimileAjax.DOM.createDOMFromTemplate(D);
if(this._settings.showToolbox){this._toolboxWidget=Exhibit.ToolboxWidget.createFromDOM(this._div,this._div,this._uiContext);
this._toolboxWidget.getGeneratedHTML=function(){return C._dom.bodyDiv.innerHTML;
};
}this._orderedViewFrame._divHeader=this._dom.headerDiv;
this._orderedViewFrame._divFooter=this._dom.footerDiv;
this._orderedViewFrame._generatedContentElmtRetriever=function(){return C._dom.bodyDiv;
};
this._orderedViewFrame.initializeUI();
this._reconstruct();
};
Exhibit.ThumbnailView.prototype._reconstruct=function(){var D=this;
var F={div:this._dom.bodyDiv,itemContainer:null,groupDoms:[],groupCounts:[]};
var E=function(B){for(var A=B;
A<F.groupDoms.length;
A++){F.groupDoms[A].countSpan.innerHTML=F.groupCounts[A];
}F.groupDoms=F.groupDoms.slice(0,B);
F.groupCounts=F.groupCounts.slice(0,B);
if(B>0){F.div=F.groupDoms[B-1].contentDiv;
}else{F.div=D._dom.bodyDiv;
}F.itemContainer=null;
};
this._orderedViewFrame.onNewGroup=function(H,A,C){E(C);
var B=Exhibit.ThumbnailView.constructGroup(C,H);
F.div.appendChild(B.elmt);
F.div=B.contentDiv;
F.groupDoms.push(B);
F.groupCounts.push(0);
};
this._orderedViewFrame.onNewItem=function(A,I){if(F.itemContainer==null){F.itemContainer=Exhibit.ThumbnailView.constructItemContainer();
F.div.appendChild(F.itemContainer);
}for(var C=0;
C<F.groupCounts.length;
C++){F.groupCounts[C]++;
}var J=document.createElement("div");
J.className=SimileAjax.Platform.browser.isIE?"exhibit-thumbnailView-itemContainer-IE":"exhibit-thumbnailView-itemContainer";
var B=D._lensRegistry.createLens(A,J,D._uiContext);
F.itemContainer.appendChild(J);
};
this._div.style.display="none";
this._dom.bodyDiv.innerHTML="";
this._orderedViewFrame.reconstruct();
E(0);
this._div.style.display="block";
};
Exhibit.ThumbnailView.constructGroup=function(H,E){var G=Exhibit.ThumbnailView.l10n;
var F={tag:"div",className:"exhibit-thumbnailView-group",children:[{tag:"h"+(H+1),children:[E,{tag:"span",className:"exhibit-collectionView-group-count",children:[" (",{tag:"span",field:"countSpan"},")"]}],field:"header"},{tag:"div",className:"exhibit-collectionView-group-content",field:"contentDiv"}]};
return SimileAjax.DOM.createDOMFromTemplate(F);
};
Exhibit.ThumbnailView.constructItemContainer=function(){var B=document.createElement("div");
B.className="exhibit-thumbnailView-body";
return B;
};
Exhibit.TileView=function(E,F){this._div=E;
this._uiContext=F;
this._settings={};
var D=this;
this._listener={onItemsChanged:function(){D._orderedViewFrame._settings.page=0;
D._reconstruct();
}};
F.getCollection().addListener(this._listener);
this._orderedViewFrame=new Exhibit.OrderedViewFrame(F);
this._orderedViewFrame.parentReconstruct=function(){D._reconstruct();
};
};
Exhibit.TileView._settingSpecs={"showToolbox":{type:"boolean",defaultValue:true}};
Exhibit.TileView.create=function(F,G,H){var E=new Exhibit.TileView(G,Exhibit.UIContext.create(F,H));
Exhibit.SettingsUtilities.collectSettings(F,Exhibit.TileView._settingSpecs,E._settings);
E._orderedViewFrame.configure(F);
E._initializeUI();
return E;
};
Exhibit.TileView.createFromDOM=function(H,I,J){var G=Exhibit.getConfigurationFromDOM(H);
var F=new Exhibit.TileView(I!=null?I:H,Exhibit.UIContext.createFromDOM(H,J));
Exhibit.SettingsUtilities.collectSettingsFromDOM(H,Exhibit.TileView._settingSpecs,F._settings);
Exhibit.SettingsUtilities.collectSettings(G,Exhibit.TileView._settingSpecs,F._settings);
F._orderedViewFrame.configureFromDOM(H);
F._orderedViewFrame.configure(G);
F._initializeUI();
return F;
};
Exhibit.TileView.prototype.dispose=function(){this._uiContext.getCollection().removeListener(this._listener);
this._div.innerHTML="";
if(this._toolboxWidget){this._toolboxWidget.dispose();
this._toolboxWidget=null;
}this._orderedViewFrame.dispose();
this._orderedViewFrame=null;
this._dom=null;
this._div=null;
this._uiContext=null;
};
Exhibit.TileView.prototype._initializeUI=function(){var C=this;
this._div.innerHTML="";
var D={elmt:this._div,children:[{tag:"div",field:"headerDiv"},{tag:"div",className:"exhibit-collectionView-body",field:"bodyDiv"},{tag:"div",field:"footerDiv"}]};
this._dom=SimileAjax.DOM.createDOMFromTemplate(D);
if(this._settings.showToolbox){this._toolboxWidget=Exhibit.ToolboxWidget.createFromDOM(this._div,this._div,this._uiContext);
this._toolboxWidget.getGeneratedHTML=function(){return C._dom.bodyDiv.innerHTML;
};
}this._orderedViewFrame._divHeader=this._dom.headerDiv;
this._orderedViewFrame._divFooter=this._dom.footerDiv;
this._orderedViewFrame._generatedContentElmtRetriever=function(){return C._dom.bodyDiv;
};
this._orderedViewFrame.initializeUI();
this._reconstruct();
};
Exhibit.TileView.prototype._reconstruct=function(){var D=this;
var F={div:this._dom.bodyDiv,contents:null,groupDoms:[],groupCounts:[]};
var E=function(B){for(var A=B;
A<F.groupDoms.length;
A++){F.groupDoms[A].countSpan.innerHTML=F.groupCounts[A];
}F.groupDoms=F.groupDoms.slice(0,B);
F.groupCounts=F.groupCounts.slice(0,B);
if(B>0){F.div=F.groupDoms[B-1].contentDiv;
}else{F.div=D._dom.bodyDiv;
}F.contents=null;
};
this._orderedViewFrame.onNewGroup=function(H,A,C){E(C);
var B=Exhibit.TileView.constructGroup(C,H);
F.div.appendChild(B.elmt);
F.div=B.contentDiv;
F.groupDoms.push(B);
F.groupCounts.push(0);
};
this._orderedViewFrame.onNewItem=function(A,J){if(F.contents==null){F.contents=Exhibit.TileView.constructList();
F.div.appendChild(F.contents);
}for(var I=0;
I<F.groupCounts.length;
I++){F.groupCounts[I]++;
}var B=document.createElement("li");
var C=D._uiContext.getLensRegistry().createLens(A,B,D._uiContext);
F.contents.appendChild(B);
};
this._div.style.display="none";
this._dom.bodyDiv.innerHTML="";
this._orderedViewFrame.reconstruct();
E(0);
this._div.style.display="block";
};
Exhibit.TileView.constructGroup=function(F,D){var E={tag:"div",className:"exhibit-collectionView-group",children:[{tag:"h"+(F+1),children:[D,{tag:"span",className:"exhibit-collectionView-group-count",children:[" (",{tag:"span",field:"countSpan"},")"]}],field:"header"},{tag:"div",className:"exhibit-collectionView-group-content",field:"contentDiv"}]};
return SimileAjax.DOM.createDOMFromTemplate(E);
};
Exhibit.TileView.constructList=function(){var B=document.createElement("ol");
B.className="exhibit-tileView-body";
return B;
};
Exhibit.ViewPanel=function(D,C){this._uiContext=C;
this._div=D;
this._uiContextCache={};
this._viewConstructors=[];
this._viewConfigs=[];
this._viewLabels=[];
this._viewTooltips=[];
this._viewDomConfigs=[];
this._viewIDs=[];
this._viewIndex=0;
this._view=null;
};
Exhibit.ViewPanel.create=function(L,N,K){var T=new Exhibit.ViewPanel(N,K);
if("views" in L){for(var S=0;
S<L.views.length;
S++){var R=L.views[S];
var Q=("viewClass" in view)?view.viewClass:Exhibit.TileView;
if(typeof Q=="string"){Q=Exhibit.UI.viewClassNameToViewClass(Q);
}var P=null;
if("viewLabel" in R){P=R.viewLabel;
}else{if("label" in R){P=R.label;
}else{if("l10n" in Q&&"viewLabel" in Q.l10n){P=Q.l10n.viewLabel;
}else{P=""+Q;
}}}var O=null;
if("tooltip" in R){O=R.tooltip;
}else{if("l10n" in Q&&"viewTooltip" in Q.l10n){O=Q.l10n.viewTooltip;
}else{O=P;
}}var M=T._generateViewID();
if("id" in R){M=R.id;
}T._viewConstructors.push(Q);
T._viewConfigs.push(R);
T._viewLabels.push(P);
T._viewTooltips.push(O);
T._viewDomConfigs.push(null);
T._viewIDs.push(M);
}}if("initialView" in L){T._viewIndex=L.initialView;
}T._internalValidate();
T._initializeUI();
return T;
};
Exhibit.ViewPanel.createFromDOM=function(Q,Z){var Y=new Exhibit.ViewPanel(Q,Exhibit.UIContext.createFromDOM(Q,Z,false));
var a=Q.firstChild;
while(a!=null){if(a.nodeType==1){a.style.display="none";
var X=Exhibit.getRoleAttribute(a);
if(X=="view"){var V=Exhibit.TileView;
var R=Exhibit.getAttribute(a,"viewClass");
if(R!=null&&R.length>0){V=Exhibit.UI.viewClassNameToViewClass(R);
if(V==null){SimileAjax.Debug.warn("Unknown viewClass "+R);
}}var O=Exhibit.getAttribute(a,"viewLabel");
var T=(O!=null&&O.length>0)?O:Exhibit.getAttribute(a,"label");
var S=Exhibit.getAttribute(a,"title");
var P=a.id;
if(T==null){if("viewLabel" in V.l10n){T=V.l10n.viewLabel;
}else{T=""+V;
}}if(S==null){if("l10n" in V&&"viewTooltip" in V.l10n){S=V.l10n.viewTooltip;
}else{S=T;
}}if(P==null||P.length==0){P=Y._generateViewID();
}Y._viewConstructors.push(V);
Y._viewConfigs.push(null);
Y._viewLabels.push(T);
Y._viewTooltips.push(S);
Y._viewDomConfigs.push(a);
Y._viewIDs.push(P);
}}a=a.nextSibling;
}var U=Exhibit.getAttribute(Q,"initialView");
if(U!=null&&U.length>0){try{var b=parseInt(U);
if(!isNaN(b)){Y._viewIndex=b;
}}catch(W){}}Y._internalValidate();
Y._initializeUI();
return Y;
};
Exhibit.ViewPanel.prototype.dispose=function(){this._uiContext.getCollection().removeListener(this._listener);
if(this._view!=null){this._view.dispose();
this._view=null;
}this._div.innerHTML="";
this._uiContext.dispose();
this._uiContext=null;
this._div=null;
};
Exhibit.ViewPanel.prototype._generateViewID=function(){return"view"+Math.floor(Math.random()*1000000).toString();
};
Exhibit.ViewPanel.prototype._internalValidate=function(){if(this._viewConstructors.length==0){this._viewConstructors.push(Exhibit.TileView);
this._viewConfigs.push({});
this._viewLabels.push(Exhibit.TileView.l10n.viewLabel);
this._viewTooltips.push(Exhibit.TileView.l10n.viewTooltip);
this._viewDomConfigs.push(null);
this._viewIDs.push(this._generateViewID());
}this._viewIndex=Math.max(0,Math.min(this._viewIndex,this._viewConstructors.length-1));
};
Exhibit.ViewPanel.prototype._initializeUI=function(){var D=document.createElement("div");
if(this._div.firstChild!=null){this._div.insertBefore(D,this._div.firstChild);
}else{this._div.appendChild(D);
}var C=this;
this._dom=Exhibit.ViewPanel.constructDom(this._div.firstChild,this._viewLabels,this._viewTooltips,function(A){C._selectView(A);
});
this._createView();
};
Exhibit.ViewPanel.prototype._createView=function(){var F=this._dom.getViewContainer();
F.innerHTML="";
var J=document.createElement("div");
F.appendChild(J);
var I=this._viewIndex;
var H=this._uiContextCache[I]||this._uiContext;
try{if(this._viewDomConfigs[I]!=null){this._view=this._viewConstructors[I].createFromDOM(this._viewDomConfigs[I],F,H);
}else{this._view=this._viewConstructors[I].create(this._viewConfigs[I],F,H);
}}catch(G){SimileAjax.Debug.log("Failed to create view "+this._viewLabels[I]);
SimileAjax.Debug.exception(G);
}this._uiContextCache[I]=this._view._uiContext;
this._uiContext.getExhibit().setComponent(this._viewIDs[I],this._view);
this._dom.setViewIndex(I);
};
Exhibit.ViewPanel.prototype._switchView=function(B){if(this._view){this._uiContext.getExhibit().disposeComponent(this._viewIDs[this._viewIndex]);
this._view=null;
}this._viewIndex=B;
this._createView();
};
Exhibit.ViewPanel.prototype._selectView=function(F){var E=this._viewIndex;
var D=this;
SimileAjax.History.addLengthyAction(function(){D._switchView(F);
},function(){D._switchView(E);
},Exhibit.ViewPanel.l10n.createSelectViewActionTitle(D._viewLabels[F]));
};
Exhibit.ViewPanel.getPropertyValuesPairs=function(J,I,K){var L=[];
var N=function(G,C){var A=K.getProperty(G);
var D=C?K.getObjects(J,G):K.getSubjects(J,G);
var B=D.size();
if(B>0){var E=A.getValueType()=="item";
var F={propertyLabel:C?(B>1?A.getPluralLabel():A.getLabel()):(B>1?A.getReversePluralLabel():A.getReverseLabel()),valueType:A.getValueType(),values:[]};
if(E){D.visit(function(Q){var R=K.getObject(Q,"label");
F.values.push(R!=null?R:Q);
});
}else{D.visit(function(P){F.values.push(P);
});
}L.push(F);
}};
for(var H=0;
H<I.length;
H++){var M=I[H];
if(typeof M=="string"){N(M,true);
}else{N(M.property,M.forward);
}}return L;
};
Exhibit.ViewPanel.constructDom=function(I,N,K,H){var M=Exhibit.ViewPanel.l10n;
var L={elmt:I,className:"exhibit-viewPanel exhibit-ui-protection",children:[{tag:"div",className:"exhibit-viewPanel-viewSelection",field:"viewSelectionDiv"},{tag:"div",className:"exhibit-viewPanel-viewContainer",field:"viewContainerDiv"}]};
var J=SimileAjax.DOM.createDOMFromTemplate(L);
J.getViewContainer=function(){return J.viewContainerDiv;
};
J.setViewIndex=function(B){if(N.length>1){J.viewSelectionDiv.innerHTML="";
var C=function(E){var F=(E==B);
if(E>0){J.viewSelectionDiv.appendChild(document.createTextNode(" \u2022 "));
}var G=document.createElement("span");
G.className=F?"exhibit-viewPanel-viewSelection-selectedView":"exhibit-viewPanel-viewSelection-view";
G.title=K[E];
G.innerHTML=N[E];
if(!F){var D=function(S,T,R){H(E);
SimileAjax.DOM.cancelEvent(T);
return false;
};
SimileAjax.WindowManager.registerEvent(G,"click",D);
}J.viewSelectionDiv.appendChild(G);
};
for(var A=0;
A<N.length;
A++){C(A);
}}};
return J;
};
Exhibit.CollectionSummaryWidget=function(E,D){this._exhibit=D.getExhibit();
this._collection=D.getCollection();
this._uiContext=D;
this._div=E;
var F=this;
this._listener={onItemsChanged:function(){F._reconstruct();
}};
this._collection.addListener(this._listener);
};
Exhibit.CollectionSummaryWidget.create=function(F,G,E){var H=new Exhibit.CollectionSummaryWidget(G,Exhibit.UIContext.create(F,E));
H._initializeUI();
return H;
};
Exhibit.CollectionSummaryWidget.createFromDOM=function(F,G,E){var H=new Exhibit.CollectionSummaryWidget(G!=null?G:F,Exhibit.UIContext.createFromDOM(F,E));
H._initializeUI();
return H;
};
Exhibit.CollectionSummaryWidget.prototype.dispose=function(){this._collection.removeListener(this._listener);
this._div.innerHTML="";
this._noResultsDom=null;
this._allResultsDom=null;
this._filteredResultsDom=null;
this._div=null;
this._collection=null;
this._exhibit=null;
};
Exhibit.CollectionSummaryWidget.prototype._initializeUI=function(){var F=this;
var E=Exhibit.CollectionSummaryWidget.l10n;
var D=function(B,C,A){F._resetCollection();
SimileAjax.DOM.cancelEvent(C);
return false;
};
this._allResultsDom=SimileAjax.DOM.createDOMFromString("span",String.substitute(E.allResultsTemplate,["exhibit-collectionSummaryWidget-results"]));
this._filteredResultsDom=SimileAjax.DOM.createDOMFromString("span",String.substitute(E.filteredResultsTemplate,["exhibit-collectionSummaryWidget-results"]),{resetActionLink:Exhibit.UI.makeActionLink(E.resetFiltersLabel,D)});
this._noResultsDom=SimileAjax.DOM.createDOMFromString("span",String.substitute(E.noResultsTemplate,["exhibit-collectionSummaryWidget-results","exhibit-collectionSummaryWidget-count"]),{resetActionLink:Exhibit.UI.makeActionLink(E.resetFiltersLabel,D)});
this._div.innerHTML="";
this._reconstruct();
};
Exhibit.CollectionSummaryWidget.prototype._reconstruct=function(){var M=this._collection.countAllItems();
var H=this._collection.countRestrictedItems();
var K=this._uiContext.getDatabase();
var I=this._dom;
while(this._div.childNodes.length>0){this._div.removeChild(this._div.firstChild);
}if(M>0){if(H==0){this._div.appendChild(this._noResultsDom.elmt);
}else{var J=K.getTypeIDs(this._collection.getRestrictedItems()).toArray();
var N=J.length==1?J[0]:"Item";
var L=Exhibit.Database.l10n.labelItemsOfType(H,N,K,"exhibit-collectionSummaryWidget-count");
if(H==M){this._div.appendChild(this._allResultsDom.elmt);
this._allResultsDom.resultDescription.innerHTML="";
this._allResultsDom.resultDescription.appendChild(L);
}else{this._div.appendChild(this._filteredResultsDom.elmt);
this._filteredResultsDom.resultDescription.innerHTML="";
this._filteredResultsDom.resultDescription.appendChild(L);
this._filteredResultsDom.originalCountSpan.innerHTML=M;
}}}};
Exhibit.CollectionSummaryWidget.prototype._resetCollection=function(){var C={};
var D=this._collection;
SimileAjax.History.addLengthyAction(function(){C.restrictions=D.clearAllRestrictions();
},function(){D.applyRestrictions(C.restrictions);
},Exhibit.CollectionSummaryWidget.l10n.resetActionTitle);
};
Exhibit.LegendGradientWidget=function(D,C){this._div=D;
this._uiContext=C;
this._initializeUI();
};
Exhibit.LegendGradientWidget.create=function(D,C){return new Exhibit.LegendGradientWidget(D,C);
};
Exhibit.LegendGradientWidget.prototype.addGradient=function(l){var z=[];
var z=l;
var k=function(B,A){return B.value-A.value;
};
z.sort(k);
var x=document.createElement("table");
var e=document.createElement("tbody");
var g=document.createElement("tr");
var h=document.createElement("tr");
var i=document.createElement("tr");
g.style.height="2em";
h.style.height="2em";
i.style.height="2em";
x.style.width="80%";
x.cellSpacing="0";
x.style.emptyCells="show";
x.style.marginLeft="auto";
x.style.marginRight="auto";
e.appendChild(g);
e.appendChild(h);
e.appendChild(i);
x.appendChild(e);
this._theRow1=g;
this._theRow2=h;
this._theRow3=i;
var r=z[0].value;
var b=z[z.length-1].value;
var w=(b-r)/50;
var n=0;
for(var c=0;
c<z.length-1;
c++){var s=z[c].value;
var Z=z[c+1].value;
var a=document.createElement("td");
a.style.backgroundColor="rgb("+z[c].red+","+z[c].green+","+z[c].blue+")";
var q=document.createElement("td");
var AA=document.createElement("div");
var t=document.createTextNode(z[c].value);
AA.appendChild(t);
q.appendChild(AA);
g.appendChild(document.createElement("td"));
h.appendChild(a);
i.appendChild(q);
a.onmouseover=function(){this.style.border="solid 1.2px";
};
a.onmouseout=function(){this.style.border="none";
};
n++;
for(var d=s+w;
d<Z;
d+=w){var u=(d-s)/(Z-s);
var y=Math.floor(z[c].red+u*(z[c+1].red-z[c].red));
var v=Math.floor(z[c].green+u*(z[c+1].green-z[c].green));
var m=Math.floor(z[c].blue+u*(z[c+1].blue-z[c].blue));
var a=document.createElement("td");
a.count=n;
a.style.backgroundColor="rgb("+y+","+v+","+m+")";
var q=document.createElement("td");
var AA=document.createElement("div");
var t=document.createTextNode((Math.floor(d*100))/100);
AA.appendChild(t);
q.appendChild(AA);
AA.style.width="2px";
AA.style.overflow="hidden";
AA.style.visibility="hidden";
g.appendChild(q);
h.appendChild(a);
i.appendChild(document.createElement("td"));
n++;
a.onmouseover=function(){this.parentNode.parentNode.childNodes[0].childNodes[this.count].childNodes[0].style.visibility="visible";
this.parentNode.parentNode.childNodes[0].childNodes[this.count].childNodes[0].style.overflow="visible";
this.style.border="solid 1.2px";
};
a.onmouseout=function(){this.parentNode.parentNode.childNodes[0].childNodes[this.count].childNodes[0].style.visibility="hidden";
this.parentNode.parentNode.childNodes[0].childNodes[this.count].childNodes[0].style.overflow="hidden";
this.style.border="none";
};
}}var o=z.length-1;
var a=document.createElement("td");
a.style.backgroundColor="rgb("+z[o].red+","+z[o].green+","+z[o].blue+")";
var q=document.createElement("td");
var AA=document.createElement("div");
var t=document.createTextNode(b);
AA.appendChild(t);
q.appendChild(AA);
g.appendChild(document.createElement("td"));
h.appendChild(a);
i.appendChild(q);
n++;
a.onmouseover=function(){this.style.border="solid 1.2px";
};
a.onmouseout=function(){this.style.border="none";
};
this._div.appendChild(x);
};
Exhibit.LegendGradientWidget.prototype.addEntry=function(L,K){var G=document.createElement("td");
G.style.width="1.5em";
G.style.height="2em";
this._theRow1.appendChild(G);
this._theRow1.appendChild(document.createElement("td"));
this._theRow2.appendChild(document.createElement("td"));
this._theRow3.appendChild(document.createElement("td"));
var H=document.createElement("td");
H.style.backgroundColor=L;
this._theRow2.appendChild(H);
var I=document.createElement("td");
var J=document.createElement("div");
J.appendChild(document.createTextNode(K));
I.appendChild(J);
this._theRow3.appendChild(I);
};
Exhibit.LegendGradientWidget.prototype.dispose=function(){this._div.innerHTML="";
this._div=null;
this._uiContext=null;
};
Exhibit.LegendGradientWidget.prototype._initializeUI=function(){this._div.className="exhibit-legendGradientWidget";
this._div.innerHTML="";
};
Exhibit.LegendGradientWidget.prototype.clear=function(){this._div.innerHTML="";
};
Exhibit.LegendWidget=function(E,F,D){this._configuration=E;
this._div=F;
this._uiContext=D;
this._colorMarkerGenerator="colorMarkerGenerator" in E?E.colorMarkerGenerator:Exhibit.LegendWidget._defaultColorMarkerGenerator;
this._sizeMarkerGenerator="sizeMarkerGenerator" in E?E.sizeMarkerGenerator:Exhibit.LegendWidget._defaultSizeMarkerGenerator;
this._iconMarkerGenerator="iconMarkerGenerator" in E?E.iconMarkerGenerator:Exhibit.LegendWidget._defaultIconMarkerGenerator;
this._labelStyler="labelStyler" in E?E.labelStyler:Exhibit.LegendWidget._defaultColorLabelStyler;
this._initializeUI();
};
Exhibit.LegendWidget.create=function(E,F,D){return new Exhibit.LegendWidget(E,F,D);
};
Exhibit.LegendWidget.prototype.dispose=function(){this._div.innerHTML="";
this._div=null;
this._uiContext=null;
};
Exhibit.LegendWidget.prototype._initializeUI=function(){this._div.className="exhibit-legendWidget";
this._div.innerHTML="<div id='exhibit-color-legend'></div><div id='exhibit-size-legend'></div><div id='exhibit-icon-legend'></div>";
};
Exhibit.LegendWidget.prototype.clear=function(){this._div.innerHTML="<div id='exhibit-color-legend'></div><div id='exhibit-size-legend'></div><div id='exhibit-icon-legend'></div>";
};
Exhibit.LegendWidget.prototype.addLegendLabel=function(E,H){var G=SimileAjax.DOM.createDOMFromString("div","<div id='legend-label'><span id='label' class='exhibit-legendWidget-entry-title'>"+E.replace(/\s+/g,"\u00a0")+"</span>\u00a0\u00a0 </div>",{});
G.elmt.className="exhibit-legendWidget-label";
var F="exhibit-"+H+"-legend";
document.getElementById(F).appendChild(G.elmt);
};
Exhibit.LegendWidget.prototype.addEntry=function(H,F,J){J=J||"color";
F=(F!=null)?F.toString():key.toString();
if(J=="color"){var G=SimileAjax.DOM.createDOMFromString("span","<span id='marker'></span>\u00a0<span id='label' class='exhibit-legendWidget-entry-title'>"+F.replace(/\s+/g,"\u00a0")+"</span>\u00a0\u00a0 ",{marker:this._colorMarkerGenerator(H)});
var I=document.getElementById("exhibit-color-legend");
}if(J=="size"){var G=SimileAjax.DOM.createDOMFromString("span","<span id='marker'></span>\u00a0<span id='label' class='exhibit-legendWidget-entry-title'>"+F.replace(/\s+/g,"\u00a0")+"</span>\u00a0\u00a0 ",{marker:this._sizeMarkerGenerator(H)});
var I=document.getElementById("exhibit-size-legend");
}if(J=="icon"){var G=SimileAjax.DOM.createDOMFromString("span","<span id='marker'></span>\u00a0<span id='label' class='exhibit-legendWidget-entry-title'>"+F.replace(/\s+/g,"\u00a0")+"</span>\u00a0\u00a0 ",{marker:this._iconMarkerGenerator(H)});
var I=document.getElementById("exhibit-icon-legend");
}G.elmt.className="exhibit-legendWidget-entry";
this._labelStyler(G.label,H);
I.appendChild(G.elmt);
};
Exhibit.LegendWidget._localeSort=function(D,C){return D.localeCompare(C);
};
Exhibit.LegendWidget._defaultColorMarkerGenerator=function(D){var C=document.createElement("span");
C.className="exhibit-legendWidget-entry-swatch";
C.style.background=D;
C.innerHTML="\u00a0\u00a0";
return C;
};
Exhibit.LegendWidget._defaultSizeMarkerGenerator=function(D){var C=document.createElement("span");
C.className="exhibit-legendWidget-entry-swatch";
C.style.height=D;
C.style.width=D;
C.style.background="#C0C0C0";
C.innerHTML="\u00a0\u00a0";
return C;
};
Exhibit.LegendWidget._defaultIconMarkerGenerator=function(D){var C=document.createElement("span");
C.className="<img src="+D+"/>";
return C;
};
Exhibit.LegendWidget._defaultColorLabelStyler=function(C,D){};
Exhibit.Logo=function(D,C){this._exhibit=C;
this._elmt=D;
this._color="Silver";
};
Exhibit.Logo.create=function(F,H,E){var G=new Exhibit.Logo(H,E);
if("color" in F){G._color=F.color;
}G._initializeUI();
return G;
};
Exhibit.Logo.createFromDOM=function(G,H){var F=new Exhibit.Logo(G,H);
var E=Exhibit.getAttribute(G,"color");
if(E!=null&&E.length>0){F._color=E;
}F._initializeUI();
return F;
};
Exhibit.Logo.prototype.dispose=function(){this._elmt=null;
this._exhibit=null;
};
Exhibit.Logo.prototype._initializeUI=function(){var G="http://static.simile.mit.edu/graphics/logos/exhibit/exhibit-small-"+this._color+".png";
var H=SimileAjax.Graphics.createTranslucentImage(G);
var F="exhibit-logo-image";
if(!document.getElementById(F)){H.id=F;
}var E=document.createElement("a");
E.href="http://simile.mit.edu/exhibit/";
E.title="http://simile.mit.edu/exhibit/";
E.target="_blank";
E.appendChild(H);
this._elmt.appendChild(E);
};
Exhibit.OptionWidget=function(E,F,D){this._label=E.label;
this._checked="checked" in E?E.checked:false;
this._onToggle=E.onToggle;
this._containerElmt=F;
this._uiContext=D;
this._initializeUI();
};
Exhibit.OptionWidget.create=function(E,F,D){return new Exhibit.OptionWidget(E,F,D);
};
Exhibit.OptionWidget.prototype.dispose=function(){this._containerElmt.innerHTML="";
this._dom=null;
this._containerElmt=null;
this._uiContext=null;
};
Exhibit.OptionWidget.uncheckedImageURL=Exhibit.urlPrefix+"images/option.png";
Exhibit.OptionWidget.checkedImageURL=Exhibit.urlPrefix+"images/option-check.png";
Exhibit.OptionWidget.uncheckedTemplate="<span id='uncheckedSpan' style='display: none;'><img id='uncheckedImage' /> %0</span>";
Exhibit.OptionWidget.checkedTemplate="<span id='checkedSpan' style='display: none;'><img id='checkedImage' /> %0</span>";
Exhibit.OptionWidget.prototype._initializeUI=function(){this._containerElmt.className="exhibit-optionWidget";
this._dom=SimileAjax.DOM.createDOMFromString(this._containerElmt,String.substitute(Exhibit.OptionWidget.uncheckedTemplate+Exhibit.OptionWidget.checkedTemplate,[this._label]),{uncheckedImage:SimileAjax.Graphics.createTranslucentImage(Exhibit.OptionWidget.uncheckedImageURL),checkedImage:SimileAjax.Graphics.createTranslucentImage(Exhibit.OptionWidget.checkedImageURL)});
if(this._checked){this._dom.checkedSpan.style.display="inline";
}else{this._dom.uncheckedSpan.style.display="inline";
}SimileAjax.WindowManager.registerEvent(this._containerElmt,"click",this._onToggle);
};
Exhibit.OptionWidget.prototype.getChecked=function(){return this._checked;
};
Exhibit.OptionWidget.prototype.setChecked=function(B){if(B!=this._checked){this._checked=B;
if(B){this._dom.checkedSpan.style.display="inline";
this._dom.uncheckedSpan.style.display="none";
}else{this._dom.checkedSpan.style.display="none";
this._dom.uncheckedSpan.style.display="inline";
}}};
Exhibit.OptionWidget.prototype.toggle=function(){this.setChecked(!this._checked);
};
Exhibit.ResizableDivWidget=function(E,F,D){this._div=F;
this._configuration=E;
if(!("minHeight" in E)){E["minHeight"]=10;
}this._initializeUI();
};
Exhibit.ResizableDivWidget.create=function(E,F,D){return new Exhibit.ResizableDivWidget(E,F,D);
};
Exhibit.ResizableDivWidget.prototype.dispose=function(){this._div.innerHTML="";
this._contentDiv=null;
this._resizerDiv=null;
this._div=null;
};
Exhibit.ResizableDivWidget.prototype.getContentDiv=function(){return this._contentDiv;
};
Exhibit.ResizableDivWidget.prototype._initializeUI=function(){var B=this;
this._div.innerHTML="<div></div><div class='exhibit-resizableDivWidget-resizer'>"+SimileAjax.Graphics.createTranslucentImageHTML(Exhibit.urlPrefix+"images/down-arrow.png")+"</div>";
this._contentDiv=this._div.childNodes[0];
this._resizerDiv=this._div.childNodes[1];
SimileAjax.WindowManager.registerForDragging(this._resizerDiv,{onDragStart:function(){this._height=B._contentDiv.offsetHeight;
},onDragBy:function(A,D){this._height+=D;
B._contentDiv.style.height=Math.max(B._configuration.minHeight,this._height)+"px";
},onDragEnd:function(){if("onResize" in B._configuration){B._configuration["onResize"]();
}}});
};
Exhibit.ToolboxWidget=function(D,C){this._containerElmt=D;
this._uiContext=C;
this._settings={};
this._customExporters=[];
this._hovering=false;
this._initializeUI();
};
Exhibit.ToolboxWidget._settingSpecs={"itemID":{type:"text"}};
Exhibit.ToolboxWidget.create=function(F,G,E){var H=new Exhibit.ToolboxWidget(G,Exhibit.UIContext.create(F,E));
Exhibit.ToolboxWidget._configure(H,F);
H._initializeUI();
return H;
};
Exhibit.ToolboxWidget.createFromDOM=function(H,I,F){var G=Exhibit.getConfigurationFromDOM(H);
var J=new Exhibit.ToolboxWidget(I!=null?I:H,Exhibit.UIContext.createFromDOM(H,F));
Exhibit.SettingsUtilities.collectSettingsFromDOM(H,Exhibit.ToolboxWidget._settingSpecs,J._settings);
Exhibit.ToolboxWidget._configure(J,G);
J._initializeUI();
return J;
};
Exhibit.ToolboxWidget._configure=function(C,D){Exhibit.SettingsUtilities.collectSettings(D,Exhibit.ToolboxWidget._settingSpecs,C._settings);
};
Exhibit.ToolboxWidget.prototype.dispose=function(){this._containerElmt.onmouseover=null;
this._containerElmt.onmouseout=null;
this._dismiss();
this._settings=null;
this._containerElmt=null;
this._uiContext=null;
};
Exhibit.ToolboxWidget.prototype.addExporter=function(B){this._customExporters.push(B);
};
Exhibit.ToolboxWidget.prototype._initializeUI=function(){var B=this;
this._containerElmt.onmouseover=function(A){B._onContainerMouseOver(A);
};
this._containerElmt.onmouseout=function(A){B._onContainerMouseOut(A);
};
};
Exhibit.ToolboxWidget.prototype._onContainerMouseOver=function(L){if(!this._hovering){var J=this;
var H=SimileAjax.DOM.getPageCoordinates(this._containerElmt);
var I=document.body.offsetWidth;
var K=document.body.offsetHeight;
var G=document.createElement("div");
G.className="exhibit-toolboxWidget-popup screen";
G.style.top=H.top+"px";
G.style.right=(I-H.left-this._containerElmt.offsetWidth)+"px";
this._fillPopup(G);
document.body.appendChild(G);
G.onmouseover=function(A){J._onPopupMouseOver(A);
};
G.onmouseout=function(A){J._onPopupMouseOut(A);
};
this._popup=G;
this._hovering=true;
}else{this._clearTimeout();
}};
Exhibit.ToolboxWidget.prototype._onContainerMouseOut=function(B){if(Exhibit.ToolboxWidget._mouseOutsideElmt(Exhibit.ToolboxWidget._getEvent(B),this._containerElmt)){this._setTimeout();
}};
Exhibit.ToolboxWidget.prototype._onPopupMouseOver=function(B){this._clearTimeout();
};
Exhibit.ToolboxWidget.prototype._onPopupMouseOut=function(B){if(Exhibit.ToolboxWidget._mouseOutsideElmt(Exhibit.ToolboxWidget._getEvent(B),this._containerElmt)){this._setTimeout();
}};
Exhibit.ToolboxWidget.prototype._setTimeout=function(){var B=this;
this._timer=window.setTimeout(function(){B._onTimeout();
},200);
};
Exhibit.ToolboxWidget.prototype._clearTimeout=function(){if(this._timer){window.clearTimeout(this._timer);
this._timer=null;
}};
Exhibit.ToolboxWidget.prototype._onTimeout=function(){this._dismiss();
this._hovering=false;
this._timer=null;
};
Exhibit.ToolboxWidget.prototype._fillPopup=function(F){var D=this;
var E=Exhibit.UI.createTranslucentImage("images/liveclipboard-icon.png");
E.className="exhibit-toolboxWidget-button";
SimileAjax.WindowManager.registerEvent(E,"click",function(B,C,A){D._showExportMenu(E);
});
F.appendChild(E);
};
Exhibit.ToolboxWidget.prototype._dismiss=function(){if(this._popup){document.body.removeChild(this._popup);
this._popup=null;
}};
Exhibit.ToolboxWidget._mouseOutsideElmt=function(E,H){var G=SimileAjax.DOM.getEventPageCoordinates(E);
var F=SimileAjax.DOM.getPageCoordinates(H);
return((G.x<F.left||G.x>F.left+H.offsetWidth)||(G.y<F.top||G.y>F.top+H.offsetHeight));
};
Exhibit.ToolboxWidget._getEvent=function(B){return(B)?B:((event)?event:null);
};
Exhibit.ToolboxWidget.prototype._showExportMenu=function(K){var G=this;
var I=Exhibit.UI.createPopupMenuDom(K);
var J=function(A){I.appendMenuItem(A.getLabel(),null,function(){var C=G._uiContext.getDatabase();
var B=("itemID" in G._settings)?A.exportOne(G._settings.itemID,C):A.exportMany(G._uiContext.getCollection().getRestrictedItems(),C);
Exhibit.ToolboxWidget.createExportDialogBox(B).open();
});
};
var H=Exhibit.getExporters();
for(var L=0;
L<H.length;
L++){J(H[L]);
}for(var L=0;
L<this._customExporters.length;
L++){J(this._customExporters[L]);
}if("getGeneratedHTML" in this){J({getLabel:function(){return Exhibit.l10n.htmlExporterLabel;
},exportOne:this.getGeneratedHTML,exportMany:this.getGeneratedHTML});
}I.open();
};
Exhibit.ToolboxWidget.createExportDialogBox=function(D){var F={tag:"div",className:"exhibit-copyDialog exhibit-ui-protection",children:[{tag:"button",field:"closeButton",children:[Exhibit.l10n.exportDialogBoxCloseButtonLabel]},{tag:"p",children:[Exhibit.l10n.exportDialogBoxPrompt]},{tag:"div",field:"textAreaContainer"}]};
var E=SimileAjax.DOM.createDOMFromTemplate(F);
E.textAreaContainer.innerHTML="<textarea wrap='off' rows='15'>"+D+"</textarea>";
E.close=function(){document.body.removeChild(E.elmt);
};
E.open=function(){E.elmt.style.top=(document.body.scrollTop+100)+"px";
document.body.appendChild(E.elmt);
E.layer=SimileAjax.WindowManager.pushLayer(function(){E.close();
},false);
var A=E.textAreaContainer.firstChild;
A.select();
SimileAjax.WindowManager.registerEvent(E.closeButton,"click",function(C,H,B){SimileAjax.WindowManager.popLayer(E.layer);
},E.layer);
SimileAjax.WindowManager.registerEvent(A,"keyup",function(C,H,B){if(H.keyCode==27){SimileAjax.WindowManager.popLayer(E.layer);
}},E.layer);
};
return E;
};
Exhibit.Coders=new Object();
Exhibit.Coders.mixedCaseColor="#fff";
Exhibit.Coders.othersCaseColor="#aaa";
Exhibit.Coders.missingCaseColor="#888";
Exhibit.FacetUtilities=new Object();
Exhibit.FacetUtilities.constructFacetFrame=function(P,L,O,Q,R,N,K){L.className="exhibit-facet";
var J=SimileAjax.DOM.createDOMFromString(L,"<div class='exhibit-facet-header'><div class='exhibit-facet-header-filterControl' id='clearSelectionsDiv' title='"+Exhibit.FacetUtilities.l10n.clearSelectionsTooltip+"'><span id='filterCountSpan'></span><img id='checkImage' /></div>"+((N)?"<img src='"+Exhibit.urlPrefix+"images/collapse.png' class='exhibit-facet-header-collapse' id='collapseImg' />":"")+"<span class='exhibit-facet-header-title'>"+O+"</span></div><div class='exhibit-facet-body-frame' id='frameDiv'></div>",{checkImage:Exhibit.UI.createTranslucentImage("images/black-check.png")});
var M=Exhibit.ResizableDivWidget.create({},J.frameDiv,R);
J.valuesContainer=M.getContentDiv();
J.valuesContainer.className="exhibit-facet-body";
J.setSelectionCount=function(A){this.filterCountSpan.innerHTML=A;
this.clearSelectionsDiv.style.display=A>0?"block":"none";
};
SimileAjax.WindowManager.registerEvent(J.clearSelectionsDiv,"click",Q);
if(N){SimileAjax.WindowManager.registerEvent(J.collapseImg,"click",function(){Exhibit.FacetUtilities.toggleCollapse(J,P);
});
if(K){Exhibit.FacetUtilities.toggleCollapse(J,P);
}}return J;
};
Exhibit.FacetUtilities.toggleCollapse=function(F,E){var D=F.frameDiv;
if(D.style.display!="none"){D.style.display="none";
F.collapseImg.src=Exhibit.urlPrefix+"images/expand.png";
}else{D.style.display="block";
F.collapseImg.src=Exhibit.urlPrefix+"images/collapse.png";
if(typeof E.onUncollapse=="function"){E.onUncollapse();
}}};
Exhibit.FacetUtilities.isCollapsed=function(D){var C=D._dom.frameDiv;
return C.style.display=="none";
};
Exhibit.FacetUtilities.constructFacetItem=function(O,Q,L,J,N,P,M,R){if(Exhibit.params.safe){O=Exhibit.Formatter.encodeAngleBrackets(O);
}var K=SimileAjax.DOM.createDOMFromString("div","<div class='exhibit-facet-value-count'>"+Q+"</div><div class='exhibit-facet-value-inner' id='inner'>"+("<div class='exhibit-facet-value-checkbox'>&#160;"+SimileAjax.Graphics.createTranslucentImageHTML(Exhibit.urlPrefix+(N?(J?"images/black-check.png":"images/no-check.png"):"images/no-check-no-border.png"))+"</div>")+"<a class='exhibit-facet-value-link' href='javascript:{}' id='link'></a></div>");
K.elmt.className=J?"exhibit-facet-value exhibit-facet-value-selected":"exhibit-facet-value";
if(typeof O=="string"){K.elmt.title=O;
K.link.innerHTML=O;
if(L!=null){K.link.style.color=L;
}}else{K.link.appendChild(O);
if(L!=null){O.style.color=L;
}}SimileAjax.WindowManager.registerEvent(K.elmt,"click",M,SimileAjax.WindowManager.getBaseLayer());
if(N){SimileAjax.WindowManager.registerEvent(K.inner.firstChild,"click",P,SimileAjax.WindowManager.getBaseLayer());
}return K.elmt;
};
Exhibit.FacetUtilities.constructFlowingFacetFrame=function(O,J,M,P,I,N,K){J.className="exhibit-flowingFacet";
var L=SimileAjax.DOM.createDOMFromString(J,"<div class='exhibit-flowingFacet-header'>"+((N)?"<img src='"+Exhibit.urlPrefix+"images/collapse.png' class='exhibit-facet-header-collapse' id='collapseImg' />":"")+"<span class='exhibit-flowingFacet-header-title'>"+M+"</span></div><div id='frameDiv'><div class='exhibit-flowingFacet-body' id='valuesContainer'></div></div>");
L.setSelectionCount=function(A){};
if(N){SimileAjax.WindowManager.registerEvent(L.collapseImg,"click",function(){Exhibit.FacetUtilities.toggleCollapse(L,O);
});
if(K){Exhibit.FacetUtilities.toggleCollapse(L,O);
}}return L;
};
Exhibit.FacetUtilities.constructFlowingFacetItem=function(O,Q,L,J,N,P,M,R){if(Exhibit.params.safe){O=Exhibit.Formatter.encodeAngleBrackets(O);
}var K=SimileAjax.DOM.createDOMFromString("div",("<div class='exhibit-flowingFacet-value-checkbox'>"+SimileAjax.Graphics.createTranslucentImageHTML(Exhibit.urlPrefix+(N?(J?"images/black-check.png":"images/no-check.png"):"images/no-check-no-border.png"))+"</div>")+"<a class='exhibit-flowingFacet-value-link' href='javascript:{}' id='inner'></a> <span class='exhibit-flowingFacet-value-count'>("+Q+")</span>");
K.elmt.className=J?"exhibit-flowingFacet-value exhibit-flowingFacet-value-selected":"exhibit-flowingFacet-value";
if(typeof O=="string"){K.elmt.title=O;
K.inner.innerHTML=O;
if(L!=null){K.inner.style.color=L;
}}else{K.inner.appendChild(O);
if(L!=null){O.style.color=L;
}}SimileAjax.WindowManager.registerEvent(K.elmt,"click",M,SimileAjax.WindowManager.getBaseLayer());
if(N){SimileAjax.WindowManager.registerEvent(K.elmt.firstChild,"click",P,SimileAjax.WindowManager.getBaseLayer());
}return K.elmt;
};
Exhibit.FacetUtilities.constructHierarchicalFacetItem=function(R,V,O,X,W,U,Q,T,P,S,M){if(Exhibit.params.safe){R=Exhibit.Formatter.encodeAngleBrackets(R);
}var N=SimileAjax.DOM.createDOMFromString("div","<div class='exhibit-facet-value-count'>"+V+"</div><div class='exhibit-facet-value-inner' id='inner'>"+("<div class='exhibit-facet-value-checkbox'>&#160;"+SimileAjax.Graphics.createTranslucentImageHTML(Exhibit.urlPrefix+(Q?(X?"images/black-check.png":"images/no-check.png"):"images/no-check-no-border.png"))+"</div>")+"<a class='exhibit-facet-value-link' href='javascript:{}' id='link'></a>"+(W?("<a class='exhibit-facet-value-children-toggle' href='javascript:{}' id='toggle'>"+SimileAjax.Graphics.createTranslucentImageHTML(Exhibit.urlPrefix+"images/down-arrow.png")+SimileAjax.Graphics.createTranslucentImageHTML(Exhibit.urlPrefix+"images/right-arrow.png")+"</a>"):"")+"</div>"+(W?"<div class='exhibit-facet-childrenContainer' id='childrenContainer'></div>":""));
N.elmt.className=X?"exhibit-facet-value exhibit-facet-value-selected":"exhibit-facet-value";
if(typeof R=="string"){N.elmt.title=R;
N.link.appendChild(document.createTextNode(R));
if(O!=null){N.link.style.color=O;
}}else{N.link.appendChild(R);
if(O!=null){R.style.color=O;
}}SimileAjax.WindowManager.registerEvent(N.elmt,"click",P,SimileAjax.WindowManager.getBaseLayer());
if(Q){SimileAjax.WindowManager.registerEvent(N.inner.firstChild,"click",T,SimileAjax.WindowManager.getBaseLayer());
}if(W){N.showChildren=function(A){N.childrenContainer.style.display=A?"block":"none";
N.toggle.childNodes[0].style.display=A?"inline":"none";
N.toggle.childNodes[1].style.display=A?"none":"inline";
};
SimileAjax.WindowManager.registerEvent(N.toggle,"click",S,SimileAjax.WindowManager.getBaseLayer());
N.showChildren(U);
}return N;
};
Exhibit.FacetUtilities.constructFlowingHierarchicalFacetItem=function(R,V,O,X,W,U,Q,T,P,S,M){if(Exhibit.params.safe){R=Exhibit.Formatter.encodeAngleBrackets(R);
}var N=SimileAjax.DOM.createDOMFromString("div",("<div class='exhibit-flowingFacet-value-checkbox'>"+SimileAjax.Graphics.createTranslucentImageHTML(Exhibit.urlPrefix+(Q?(X?"images/black-check.png":"images/no-check.png"):"images/no-check-no-border.png"))+"</div>")+"<a class='exhibit-flowingFacet-value-link' href='javascript:{}' id='inner'></a> <span class='exhibit-flowingFacet-value-count'>("+V+")</span>"+(W?("<a class='exhibit-flowingFacet-value-children-toggle' href='javascript:{}' id='toggle'>"+SimileAjax.Graphics.createTranslucentImageHTML(Exhibit.urlPrefix+"images/down-arrow.png")+SimileAjax.Graphics.createTranslucentImageHTML(Exhibit.urlPrefix+"images/right-arrow.png")+"</a>"):"")+(W?"<div class='exhibit-flowingFacet-childrenContainer' id='childrenContainer'></div>":""));
N.elmt.className=X?"exhibit-flowingFacet-value exhibit-flowingFacet-value-selected":"exhibit-flowingFacet-value";
if(typeof R=="string"){N.elmt.title=R;
N.inner.appendChild(document.createTextNode(R));
if(O!=null){N.inner.style.color=O;
}}else{N.inner.appendChild(R);
if(O!=null){R.style.color=O;
}}SimileAjax.WindowManager.registerEvent(N.elmt,"click",P,SimileAjax.WindowManager.getBaseLayer());
if(Q){SimileAjax.WindowManager.registerEvent(N.elmt.firstChild,"click",T,SimileAjax.WindowManager.getBaseLayer());
}if(W){N.showChildren=function(A){N.childrenContainer.style.display=A?"block":"none";
N.toggle.childNodes[0].style.display=A?"inline":"none";
N.toggle.childNodes[1].style.display=A?"none":"inline";
};
SimileAjax.WindowManager.registerEvent(N.toggle,"click",S,SimileAjax.WindowManager.getBaseLayer());
N.showChildren(U);
}return N;
};
Exhibit.FacetUtilities.Cache=function(H,F,G){var E=this;
this._database=H;
this._collection=F;
this._expression=G;
this._listener={onRootItemsChanged:function(){if("_itemToValue" in E){delete E._itemToValue;
}if("_valueToItem" in E){delete E._valueToItem;
}if("_missingItems" in E){delete E._missingItems;
}}};
F.addListener(this._listener);
};
Exhibit.FacetUtilities.Cache.prototype.dispose=function(){this._collection.removeListener(this._listener);
this._collection=null;
this._listener=null;
this._itemToValue=null;
this._valueToItem=null;
this._missingItems=null;
};
Exhibit.FacetUtilities.Cache.prototype.getItemsFromValues=function(E,G){var F;
if(this._expression.isPath()){F=this._expression.getPath().walkBackward(E,"item",G,this._database).getSet();
}else{this._buildMaps();
F=new Exhibit.Set();
var H=this._valueToItem;
E.visit(function(B){if(B in H){var A=H[B];
for(var D=0;
D<A.length;
D++){var C=A[D];
if(G.contains(C)){F.add(C);
}}}});
}return F;
};
Exhibit.FacetUtilities.Cache.prototype.getItemsMissingValue=function(E,F){this._buildMaps();
F=F||new Exhibit.Set();
var D=this._missingItems;
E.visit(function(A){if(A in D){F.add(A);
}});
return F;
};
Exhibit.FacetUtilities.Cache.prototype.getValueCountsFromItems=function(S){var K=[];
var P=this._database;
var N="text";
if(this._expression.isPath()){var O=this._expression.getPath();
var M=O.walkForward(S,"item",P);
N=M.valueType;
if(M.size>0){M.forEachValue(function(A){var B=O.evaluateBackward(A,N,S,P);
K.push({value:A,count:B.size});
});
}}else{this._buildMaps();
N=this._valueType;
for(var Q in this._valueToItem){var R=this._valueToItem[Q];
var T=0;
for(var L=0;
L<R.length;
L++){if(S.contains(R[L])){T++;
}}if(T>0){K.push({value:Q,count:T});
}}}return{entries:K,valueType:N};
};
Exhibit.FacetUtilities.Cache.prototype.getValuesFromItems=function(D){if(this._expression.isPath()){return this._expression.getPath().walkForward(D,"item",database).getSet();
}else{this._buildMaps();
var E=new Exhibit.Set();
var F=this._itemToValue;
D.visit(function(A){if(A in F){var C=F[A];
for(var B=0;
B<C.length;
B++){E.add(C[B]);
}}});
return E;
}};
Exhibit.FacetUtilities.Cache.prototype.countItemsMissingValue=function(D){this._buildMaps();
var E=0;
for(var F in this._missingItems){if(D.contains(F)){E++;
}}return E;
};
Exhibit.FacetUtilities.Cache.prototype._buildMaps=function(){if(!("_itemToValue" in this)){var N={};
var M={};
var H={};
var I="text";
var K=function(C,A,B){if(C in B){B[C].push(A);
}else{B[C]=[A];
}};
var J=this._expression;
var L=this._database;
this._collection.getAllItems().visit(function(A){var B=J.evaluateOnItem(A,L);
if(B.values.size()>0){I=B.valueType;
B.values.visit(function(C){K(A,C,N);
K(C,A,M);
});
}else{H[A]=true;
}});
this._itemToValue=N;
this._valueToItem=M;
this._missingItems=H;
this._valueType=I;
}};
Exhibit.Set=function(C){this._hash={};
this._count=0;
if(C instanceof Array){for(var D=0;
D<C.length;
D++){this.add(C[D]);
}}else{if(C instanceof Exhibit.Set){this.addSet(C);
}}};
Exhibit.Set.prototype.add=function(B){if(!(B in this._hash)){this._hash[B]=true;
this._count++;
return true;
}return false;
};
Exhibit.Set.prototype.addSet=function(D){for(var C in D._hash){this.add(C);
}};
Exhibit.Set.prototype.remove=function(B){if(B in this._hash){delete this._hash[B];
this._count--;
return true;
}return false;
};
Exhibit.Set.prototype.removeSet=function(D){for(var C in D._hash){this.remove(C);
}};
Exhibit.Set.prototype.retainSet=function(D){for(var C in this._hash){if(!D.contains(C)){delete this._hash[C];
this._count--;
}}};
Exhibit.Set.prototype.contains=function(B){return(B in this._hash);
};
Exhibit.Set.prototype.size=function(){return this._count;
};
Exhibit.Set.prototype.toArray=function(){var C=[];
for(var D in this._hash){C.push(D);
}return C;
};
Exhibit.Set.prototype.visit=function(C){for(var D in this._hash){if(C(D)==true){break;
}}};
Exhibit.Set.createIntersection=function(J,K,L){var H=(L)?L:new Exhibit.Set();
var G,I;
if(J.size()<K.size()){G=J;
I=K;
}else{G=K;
I=J;
}G.visit(function(A){if(I.contains(A)){H.add(A);
}});
return H;
};
Exhibit.SettingsUtilities=new Object();
Exhibit.SettingsUtilities.collectSettings=function(D,E,F){Exhibit.SettingsUtilities._internalCollectSettings(function(A){return D[A];
},E,F);
};
Exhibit.SettingsUtilities.collectSettingsFromDOM=function(F,E,D){Exhibit.SettingsUtilities._internalCollectSettings(function(A){return Exhibit.getAttribute(F,A);
},E,D);
};
Exhibit.SettingsUtilities._internalCollectSettings=function(X,O,N){for(var T in O){var R=O[T];
var P=T;
if("name" in R){P=R.name;
}if(!(P in N)&&"defaultValue" in R){N[P]=R.defaultValue;
}var S=X(T);
if(S==null){continue;
}if(typeof S=="string"){S=S.trim();
if(S.length==0){continue;
}}var V="text";
if("type" in R){V=R.type;
}var Q=1;
if("dimensions" in R){Q=R.dimensions;
}try{if(Q>1){var Y=",";
if("separator" in R){Y=R.separator;
}var U=S.split(Y);
if(U.length!=Q){throw new Error("Expected a tuple of "+Q+" dimensions separated with "+Y+" but got "+S);
}else{for(var Z=0;
Z<U.length;
Z++){U[Z]=Exhibit.SettingsUtilities._parseSetting(U[Z].trim(),V,R);
}N[P]=U;
}}else{N[P]=Exhibit.SettingsUtilities._parseSetting(S,V,R);
}}catch(W){SimileAjax.Debug.exception(W);
}}};
Exhibit.SettingsUtilities._parseSetting=function(s,type,spec){var sType=typeof s;
if(type=="text"){return s;
}else{if(type=="float"){if(sType=="number"){return s;
}else{if(sType=="string"){var f=parseFloat(s);
if(!isNaN(f)){return f;
}}}throw new Error("Expected a floating point number but got "+s);
}else{if(type=="int"){if(sType=="number"){return Math.round(s);
}else{if(sType=="string"){var n=parseInt(s);
if(!isNaN(n)){return n;
}}}throw new Error("Expected an integer but got "+s);
}else{if(type=="boolean"){if(sType=="boolean"){return s;
}else{if(sType=="string"){s=s.toLowerCase();
if(s=="true"){return true;
}else{if(s=="false"){return false;
}}}}throw new Error("Expected either 'true' or 'false' but got "+s);
}else{if(type=="function"){if(sType=="function"){return s;
}else{if(sType=="string"){try{var f=eval(s);
if(typeof f=="function"){return f;
}}catch(e){}}}throw new Error("Expected a function or the name of a function but got "+s);
}else{if(type=="enum"){var choices=spec.choices;
for(var i=0;
i<choices.length;
i++){if(choices[i]==s){return s;
}}throw new Error("Expected one of "+choices.join(", ")+" but got "+s);
}else{throw new Error("Unknown setting type "+type);
}}}}}}};
Exhibit.SettingsUtilities.createAccessors=function(F,E,D){Exhibit.SettingsUtilities._internalCreateAccessors(function(A){return F[A];
},E,D);
};
Exhibit.SettingsUtilities.createAccessorsFromDOM=function(F,E,D){Exhibit.SettingsUtilities._internalCreateAccessors(function(A){return Exhibit.getAttribute(F,A);
},E,D);
};
Exhibit.SettingsUtilities._internalCreateAccessors=function(U,N,V){for(var R in N){var P=N[R];
var T=P.accessorName;
var L=null;
var S=false;
var Q=function(A){S=false;
if("bindings" in A){return Exhibit.SettingsUtilities._createBindingsAccessor(U,A.bindings);
}else{if("bindingNames" in A){S=true;
return Exhibit.SettingsUtilities._createTupleAccessor(U,A);
}else{return Exhibit.SettingsUtilities._createElementalAccessor(U,A);
}}};
if("alternatives" in P){var O=P.alternatives;
for(var M=0;
M<O.length;
M++){L=Q(O[M]);
if(L!=null){break;
}}}else{L=Q(P);
}if(L!=null){V[T]=L;
}else{if(!(T in V)){V[T]=function(B,C,A){};
}}}};
Exhibit.SettingsUtilities._createBindingsAccessor=function(J,M){var I=[];
for(var K=0;
K<M.length;
K++){var L=M[K];
var H=null;
var N=false;
if("bindingNames" in L){N=true;
H=Exhibit.SettingsUtilities._createTupleAccessor(J,L);
}else{H=Exhibit.SettingsUtilities._createElementalAccessor(J,L);
}if(H==null){if(!("optional" in L)||!L.optional){return null;
}}else{I.push({bindingName:L.bindingName,accessor:H,isTuple:N});
}}return function(A,B,C){Exhibit.SettingsUtilities._evaluateBindings(A,B,C,I);
};
};
Exhibit.SettingsUtilities._createTupleAccessor=function(T,O){var Q=T(O.attributeName);
if(Q==null){return null;
}if(typeof Q=="string"){Q=Q.trim();
if(Q.length==0){return null;
}}try{var R=Exhibit.ExpressionParser.parse(Q);
var P=[];
var N=O.types;
for(var M=0;
M<N.length;
M++){P.push(Exhibit.SettingsUtilities._typeToParser(N[M]));
}var K=O.bindingNames;
var L=",";
if("separator" in O){L=O.separator;
}return function(C,D,A,B){R.evaluateOnItem(C,D).values.visit(function(H){var I=H.split(L);
if(I.length==P.length){var F={};
if(B){for(var E in B){F[E]=B[E];
}}for(var G=0;
G<K.length;
G++){F[K[G]]=null;
P[G](I[G],function(J){F[K[G]]=J;
});
}A(F);
}});
};
}catch(S){SimileAjax.Debug.exception(S);
return null;
}};
Exhibit.SettingsUtilities._createElementalAccessor=function(L,H){var M=L(H.attributeName);
if(M==null){return null;
}if(typeof M=="string"){M=M.trim();
if(M.length==0){return null;
}}var N="text";
if("type" in H){N=H.type;
}try{var J=Exhibit.ExpressionParser.parse(M);
var I=Exhibit.SettingsUtilities._typeToParser(N);
return function(A,B,C){J.evaluateOnItem(A,B).values.visit(function(D){return I(D,C);
});
};
}catch(K){SimileAjax.Debug.exception(K);
return null;
}};
Exhibit.SettingsUtilities._typeToParser=function(B){switch(B){case"text":return Exhibit.SettingsUtilities._textParser;
case"url":return Exhibit.SettingsUtilities._urlParser;
case"float":return Exhibit.SettingsUtilities._floatParser;
case"int":return Exhibit.SettingsUtilities._intParser;
case"date":return Exhibit.SettingsUtilities._dateParser;
case"boolean":return Exhibit.SettingsUtilities._booleanParser;
default:throw new Error("Unknown setting type "+B);
}};
Exhibit.SettingsUtilities._textParser=function(C,D){return D(C);
};
Exhibit.SettingsUtilities._floatParser=function(D,F){var E=parseFloat(D);
if(!isNaN(E)){return F(E);
}return false;
};
Exhibit.SettingsUtilities._intParser=function(D,F){var E=parseInt(D);
if(!isNaN(E)){return F(E);
}return false;
};
Exhibit.SettingsUtilities._dateParser=function(D,F){if(D instanceof Date){return F(D);
}else{if(typeof D=="number"){var E=new Date(0);
E.setUTCFullYear(D);
return F(E);
}else{var E=SimileAjax.DateTime.parseIso8601DateTime(D.toString());
if(E!=null){return F(E);
}}}return false;
};
Exhibit.SettingsUtilities._booleanParser=function(C,D){C=C.toString().toLowerCase();
if(C=="true"){return D(true);
}else{if(C=="false"){return D(false);
}}return false;
};
Exhibit.SettingsUtilities._urlParser=function(C,D){return D(Exhibit.Persistence.resolveURL(C.toString()));
};
Exhibit.SettingsUtilities._evaluateBindings=function(I,J,K,H){var G=H.length-1;
var L=function(F,D){var A=H[D];
var E=false;
var B=D==G?function(){K(F);
}:function(){L(F,D+1);
};
if(A.isTuple){A.accessor(I,J,function(N){E=true;
F=N;
B();
},F);
}else{var C=A.bindingName;
A.accessor(I,J,function(N){E=true;
F[C]=N;
B();
});
}if(!E){B();
}};
L({},0);
};
Exhibit.Util={};
Exhibit.Util.round=function(F,E){E=E||1;
var H=Math.floor(Math.log(E)/Math.log(10));
F=(Math.round(F/E)*E).toString();
var G=F.split(".");
if(H>=0){return G[0];
}H=-H;
G[1]=(G[1]||"").substring(0,H);
while(G[1].length<H){G[1]+="0";
}return G.join(".");
};
if(!Array.prototype.indexOf){Array.prototype.indexOf=function(F){var D=this.length;
var E=Number(arguments[1])||0;
E=(E<0)?Math.ceil(E):Math.floor(E);
if(E<0){E+=D;
}for(;
E<D;
E++){if(E in this&&this[E]===F){return E;
}}return -1;
};
}if(!Array.prototype.filter){Array.prototype.filter=function(L){var G=this.length;
if(typeof L!="function"){throw new TypeError();
}var I=new Array();
var J=arguments[1];
for(var K=0;
K<G;
K++){if(K in this){var H=this[K];
if(L.call(J,H,K,this)){I.push(H);
}}}return I;
};
}if(!Array.prototype.map){Array.prototype.map=function(G,I){if(typeof G!="function"){throw new TypeError();
}if(typeof I=="undefined"){I=this;
}var J=[],H=this.length;
for(var F=0;
F<H;
F++){if(this.hasOwnProperty(F)){J[F]=G.call(I,this[F],F,this);
}}return J;
};
}if(!Array.prototype.forEach){Array.prototype.forEach=function(H){var E=this.length;
if(typeof H!="function"){throw new TypeError();
}var F=arguments[1];
for(var G=0;
G<E;
G++){if(G in this){H.call(F,this[G],G,this);
}}};
}Exhibit.ViewUtilities=new Object();
Exhibit.ViewUtilities.openBubbleForItems=function(J,H,I){var G=SimileAjax.DOM.getPageCoordinates(J);
var F=SimileAjax.Graphics.createBubbleForPoint(G.left+Math.round(J.offsetWidth/2),G.top+Math.round(J.offsetHeight/2),I.getSetting("bubbleWidth"),I.getSetting("bubbleHeight"));
Exhibit.ViewUtilities.fillBubbleWithItems(F.content,H,I);
};
Exhibit.ViewUtilities.fillBubbleWithItems=function(J,M,N){if(J==null){J=document.createElement("div");
}if(M.length>1){J.className=[J.className,"exhibit-views-bubbleWithItems"].join(" ");
var K=document.createElement("ul");
for(var L=0;
L<M.length;
L++){N.format(M[L],"item",function(A){var B=document.createElement("li");
B.appendChild(A);
K.appendChild(B);
});
}J.appendChild(K);
}else{var H=document.createElement("div");
var I=N.getLensRegistry().createLens(M[0],H,N);
J.appendChild(H);
}return J;
};
Exhibit.ViewUtilities.constructPlottingViewDom=function(H,G,J,L,K){var I=SimileAjax.DOM.createDOMFromString(H,"<div class='exhibit-views-header'>"+(J?"<div id='collectionSummaryDiv'></div>":"")+"<div id='unplottableMessageDiv' class='exhibit-views-unplottableMessage'></div></div><div id='resizableDiv'></div><div id='legendDiv'></div>",{});
if(J){I.collectionSummaryWidget=Exhibit.CollectionSummaryWidget.create({},I.collectionSummaryDiv,G);
}I.resizableDivWidget=Exhibit.ResizableDivWidget.create(L,I.resizableDiv,G);
I.plotContainer=I.resizableDivWidget.getContentDiv();
if(K.colorGradient==true){I.legendGradientWidget=Exhibit.LegendGradientWidget.create(I.legendDiv,G);
}else{I.legendWidget=Exhibit.LegendWidget.create(K,I.legendDiv,G);
}I.setUnplottableMessage=function(A,B){Exhibit.ViewUtilities._setUnplottableMessage(I,A,B,G);
};
I.dispose=function(){if(J){I.collectionSummaryWidget.dispose();
}I.resizableDivWidget.dispose();
I.legendWidget.dispose();
};
return I;
};
Exhibit.ViewUtilities._setUnplottableMessage=function(H,J,F,I){var G=H.unplottableMessageDiv;
if(F.length==0){G.style.display="none";
}else{G.innerHTML="";
var H=SimileAjax.DOM.createDOMFromString(G,Exhibit.ViewUtilities.l10n.unplottableMessageFormatter(J,F,I),{});
SimileAjax.WindowManager.registerEvent(H.unplottableCountLink,"click",function(B,C,A){Exhibit.ViewUtilities.openBubbleForItems(B,F,I);
});
G.style.display="block";
}};


/* locale.js */
(function(){var C=("Exhibit_isCompiled" in window)&&window.Exhibit_isCompiled;
if(!C){var D=["exhibit-l10n.js","data/database-l10n.js","ui/ui-context-l10n.js","ui/lens-l10n.js","ui/formatter-l10n.js","ui/widgets/collection-summary-widget-l10n.js","ui/views/view-panel-l10n.js","ui/views/ordered-view-frame-l10n.js","ui/views/tile-view-l10n.js","ui/views/thumbnail-view-l10n.js","ui/views/tabular-view-l10n.js","util/coders-l10n.js","util/facets-l10n.js","util/views-l10n.js"];
var B=[];
var A=Exhibit.urlPrefix+"locales/es/";
if(Exhibit.params.bundle){SimileAjax.includeJavascriptFiles(document,A,["exhibit-es-bundle.js"]);
if(B.length>0){SimileAjax.includeCssFiles(document,A,["exhibit-es-bundle.css"]);
}}else{SimileAjax.includeJavascriptFiles(document,A+"scripts/",D);
SimileAjax.includeCssFiles(document,A+"styles/",B);
}}})();


/* exhibit-es-bundle.js */
if(!("l10n" in Exhibit.Database)){Exhibit.Database.l10n={};
}Exhibit.Database.l10n.itemType={label:"Elemento",pluralLabel:"Elementos"};
Exhibit.Database.l10n.labelProperty={label:"etiqueta",pluralLabel:"etiquetas",reverseLabel:"etiqueta de",reversePluralLabel:"etiquetas de"};
Exhibit.Database.l10n.typeProperty={label:"tipo",pluralLabel:"tipos",reverseLabel:"tipo de",reversePluralLabel:"tipos de"};
Exhibit.Database.l10n.uriProperty={label:"URI",pluralLabel:"URIs",reverseLabel:"URI de",reversePluralLabel:"URIs de"};
Exhibit.Database.l10n.sortLabels={"text":{ascending:"a - z",descending:"z - a"},"number":{ascending:"menor primero",descending:"mayor primero"},"date":{ascending:"la más antigua primero",descending:"la más reciente primero"},"boolean":{ascending:"falso primero",descending:"verdadero primero"},"item":{ascending:"a - z",descending:"z - a"}};
if(!("l10n" in Exhibit)){Exhibit.l10n={};
}Exhibit.l10n.missingLabel="falta";
Exhibit.l10n.missingSortKey="(falta)";
Exhibit.l10n.notApplicableSortKey="(n/a)";
Exhibit.l10n.itemLinkLabel="link";
Exhibit.l10n.busyIndicatorMessage="Procesando...";
Exhibit.l10n.showDocumentationMessage="Te enseñaremos la documentación asociada después de este mensaje.";
Exhibit.l10n.showJavascriptValidationMessage="Te explicaremos los detalles del error después de este mensaje.";
Exhibit.l10n.showJsonValidationMessage="Te explicaremos los detalles del error después de este mensaje.";
Exhibit.l10n.showJsonValidationFormMessage="Te redirigiremos a un servicio web donde podrás subir y verificar tu código después de este mensaje.";
Exhibit.l10n.badJsonMessage=function(C,D){return"El fichero de datos JSON\n  "+C+"\ncontiene errores =\n\n"+D;
};
Exhibit.l10n.failedToLoadDataFileMessage=function(B){return"No podemos localizar el fichero de datos\n  "+B+"\nComprueba que el nombre del archivo es correcto.";
};
Exhibit.l10n.copyButtonLabel="Copiar";
Exhibit.l10n.copyAllButtonLabel="Copiar todo";
Exhibit.l10n.copyDialogBoxCloseButtonLabel="Cerrar";
Exhibit.l10n.copyDialogBoxPrompt="Copia este código en tu clipboard como si fuera texto. Pulsa ESC para cerrar este cuadro de diálogo.";
Exhibit.l10n.focusDialogBoxCloseButtonLabel="Cerrar";
Exhibit.l10n.rdfXmlExporterLabel="RDF/XML";
Exhibit.l10n.smwExporterLabel="Semantic wikitext";
Exhibit.l10n.exhibitJsonExporterLabel="Exhibit JSON";
Exhibit.l10n.tsvExporterLabel="Tab Separated Values";
Exhibit.l10n.htmlExporterLabel="Generated HTML of this view";
if(!("l10n" in Exhibit.Formatter)){Exhibit.Formatter.l10n={};
}Exhibit.Formatter.l10n.listSeparator=", ";
Exhibit.Formatter.l10n.listLastSeparator=", and ";
Exhibit.Formatter.l10n.listPairSeparator=" and ";
Exhibit.Formatter.l10n.textEllipsis="...";
Exhibit.Formatter.l10n.booleanTrue="true";
Exhibit.Formatter.l10n.booleanFalse="false";
Exhibit.Formatter.l10n.currencySymbol="$";
Exhibit.Formatter.l10n.currencySymbolPlacement="first";
Exhibit.Formatter.l10n.currencyShowSign=true;
Exhibit.Formatter.l10n.currencyShowRed=false;
Exhibit.Formatter.l10n.currencyShowParentheses=false;
Exhibit.Formatter.l10n.dateTimeDefaultFormat="EEE, MMM d, yyyy, hh:mm a";
Exhibit.Formatter.l10n.dateShortFormat="dd/MM/yy";
Exhibit.Formatter.l10n.timeShortFormat="hh:mm a";
Exhibit.Formatter.l10n.dateTimeShortFormat="dd/MM/yy hh:mm a";
Exhibit.Formatter.l10n.dateMediumFormat="EEE, MMM d, yyyy";
Exhibit.Formatter.l10n.timeMediumFormat="hh:mm a";
Exhibit.Formatter.l10n.dateTimeMediumFormat="EEE, MMM d, yyyy, hh:mm a";
Exhibit.Formatter.l10n.dateLongFormat="EEEE, MMMM d, yyyy";
Exhibit.Formatter.l10n.timeLongFormat="HH:mm:ss z";
Exhibit.Formatter.l10n.dateTimeLongFormat="EEEE, MMMM d, yyyy, HH:mm:ss z";
Exhibit.Formatter.l10n.dateFullFormat="EEEE, MMMM d, yyyy";
Exhibit.Formatter.l10n.timeFullFormat="HH:mm:ss.S z";
Exhibit.Formatter.l10n.dateTimeFullFormat="EEEE, MMMM d, yyyy G, HH:mm:ss.S z";
Exhibit.Formatter.l10n.shortDaysOfWeek=["Sun","Mon","Tue","Wed","Thr","Fri","Sat"];
Exhibit.Formatter.l10n.daysOfWeek=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];
Exhibit.Formatter.l10n.shortMonths=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
Exhibit.Formatter.l10n.months=["January","February","March","April","May","June","July","August","September","October","November","December"];
Exhibit.Formatter.l10n.commonEra="CE";
Exhibit.Formatter.l10n.beforeCommonEra="BCE";
Exhibit.Formatter.l10n.beforeNoon="am";
Exhibit.Formatter.l10n.afterNoon="pm";
Exhibit.Formatter.l10n.BeforeNoon="AM";
Exhibit.Formatter.l10n.AfterNoon="PM";
if(!("l10n" in Exhibit.Lens)){Exhibit.Lens.l10n={};
}if(!("l10n" in Exhibit.UIContext)){Exhibit.UIContext.l10n={};
}Exhibit.UIContext.l10n.initialSettings={"bubbleWidth":400,"bubbleHeight":300};
if(!("l10n" in Exhibit.OrderedViewFrame)){Exhibit.OrderedViewFrame.l10n={};
}Exhibit.OrderedViewFrame.l10n.removeOrderLabel="Eliminar este orden";
Exhibit.OrderedViewFrame.l10n.sortingControlsTemplate="ordenados por: <span id='ordersSpan'></span>; <a id='thenSortByAction' href='javascript:void' class='exhibit-action' title='Seguir ordenando elementos'>luego por...</a>";
Exhibit.OrderedViewFrame.l10n.formatSortActionTitle=function(D,C){return"Ordenados por "+D+" ("+C+")";
};
Exhibit.OrderedViewFrame.l10n.formatRemoveOrderActionTitle=function(D,C){return"Eliminar ordenación por "+D+" ("+C+")";
};
Exhibit.OrderedViewFrame.l10n.groupedAsSortedOptionLabel="agrupar según orden";
Exhibit.OrderedViewFrame.l10n.groupAsSortedActionTitle="agrupar según orden";
Exhibit.OrderedViewFrame.l10n.ungroupAsSortedActionTitle="sin agrupar";
Exhibit.OrderedViewFrame.l10n.showAllActionTitle="show all results";
Exhibit.OrderedViewFrame.l10n.dontShowAllActionTitle="show first few results";
Exhibit.OrderedViewFrame.l10n.formatDontShowAll=function(B){return"Mostrar solamente "+B+" resultados";
};
Exhibit.OrderedViewFrame.l10n.formatShowAll=function(B){return"Mostrar "+B+" resultados";
};
if(!("l10n" in Exhibit.TabularView)){Exhibit.TabularView.l10n={};
}Exhibit.TabularView.l10n.viewLabel="Tabla";
Exhibit.TabularView.l10n.viewTooltip="Ver elementos como una tabla";
Exhibit.TabularView.l10n.columnHeaderSortTooltip="Click para ordenar por esta columna";
Exhibit.TabularView.l10n.columnHeaderReSortTooltip="Click para ordenar inversamente";
Exhibit.TabularView.l10n.makeSortActionTitle=function(C,D){return(D?"ordenado acendentemente por ":"ordenado descendentemente por ")+C;
};
if(!("l10n" in Exhibit.ThumbnailView)){Exhibit.ThumbnailView.l10n={};
}Exhibit.ThumbnailView.l10n.viewLabel="Thumbnails";
Exhibit.ThumbnailView.l10n.viewTooltip="Ver elementos como iconos";
if(!("l10n" in Exhibit.TileView)){Exhibit.TileView.l10n={};
}Exhibit.TileView.l10n.viewLabel="Tiles";
Exhibit.TileView.l10n.viewTooltip="Ver elementos en una lista detallada";
if(!("l10n" in Exhibit.ViewPanel)){Exhibit.ViewPanel.l10n={};
}Exhibit.ViewPanel.l10n.createSelectViewActionTitle=function(B){return"selecciona "+B+" vista";
};
Exhibit.ViewPanel.l10n.missingViewClassMessage="En la especificación de una de las vistas falta el campo viewClass.";
Exhibit.ViewPanel.l10n.viewClassNotFunctionMessage=function(B){return"El valor del atributo viewClass '"+B+"' espeficicado\nen una de las vistas no se corresponde con una función Javascript.";
};
Exhibit.ViewPanel.l10n.badViewClassMessage=function(B){return"El valor del atributo viewClass '"+B+"' especificado\nen una de las vistas no es una expresión Javascript válida.";
};
if(!("l10n" in Exhibit.CollectionSummaryWidget)){Exhibit.CollectionSummaryWidget.l10n={};
}Exhibit.CollectionSummaryWidget.l10n.resetFiltersLabel="Reset All Filters";
Exhibit.CollectionSummaryWidget.l10n.resetFiltersTooltip="Elimina algunos filtros para obtener resultados.";
Exhibit.CollectionSummaryWidget.l10n.resetActionTitle="Reset all filters";
Exhibit.CollectionSummaryWidget.l10n.allResultsTemplate="<span class='%0' id='resultDescription'></span>";
Exhibit.CollectionSummaryWidget.l10n.noResultsTemplate="<span class='%0'>0</span> <span class='%1' id='typesSpan'>resultados</span> (<span id='resetActionLink'></span>)";
Exhibit.CollectionSummaryWidget.l10n.filteredResultsTemplate="<span class='%0' id='resultDescription'></span> filtered from <span id='originalCountSpan'>0</span> originally (<span id='resetActionLink'></span>)";
if(!("l10n" in Exhibit.Coders)){Exhibit.Coders.l10n={};
}Exhibit.Coders.l10n.mixedCaseLabel="mixed";
Exhibit.Coders.l10n.missingCaseLabel="missing";
Exhibit.Coders.l10n.othersCaseLabel="others";
if(!("l10n" in Exhibit.FacetUtilities)){Exhibit.FacetUtilities.l10n={};
}Exhibit.FacetUtilities.l10n.clearSelectionsTooltip="Eliminar estas selecciones";
Exhibit.FacetUtilities.l10n.facetSelectActionTitle="Select %0 in facet %1";
Exhibit.FacetUtilities.l10n.facetUnselectActionTitle="Unselect %0 in facet %1";
Exhibit.FacetUtilities.l10n.facetSelectOnlyActionTitle="Select only %0 in facet %1";
Exhibit.FacetUtilities.l10n.facetClearSelectionsActionTitle="Clear selections in facet %0";
Exhibit.FacetUtilities.l10n.facetTextSearchActionTitle="Text search %0";
Exhibit.FacetUtilities.l10n.facetClearTextSearchActionTitle="Clear text search";
Exhibit.FacetUtilities.l10n.missingThisField="(missing this field)";
if(!("l10n" in Exhibit.ViewUtilities)){Exhibit.ViewUtilities.l10n={};
}Exhibit.ViewUtilities.l10n.unplottableMessageFormatter=function(H,E,G){var F=E.length;
return String.substitute("<a class='exhibit-action exhibit-views-unplottableCount' href='javascript:void' id='unplottableCountLink'>%0</a> out of <class class='exhibit-views-totalCount'>%1</span> cannot be plotted.",[F==1?(F+" result"):(F+" results"),H]);
};


/* compile-epilog.js */
(function(){var f=null;
if("SimileWidgets_onLoad" in window){if(typeof SimileWidgets_onLoad=="string"){f=eval(SimileWidgets_onLoad);
SimileWidgets_onLoad=null;
}else{if(typeof SimileWidgets_onLoad=="function"){f=SimileWidgets_onLoad;
SimileWidgets_onLoad=null;
}}}if(f!=null){f();
}})();
