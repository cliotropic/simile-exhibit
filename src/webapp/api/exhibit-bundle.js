

/* collection.js */
Exhibit.Collection=function(B,A){this._id=B;
this._database=A;
this._listeners=new SimileAjax.ListenerQueue();
this._facets=[];
this._updating=false;
this._items=null;
this._restrictedItems=null;
};
Exhibit.Collection.createAllItemsCollection=function(C,A){var B=new Exhibit.Collection(C,A);
B._update=Exhibit.Collection._allItemsCollection_update;
Exhibit.Collection._initializeBasicCollection(B,A);
return B;
};
Exhibit.Collection.create=function(D,C,A){var B=new Exhibit.Collection(D,A);
if("itemTypes" in C){B._itemTypes=C.itemTypes;
B._update=Exhibit.Collection._typeBasedCollection_update;
}else{B._update=Exhibit.Collection._allItemsCollection_update;
}Exhibit.Collection._initializeBasicCollection(B,A);
return B;
};
Exhibit.Collection.createFromDOM=function(E,A,C){var D=new Exhibit.Collection(E,C);
var B=Exhibit.getAttribute(A,"itemTypes",",");
if(B!=null&&B.length>0){D._itemTypes=B;
D._update=Exhibit.Collection._typeBasedCollection_update;
}else{D._update=Exhibit.Collection._allItemsCollection_update;
}Exhibit.Collection._initializeBasicCollection(D,C);
return D;
};
Exhibit.Collection.create2=function(E,D,A){var B=A.getDatabase();
if("expression" in D){var C=new Exhibit.Collection(E,B);
C._expression=Exhibit.ExpressionParser.parse(D.expression);
C._baseCollection=("baseCollectionID" in D)?A.getExhibit().getCollection(D.baseCollectionID):A.getCollection();
C._restrictBaseCollection=("restrictBaseCollection" in D)?D.restrictBaseCollection:false;
if(C._restrictBaseCollection){Exhibit.Collection._initializeRestrictingBasedCollection(C);
}else{Exhibit.Collection._initializeBasedCollection(C);
}return C;
}else{return Exhibit.Collection.create(E,D,B);
}};
Exhibit.Collection.createFromDOM2=function(G,B,C){var E=C.getDatabase();
var A=Exhibit.getAttribute(B,"expression");
if(A!=null&&A.length>0){var F=new Exhibit.Collection(G,E);
F._expression=Exhibit.ExpressionParser.parse(A);
var D=Exhibit.getAttribute(B,"baseCollectionID");
F._baseCollection=(D!=null&&D.length>0)?C.getExhibit().getCollection(D):C.getCollection();
F._restrictBaseCollection=Exhibit.getAttribute(B,"restrictBaseCollection")=="true";
if(F._restrictBaseCollection){Exhibit.Collection._initializeRestrictingBasedCollection(F,E);
}else{Exhibit.Collection._initializeBasedCollection(F);
}return F;
}else{return Exhibit.Collection.createFromDOM(G,B,E);
}};
Exhibit.Collection._initializeBasicCollection=function(C,A){var B=function(){C._update();
};
C._listener={onAfterLoadingItems:B,onAfterRemovingAllStatements:B};
A.addListener(C._listener);
C._update();
};
Exhibit.Collection._initializeBasedCollection=function(A){A._update=Exhibit.Collection._basedCollection_update;
A._listener={onItemsChanged:function(){A._update();
}};
A._baseCollection.addListener(A._listener);
A._update();
};
Exhibit.Collection._initializeRestrictingBasedCollection=function(B,A){B._cache=new Exhibit.FacetUtilities.Cache(A,B._baseCollection,B._expression);
B._isUpdatingBaseCollection=false;
B.onFacetUpdated=Exhibit.Collection._restrictingBasedCollection_onFacetUpdated;
B.restrict=Exhibit.Collection._restrictingBasedCollection_restrict;
B.update=Exhibit.Collection._restrictingBasedCollection_update;
B.hasRestrictions=Exhibit.Collection._restrictingBasedCollection_hasRestrictions;
B._baseCollection.addFacet(B);
};
Exhibit.Collection._allItemsCollection_update=function(){this._items=this._database.getAllItems();
this._onRootItemsChanged();
};
Exhibit.Collection._typeBasedCollection_update=function(){var A=new Exhibit.Set();
for(var B=0;
B<this._itemTypes.length;
B++){this._database.getSubjects(this._itemTypes[B],"type",A);
}this._items=A;
this._onRootItemsChanged();
};
Exhibit.Collection._basedCollection_update=function(){this._items=this._expression.evaluate({"value":this._baseCollection.getRestrictedItems()},{"value":"item"},"value",this._database).values;
this._onRootItemsChanged();
};
Exhibit.Collection._restrictingBasedCollection_onFacetUpdated=function(A){if(!this._updating){Exhibit.Collection.prototype.onFacetUpdated.call(this,A);
this._isUpdatingBaseCollection=true;
this._baseCollection.onFacetUpdated(this);
this._isUpdatingBaseCollection=false;
}};
Exhibit.Collection._restrictingBasedCollection_restrict=function(A){if(this._restrictedItems.size()==this._items.size()){return A;
}return this._cache.getItemsFromValues(this._restrictedItems,A);
};
Exhibit.Collection._restrictingBasedCollection_update=function(A){if(!this._isUpdatingBaseCollection){this._items=this._cache.getValuesFromItems(A);
this._onRootItemsChanged();
}};
Exhibit.Collection._restrictingBasedCollection_hasRestrictions=function(){return(this._items!=null)&&(this._restrictedItems!=null)&&(this._restrictedItems.size()!=this._items.size());
};
Exhibit.Collection.prototype.getID=function(){return this._id;
};
Exhibit.Collection.prototype.dispose=function(){if("_baseCollection" in this){this._baseCollection.removeListener(this._listener);
this._baseCollection=null;
this._expression=null;
}else{this._database.removeListener(this._listener);
}this._database=null;
this._listener=null;
this._listeners=null;
this._items=null;
this._restrictedItems=null;
};
Exhibit.Collection.prototype.addListener=function(A){this._listeners.add(A);
};
Exhibit.Collection.prototype.removeListener=function(A){this._listeners.remove(A);
};
Exhibit.Collection.prototype.addFacet=function(A){this._facets.push(A);
if(A.hasRestrictions()){this._computeRestrictedItems();
this._updateFacets(null);
this._listeners.fire("onItemsChanged",[]);
}else{A.update(this.getRestrictedItems());
}};
Exhibit.Collection.prototype.removeFacet=function(B){for(var A=0;
A<this._facets.length;
A++){if(B==this._facets[A]){this._facets.splice(A,1);
if(B.hasRestrictions()){this._computeRestrictedItems();
this._updateFacets(null);
this._listeners.fire("onItemsChanged",[]);
}break;
}}};
Exhibit.Collection.prototype.clearAllRestrictions=function(){var A=[];
this._updating=true;
for(var B=0;
B<this._facets.length;
B++){A.push(this._facets[B].clearAllRestrictions());
}this._updating=false;
this.onFacetUpdated(null);
return A;
};
Exhibit.Collection.prototype.applyRestrictions=function(A){this._updating=true;
for(var B=0;
B<this._facets.length;
B++){this._facets[B].applyRestrictions(A[B]);
}this._updating=false;
this.onFacetUpdated(null);
};
Exhibit.Collection.prototype.getAllItems=function(){return new Exhibit.Set(this._items);
};
Exhibit.Collection.prototype.countAllItems=function(){return this._items.size();
};
Exhibit.Collection.prototype.getRestrictedItems=function(){return new Exhibit.Set(this._restrictedItems);
};
Exhibit.Collection.prototype.countRestrictedItems=function(){return this._restrictedItems.size();
};
Exhibit.Collection.prototype.onFacetUpdated=function(A){if(!this._updating){this._computeRestrictedItems();
this._updateFacets(A);
this._listeners.fire("onItemsChanged",[]);
}};
Exhibit.Collection.prototype._onRootItemsChanged=function(){this._listeners.fire("onRootItemsChanged",[]);
this._computeRestrictedItems();
this._updateFacets(null);
this._listeners.fire("onItemsChanged",[]);
};
Exhibit.Collection.prototype._updateFacets=function(C){var E=0;
for(var D=0;
D<this._facets.length;
D++){if(this._facets[D].hasRestrictions()){E++;
}}for(var D=0;
D<this._facets.length;
D++){var F=this._facets[D];
if(F.hasRestrictions()){if(E<=1){F.update(this.getAllItems());
}else{var A=this.getAllItems();
for(var B=0;
B<this._facets.length;
B++){if(D!=B){A=this._facets[B].restrict(A);
}}F.update(A);
}}else{F.update(this.getRestrictedItems());
}}};
Exhibit.Collection.prototype._computeRestrictedItems=function(){this._restrictedItems=this._items;
for(var A=0;
A<this._facets.length;
A++){var B=this._facets[A];
if(B.hasRestrictions()){this._restrictedItems=B.restrict(this._restrictedItems);
}}};


/* controls.js */
Exhibit.Controls={};
Exhibit.Controls["if"]={f:function(B,A,C,G,E){var D=B[0].evaluate(A,C,G,E);
var F=false;
D.forEachValue(function(H){if(H){F=true;
return true;
}});
if(F){return B[1].evaluate(A,C,G,E);
}else{return B[2].evaluate(A,C,G,E);
}}};
Exhibit.Controls["foreach"]={f:function(G,J,H,D,I){var C=G[0].evaluate(J,H,D,I);
var A=J["value"];
var B=H["value"];
H["value"]=C.valueType;
var F=[];
var E="text";
C.forEachValue(function(K){J["value"]=K;
var L=G[1].evaluate(J,H,D,I);
E=L.valueType;
L.forEachValue(function(M){F.push(M);
});
});
J["value"]=A;
H["value"]=B;
return new Exhibit.Expression._Collection(F,E);
}};
Exhibit.Controls["default"]={f:function(B,A,D,G,E){for(var C=0;
C<B.length;
C++){var F=B[C].evaluate(A,D,G,E);
if(F.size>0){return F;
}}return new Exhibit.Expression._Collection([],"text");
}};
Exhibit.Controls["filter"]={f:function(F,I,G,D,H){var C=F[0].evaluate(I,G,D,H);
var A=I["value"];
var B=G["value"];
var E=new Exhibit.Set();
G["value"]=C.valueType;
C.forEachValue(function(J){I["value"]=J;
var K=F[1].evaluate(I,G,D,H);
if(K.size>0&&K.contains("true")){E.add(J);
}});
I["value"]=A;
G["value"]=B;
return new Exhibit.Expression._Collection(E,C.valueType);
}};


/* database.js */
Exhibit.Database=new Object();
Exhibit.Database.create=function(){return new Exhibit.Database._Impl();
};
Exhibit.Database._Impl=function(){this._types={};
this._properties={};
this._propertyArray={};
this._listeners=new SimileAjax.ListenerQueue();
this._spo={};
this._ops={};
this._items=new Exhibit.Set();
var B=Exhibit.Database.l10n;
var D=new Exhibit.Database._Type("Item");
D._custom=Exhibit.Database.l10n.itemType;
this._types["Item"]=D;
var C=new Exhibit.Database._Property("label");
C._uri="http://www.w3.org/2000/01/rdf-schema#label";
C._valueType="text";
C._label=B.labelProperty.label;
C._pluralLabel=B.labelProperty.pluralLabel;
C._reverseLabel=B.labelProperty.reverseLabel;
C._reversePluralLabel=B.labelProperty.reversePluralLabel;
C._groupingLabel=B.labelProperty.groupingLabel;
C._reverseGroupingLabel=B.labelProperty.reverseGroupingLabel;
this._properties["label"]=C;
var E=new Exhibit.Database._Property("type");
E._uri="http://www.w3.org/1999/02/22-rdf-syntax-ns#type";
E._valueType="text";
E._label="type";
E._pluralLabel=B.typeProperty.label;
E._reverseLabel=B.typeProperty.reverseLabel;
E._reversePluralLabel=B.typeProperty.reversePluralLabel;
E._groupingLabel=B.typeProperty.groupingLabel;
E._reverseGroupingLabel=B.typeProperty.reverseGroupingLabel;
this._properties["type"]=E;
var A=new Exhibit.Database._Property("uri");
A._uri="http://simile.mit.edu/2006/11/exhibit#uri";
A._valueType="url";
A._label="URI";
A._pluralLabel="URIs";
A._reverseLabel="URI of";
A._reversePluralLabel="URIs of";
A._groupingLabel="URIs";
A._reverseGroupingLabel="things named by these URIs";
this._properties["uri"]=A;
};
Exhibit.Database._Impl.prototype.createDatabase=function(){return Exhibit.Database.create();
};
Exhibit.Database._Impl.prototype.addListener=function(A){this._listeners.add(A);
};
Exhibit.Database._Impl.prototype.removeListener=function(A){this._listeners.remove(A);
};
Exhibit.Database._Impl.prototype.loadDataLinks=function(B){var A=SimileAjax.jQuery("head > link[rel=exhibit/data]").get();
this._loadLinks(A,B);
};
Exhibit.Database._Impl.prototype._loadLinks=function(A,B){A=[].concat(A);
var C=this;
var D=function(){while(A.length>0){var G=A.shift();
var F=G.type;
if(F==null||F.length==0){F="application/json";
}var E=Exhibit.importers[F];
if(E){E.load(G,C,D);
return ;
}else{SimileAjax.Debug.log("No importer for data of type "+F);
}}if(B!=null){B();
}};
D();
};
Exhibit.Database._Impl.prototype.loadData=function(B,A){if(typeof A=="undefined"){A=location.href;
}if("types" in B){this.loadTypes(B.types,A);
}if("properties" in B){this.loadProperties(B.properties,A);
}if("items" in B){this.loadItems(B.items,A);
}};
Exhibit.Database._Impl.prototype.loadTypes=function(C,H){this._listeners.fire("onBeforeLoadingTypes",[]);
try{var B=H.substr(H.length-1);
if(B=="#"){H=H.substr(0,H.length-1)+"/";
}else{if(B!="/"&&B!=":"){H+="/";
}}for(var A in C){if(typeof A!="string"){continue;
}var E=C[A];
if(typeof E!="object"){continue;
}var D;
if(A in this._types){D=this._types[A];
}else{D=new Exhibit.Database._Type(A);
this._types[A]=D;
}for(var G in E){D._custom[G]=E[G];
}if(!("uri" in D._custom)){D._custom["uri"]=H+"type#"+encodeURIComponent(A);
}if(!("label" in D._custom)){D._custom["label"]=A;
}}this._listeners.fire("onAfterLoadingTypes",[]);
}catch(F){SimileAjax.Debug.exception(F,"Database.loadTypes failed");
}};
Exhibit.Database._Impl.prototype.loadProperties=function(F,E){this._listeners.fire("onBeforeLoadingProperties",[]);
try{var B=E.substr(E.length-1);
if(B=="#"){E=E.substr(0,E.length-1)+"/";
}else{if(B!="/"&&B!=":"){E+="/";
}}for(var G in F){if(typeof G!="string"){continue;
}var C=F[G];
if(typeof C!="object"){continue;
}var A;
if(G in this._properties){A=this._properties[G];
}else{A=new Exhibit.Database._Property(G,this);
this._properties[G]=A;
}A._uri=("uri" in C)?C.uri:(E+"property#"+encodeURIComponent(G));
A._valueType=("valueType" in C)?C.valueType:"text";
A._label=("label" in C)?C.label:G;
A._pluralLabel=("pluralLabel" in C)?C.pluralLabel:A._label;
A._reverseLabel=("reverseLabel" in C)?C.reverseLabel:("!"+A._label);
A._reversePluralLabel=("reversePluralLabel" in C)?C.reversePluralLabel:("!"+A._pluralLabel);
A._groupingLabel=("groupingLabel" in C)?C.groupingLabel:A._label;
A._reverseGroupingLabel=("reverseGroupingLabel" in C)?C.reverseGroupingLabel:A._reverseLabel;
if("origin" in C){A._origin=C.origin;
}}this._propertyArray=null;
this._listeners.fire("onAfterLoadingProperties",[]);
}catch(D){SimileAjax.Debug.exception(D,"Database.loadProperties failed");
}};
Exhibit.Database._Impl.prototype.loadItems=function(D,F){this._listeners.fire("onBeforeLoadingItems",[]);
try{var J=F.substr(F.length-1);
if(J=="#"){F=F.substr(0,F.length-1)+"/";
}else{if(J!="/"&&J!=":"){F+="/";
}}var C=this._spo;
var A=this._ops;
var B=Exhibit.Database._indexPut;
var H=function(K,L,M){B(C,K,L,M);
B(A,M,L,K);
};
for(var E=0;
E<D.length;
E++){var I=D[E];
if(typeof I=="object"){this._loadItem(I,H,F);
}}this._propertyArray=null;
this._listeners.fire("onAfterLoadingItems",[]);
}catch(G){SimileAjax.Debug.exception(G,"Database.loadItems failed");
}};
Exhibit.Database._Impl.prototype.getType=function(A){return this._types[A];
};
Exhibit.Database._Impl.prototype.getProperty=function(A){return A in this._properties?this._properties[A]:null;
};
Exhibit.Database._Impl.prototype.getAllProperties=function(){if(this._propertyArray==null){this._propertyArray=[];
for(var A in this._properties){this._propertyArray.push(A);
}}return[].concat(this._propertyArray);
};
Exhibit.Database._Impl.prototype.getAllItems=function(){var A=new Exhibit.Set();
A.addSet(this._items);
return A;
};
Exhibit.Database._Impl.prototype.getAllItemsCount=function(){return this._items.size();
};
Exhibit.Database._Impl.prototype.containsItem=function(A){return this._items.contains(A);
};
Exhibit.Database._Impl.prototype.getNamespaces=function(N,K){var A={};
for(var L in this._properties){var M=this._properties[L];
var E=M.getURI();
var I=E.indexOf("#");
if(I>0){var B=E.substr(0,I+1);
A[B]=true;
N[L]={base:B,localName:E.substr(I+1)};
continue;
}var G=E.lastIndexOf("/");
if(G>0){var B=E.substr(0,G+1);
A[B]=true;
N[L]={base:B,localName:E.substr(G+1)};
continue;
}}var C={};
var J="abcdefghijklmnopqrstuvwxyz";
var H=0;
for(var B in A){var D=J.substr(H++,1);
K[D]=B;
C[B]=D;
}for(var L in N){var F=N[L];
F.prefix=C[F.base];
}};
Exhibit.Database._Impl.prototype._loadItem=function(E,D,G){if(!("label" in E)&&!("id" in E)){SimileAjax.Debug.warn("Item entry has no label and no id: "+SimileAjax.JSON.toJSONString(E));
return ;
}var B;
if(!("label" in E)){B=E.id;
if(!this._items.contains(B)){SimileAjax.Debug.warn("Cannot add new item containing no label: "+SimileAjax.JSON.toJSONString(E));
}}else{var J=E.label;
var B=("id" in E)?E.id:J;
var C=("uri" in E)?E.uri:(G+"item#"+encodeURIComponent(B));
var I=("type" in E)?E.type:"Item";
var H=function(L){if(L.constructor.toString().indexOf("Array")==-1){return false;
}else{return true;
}};
if(H(J)){J=J[0];
}if(H(B)){B=B[0];
}if(H(C)){C=C[0];
}if(H(I)){I=I[0];
}this._items.add(B);
D(B,"uri",C);
D(B,"label",J);
D(B,"type",I);
this._ensureTypeExists(I,G);
}for(var A in E){if(typeof A!="string"){continue;
}if(A!="uri"&&A!="label"&&A!="id"&&A!="type"){this._ensurePropertyExists(A,G)._onNewData();
var K=E[A];
if(K instanceof Array){for(var F=0;
F<K.length;
F++){D(B,A,K[F]);
}}else{if(K!=undefined&&K!=null){D(B,A,K);
}}}}};
Exhibit.Database._Impl.prototype._ensureTypeExists=function(A,C){if(!(A in this._types)){var B=new Exhibit.Database._Type(A);
B._custom["uri"]=C+"type#"+encodeURIComponent(A);
B._custom["label"]=A;
this._types[A]=B;
}};
Exhibit.Database._Impl.prototype._ensurePropertyExists=function(C,B){if(!(C in this._properties)){var A=new Exhibit.Database._Property(C,this);
A._uri=B+"property#"+encodeURIComponent(C);
A._valueType="text";
A._label=C;
A._pluralLabel=A._label;
A._reverseLabel="reverse of "+A._label;
A._reversePluralLabel="reverse of "+A._pluralLabel;
A._groupingLabel=A._label;
A._reverseGroupingLabel=A._reverseLabel;
this._properties[C]=A;
return A;
}else{return this._properties[C];
}};
Exhibit.Database._indexPut=function(B,A,G,E){var D=B[A];
if(!D){D={};
B[A]=D;
}var F=D[G];
if(!F){F=new Array();
D[G]=F;
}else{for(var C=0;
C<F.length;
C++){if(E==F[C]){return ;
}}}F.push(E);
};
Exhibit.Database._indexPutList=function(B,A,F,C){var D=B[A];
if(!D){D={};
B[A]=D;
}var E=D[F];
if(!E){D[F]=C;
}else{D[F]=D[F].concat(C);
}};
Exhibit.Database._indexRemove=function(B,A,H,F){function E(I){for(p in I){return false;
}return true;
}var D=B[A];
if(!D){return false;
}var G=D[H];
if(!G){return false;
}for(var C=0;
C<G.length;
C++){if(F==G[C]){G.splice(C,1);
if(G.length==0){delete D[H];
if(E(D)){delete B[A];
}}return true;
}}};
Exhibit.Database._indexRemoveList=function(B,A,E){var C=B[A];
if(!C){return null;
}var D=C[E];
if(!D){return null;
}delete C[E];
return D;
};
Exhibit.Database._Impl.prototype._indexFillSet=function(C,H,G,I,D){var B=C[H];
if(B){var E=B[G];
if(E){if(D){for(var A=0;
A<E.length;
A++){var F=E[A];
if(D.contains(F)){I.add(F);
}}}else{for(var A=0;
A<E.length;
A++){I.add(E[A]);
}}}}};
Exhibit.Database._Impl.prototype._indexCountDistinct=function(C,A,H,B){var E=0;
var F=C[A];
if(F){var G=F[H];
if(G){if(B){for(var D=0;
D<G.length;
D++){if(B.contains(G[D])){E++;
}}}else{E=G.length;
}}}return E;
};
Exhibit.Database._Impl.prototype._get=function(C,A,E,D,B){if(!D){D=new Exhibit.Set();
}this._indexFillSet(C,A,E,D,B);
return D;
};
Exhibit.Database._Impl.prototype._getUnion=function(B,D,F,E,A){if(!E){E=new Exhibit.Set();
}var C=this;
D.visit(function(G){C._indexFillSet(B,G,F,E,A);
});
return E;
};
Exhibit.Database._Impl.prototype._countDistinctUnion=function(B,E,F,A){var C=0;
var D=this;
E.visit(function(G){C+=D._indexCountDistinct(B,G,F,A);
});
return C;
};
Exhibit.Database._Impl.prototype._countDistinct=function(C,A,D,B){return this._indexCountDistinct(C,A,D,B);
};
Exhibit.Database._Impl.prototype._getProperties=function(C,A){var E=C[A];
var B=[];
if(E){for(var D in E){B.push(D);
}}return B;
};
Exhibit.Database._Impl.prototype.getObjects=function(B,C,D,A){return this._get(this._spo,B,C,D,A);
};
Exhibit.Database._Impl.prototype.countDistinctObjects=function(B,C,A){return this._countDistinct(this._spo,B,C,A);
};
Exhibit.Database._Impl.prototype.getObjectsUnion=function(B,C,D,A){return this._getUnion(this._spo,B,C,D,A);
};
Exhibit.Database._Impl.prototype.countDistinctObjectsUnion=function(B,C,A){return this._countDistinctUnion(this._spo,B,C,A);
};
Exhibit.Database._Impl.prototype.getSubjects=function(C,B,D,A){return this._get(this._ops,C,B,D,A);
};
Exhibit.Database._Impl.prototype.countDistinctSubjects=function(C,B,A){return this._countDistinct(this._ops,C,B,A);
};
Exhibit.Database._Impl.prototype.getSubjectsUnion=function(A,C,D,B){return this._getUnion(this._ops,A,C,D,B);
};
Exhibit.Database._Impl.prototype.countDistinctSubjectsUnion=function(A,C,B){return this._countDistinctUnion(this._ops,A,C,B);
};
Exhibit.Database._Impl.prototype.getObject=function(A,C){var B=this._spo[A];
if(B){var D=B[C];
if(D){return D[0];
}}return null;
};
Exhibit.Database._Impl.prototype.getSubject=function(C,B){var A=this._ops[C];
if(A){var D=A[B];
if(D){return D[0];
}}return null;
};
Exhibit.Database._Impl.prototype.getForwardProperties=function(A){return this._getProperties(this._spo,A);
};
Exhibit.Database._Impl.prototype.getBackwardProperties=function(A){return this._getProperties(this._ops,A);
};
Exhibit.Database._Impl.prototype.getSubjectsInRange=function(G,D,B,F,H,C){var A=this.getProperty(G);
if(A!=null){var E=A.getRangeIndex();
if(E!=null){return E.getSubjectsInRange(D,B,F,H,C);
}}return(!H)?new Exhibit.Set():H;
};
Exhibit.Database._Impl.prototype.getTypeIDs=function(A){return this.getObjectsUnion(A,"type",null,null);
};
Exhibit.Database._Impl.prototype.addStatement=function(A,C,D){var B=Exhibit.Database._indexPut;
B(this._spo,A,C,D);
B(this._ops,D,C,A);
};
Exhibit.Database._Impl.prototype.removeStatement=function(B,C,E){var F=Exhibit.Database._indexRemove;
var D=F(this._spo,B,C,E);
var A=F(this._ops,E,C,B);
return D||A;
};
Exhibit.Database._Impl.prototype.removeObjects=function(C,D){var F=Exhibit.Database._indexRemove;
var E=Exhibit.Database._indexRemoveList;
var A=E(this._spo,C,D);
if(A==null){return false;
}else{for(var B=0;
B<A.length;
B++){F(this._ops,A[B],D,C);
}return true;
}};
Exhibit.Database._Impl.prototype.removeSubjects=function(E,C){var F=Exhibit.Database._indexRemove;
var D=Exhibit.Database._indexRemoveList;
var B=D(this._ops,E,C);
if(B==null){return false;
}else{for(var A=0;
A<B.length;
A++){F(this._spo,B[A],C,E);
}return true;
}};
Exhibit.Database._Impl.prototype.removeAllStatements=function(){this._listeners.fire("onBeforeRemovingAllStatements",[]);
try{this._spo={};
this._ops={};
this._items=new Exhibit.Set();
for(var B in this._properties){this._properties[B]._onNewData();
}this._propertyArray=null;
this._listeners.fire("onAfterRemovingAllStatements",[]);
}catch(A){SimileAjax.Debug.exception(A,"Database.removeAllStatements failed");
}};
Exhibit.Database._Type=function(A){this._id=A;
this._custom={};
};
Exhibit.Database._Type.prototype={getID:function(){return this._id;
},getURI:function(){return this._custom["uri"];
},getLabel:function(){return this._custom["label"];
},getOrigin:function(){return this._custom["origin"];
},getProperty:function(A){return this._custom[A];
}};
Exhibit.Database._Property=function(B,A){this._id=B;
this._database=A;
this._rangeIndex=null;
};
Exhibit.Database._Property.prototype={getID:function(){return this._id;
},getURI:function(){return this._uri;
},getValueType:function(){return this._valueType;
},getLabel:function(){return this._label;
},getPluralLabel:function(){return this._pluralLabel;
},getReverseLabel:function(){return this._reverseLabel;
},getReversePluralLabel:function(){return this._reversePluralLabel;
},getGroupingLabel:function(){return this._groupingLabel;
},getGroupingPluralLabel:function(){return this._groupingPluralLabel;
},getOrigin:function(){return this._origin;
}};
Exhibit.Database._Property.prototype._onNewData=function(){this._rangeIndex=null;
};
Exhibit.Database._Property.prototype.getRangeIndex=function(){if(this._rangeIndex==null){this._buildRangeIndex();
}return this._rangeIndex;
};
Exhibit.Database._Property.prototype._buildRangeIndex=function(){var B;
var A=this._database;
var C=this._id;
switch(this.getValueType()){case"currency":case"number":B=function(D,E){A.getObjects(D,C,null,null).visit(function(F){if(typeof F!="number"){F=parseFloat(F);
}if(!isNaN(F)){E(F);
}});
};
break;
case"date":B=function(D,E){A.getObjects(D,C,null,null).visit(function(F){if(F!=null&&!(F instanceof Date)){F=SimileAjax.DateTime.parseIso8601DateTime(F);
}if(F instanceof Date){E(F.getTime());
}});
};
break;
default:B=function(D,E){};
}this._rangeIndex=new Exhibit.Database._RangeIndex(this._database.getAllItems(),B);
};
Exhibit.Database._RangeIndex=function(A,B){pairs=[];
A.visit(function(C){B(C,function(D){pairs.push({item:C,value:D});
});
});
pairs.sort(function(D,C){var E=D.value-C.value;
return E!=0?E:D.item.localeCompare(C.item);
});
this._pairs=pairs;
};
Exhibit.Database._RangeIndex.prototype.getCount=function(){return this._pairs.count();
};
Exhibit.Database._RangeIndex.prototype.getMin=function(){return this._pairs.length>0?this._pairs[0].value:Number.POSITIVE_INFINITY;
};
Exhibit.Database._RangeIndex.prototype.getMax=function(){return this._pairs.length>0?this._pairs[this._pairs.length-1].value:Number.NEGATIVE_INFINITY;
};
Exhibit.Database._RangeIndex.prototype.getRange=function(E,C,F,I){var H=this._indexOf(C);
var A=this._pairs;
var B=A.length;
I=(I);
while(H<B){var D=A[H++];
var G=D.value;
if(G<F||(G==F&&I)){E(D.item);
}else{break;
}}};
Exhibit.Database._RangeIndex.prototype.getSubjectsInRange=function(C,A,E,F,B){if(!F){F=new Exhibit.Set();
}var D=(B!=null)?function(G){if(B.contains(G)){F.add(G);
}}:function(G){F.add(G);
};
this.getRange(D,C,A,E);
return F;
};
Exhibit.Database._RangeIndex.prototype.countRange=function(C,A,F){var G=this._indexOf(C);
var E=this._indexOf(A);
if(F){var D=this._pairs;
var B=D.length;
while(E<B){if(D[E].value==A){E++;
}else{break;
}}}return E-G;
};
Exhibit.Database._RangeIndex.prototype._indexOf=function(A){var C=this._pairs;
if(C.length==0||C[0].value>=A){return 0;
}var F=0;
var E=C.length;
while(F+1<E){var B=(F+E)>>1;
var D=C[B].value;
if(D>=A){E=B;
}else{F=B;
}}return E;
};


/* bibtex-exporter.js */
Exhibit.BibtexExporter={getLabel:function(){return"Bibtex";
},_excludeProperties:{"pub-type":true,"type":true,"uri":true,"key":true}};
Exhibit.BibtexExporter.exportOne=function(B,A){return Exhibit.BibtexExporter._wrap(Exhibit.BibtexExporter._exportOne(B,A));
};
Exhibit.BibtexExporter.exportMany=function(C,B){var A="";
C.visit(function(D){A+=Exhibit.BibtexExporter._exportOne(D,B)+"\n";
});
return Exhibit.BibtexExporter._wrap(A);
};
Exhibit.BibtexExporter._exportOne=function(C,J){var L="";
var D=J.getObject(C,"pub-type");
var I=J.getObject(C,"key");
I=(I!=null?I:C);
I=I.replace(/[\s,]/g,"-");
L+="@"+D+"{"+I+",\n";
var K=J.getAllProperties();
for(var B=0;
B<K.length;
B++){var E=K[B];
var H=J.getProperty(E);
var G=J.getObjects(C,E);
var A=H.getValueType();
if(G.size()>0&&!(E in Exhibit.BibtexExporter._excludeProperties)){L+="\t"+(E=="label"?"title":E)+' = "';
var F;
if(A=="item"){F=[];
G.visit(function(M){F.push(J.getObject(M,"label"));
});
}else{if(A=="url"){F=[];
G.visit(function(M){F.push(Exhibit.Persistence.resolveURL(M));
});
}else{F=G.toArray();
}}L+=F.join(" and ")+'",\n';
}}L+='\torigin = "'+Exhibit.Persistence.getItemLink(C)+'"\n';
L+="}\n";
return L;
};
Exhibit.BibtexExporter._wrap=function(A){return A;
};


/* exhibit-json-exporter.js */
Exhibit.ExhibitJsonExporter={getLabel:function(){return Exhibit.l10n.exhibitJsonExporterLabel;
}};
Exhibit.ExhibitJsonExporter.exportOne=function(B,A){return Exhibit.ExhibitJsonExporter._wrap(Exhibit.ExhibitJsonExporter._exportOne(B,A)+"\n");
};
Exhibit.ExhibitJsonExporter.exportMany=function(E,D){var B="";
var A=E.size();
var C=0;
E.visit(function(F){B+=Exhibit.ExhibitJsonExporter._exportOne(F,D)+((C++<A-1)?",\n":"\n");
});
return Exhibit.ExhibitJsonExporter._wrap(B);
};
Exhibit.ExhibitJsonExporter._exportOne=function(G,K){function A(N){if(/[\\\x00-\x1F\x22]/.test(N)){return'"'+N.replace(/([\\\x00-\x1f\x22])/g,function(P,O){var Q={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"}[O];
if(Q){return Q;
}Q=O.charCodeAt();
return"\\x"+Math.floor(Q/16).toString(16)+(Q%16).toString(16);
})+'"';
}return'"'+N+'"';
}var M="";
var B=K.getObject(G,"uri");
M+='  {"id":'+A(G)+",\n";
var L=K.getAllProperties();
for(var E=0;
E<L.length;
E++){var H=L[E];
var J=K.getProperty(H);
var I=K.getObjects(G,H);
var D=J.getValueType();
if(I.size()>0){var F;
if(D=="url"){F=[];
I.visit(function(N){F.push(Exhibit.Persistence.resolveURL(N));
});
}else{F=I.toArray();
}M+="   "+A(H)+":";
if(F.length==1){M+=A(F[0]);
}else{M+="[";
for(var C=0;
C<F.length;
C++){M+=(C>0?",":"")+A(F[C]);
}M+="]";
}M+=",\n";
}}M+='   "origin":'+A(Exhibit.Persistence.getItemLink(G))+"\n";
M+="  }";
return M;
};
Exhibit.ExhibitJsonExporter._wrap=function(A){return'{\n "items":[\n'+A+" ]\n}";
};


/* rdf-xml-exporter.js */
Exhibit.RdfXmlExporter={getLabel:function(){return Exhibit.l10n.rdfXmlExporterLabel;
}};
Exhibit.RdfXmlExporter.exportOne=function(D,C){var A={};
var B={};
C.getNamespaces(A,B);
return Exhibit.RdfXmlExporter._wrapRdf(Exhibit.RdfXmlExporter._exportOne(D,C,A,B),B);
};
Exhibit.RdfXmlExporter.exportMany=function(E,D){var C="";
var A={};
var B={};
D.getNamespaces(A,B);
E.visit(function(F){C+=Exhibit.RdfXmlExporter._exportOne(F,D,A,B)+"\n";
});
return Exhibit.RdfXmlExporter._wrapRdf(C,B);
};
Exhibit.RdfXmlExporter._exportOne=function(G,L,F,I){var N="";
var B=L.getObject(G,"uri");
N+="<rdf:Description rdf:about='"+B+"'>\n";
var M=L.getAllProperties();
for(var E=0;
E<M.length;
E++){var H=M[E];
var K=L.getProperty(H);
var J=L.getObjects(G,H);
var D=K.getValueType();
var A;
if(H in F){var C=F[H];
A=C.prefix+":"+C.localName;
}else{A=K.getURI();
}if(D=="item"){J.visit(function(O){N+="\t<"+A+" rdf:resource='"+O+"' />\n";
});
}else{if(H!="uri"){if(D=="url"){J.visit(function(O){N+="\t<"+A+">"+Exhibit.Persistence.resolveURL(O)+"</"+A+">\n";
});
}else{J.visit(function(O){N+="\t<"+A+">"+O+"</"+A+">\n";
});
}}}}N+="\t<exhibit:origin>"+Exhibit.Persistence.getItemLink(G)+"</exhibit:origin>\n";
N+="</rdf:Description>";
return N;
};
Exhibit.RdfXmlExporter._wrapRdf=function(C,B){var A="<?xml version='1.0'?>\n<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#'\n\txmlns:exhibit='http://simile.mit.edu/2006/11/exhibit#'";
for(prefix in B){A+="\n\txmlns:"+prefix+"='"+B[prefix]+"'";
}A+=">\n"+C+"\n</rdf:RDF>";
return A;
};


/* semantic-wikitext-exporter.js */
Exhibit.SemanticWikitextExporter={getLabel:function(){return Exhibit.l10n.smwExporterLabel;
}};
Exhibit.SemanticWikitextExporter.exportOne=function(B,A){return Exhibit.SemanticWikitextExporter._wrap(Exhibit.SemanticWikitextExporter._exportOne(B,A));
};
Exhibit.SemanticWikitextExporter.exportMany=function(C,B){var A="";
C.visit(function(D){A+=Exhibit.SemanticWikitextExporter._exportOne(D,B)+"\n";
});
return Exhibit.SemanticWikitextExporter._wrap(A);
};
Exhibit.SemanticWikitextExporter._exportOne=function(D,H){var J="";
var A=H.getObject(D,"uri");
J+=A+"\n";
var I=H.getAllProperties();
for(var C=0;
C<I.length;
C++){var E=I[C];
var G=H.getProperty(E);
var F=H.getObjects(D,E);
var B=G.getValueType();
if(B=="item"){F.visit(function(K){J+="[["+E+"::"+K+"]]\n";
});
}else{if(B=="url"){F.visit(function(K){J+="[["+E+":="+Exhibit.Persistence.resolveURL(K)+"]]\n";
});
}else{F.visit(function(K){J+="[["+E+":="+K+"]]\n";
});
}}}J+="[[origin:="+Exhibit.Persistence.getItemLink(D)+"]]\n";
J+="\n";
return J;
};
Exhibit.SemanticWikitextExporter._wrap=function(A){return A;
};


/* tsv-exporter.js */
Exhibit.TSVExporter={getLabel:function(){return Exhibit.l10n.tsvExporterLabel;
}};
Exhibit.TSVExporter.exportOne=function(B,A){return Exhibit.TSVExporter._wrap(Exhibit.TSVExporter._exportOne(B,A),A);
};
Exhibit.TSVExporter.exportMany=function(C,B){var A="";
C.visit(function(D){A+=Exhibit.TSVExporter._exportOne(D,B)+"\n";
});
return Exhibit.TSVExporter._wrap(A,B);
};
Exhibit.TSVExporter._exportOne=function(C,G){var I="";
var H=G.getAllProperties();
for(var B=0;
B<H.length;
B++){var D=H[B];
var E=G.getProperty(D);
var F=G.getObjects(C,D);
var A=E.getValueType();
I+=F.toArray().join("; ")+"\t";
}return I;
};
Exhibit.TSVExporter._wrap=function(D,E){var G="";
var B=E.getAllProperties();
for(var C=0;
C<B.length;
C++){var H=B[C];
var A=E.getProperty(H);
var F=A.getValueType();
G+=H+":"+F+"\t";
}return G+"\n"+D;
};


/* expression-parser.js */
Exhibit.ExpressionParser=new Object();
Exhibit.ExpressionParser.parse=function(C,D,A){D=D||0;
A=A||{};
var B=new Exhibit.ExpressionScanner(C,D);
try{return Exhibit.ExpressionParser._internalParse(B,false);
}finally{A.index=B.token()!=null?B.token().start:B.index();
}};
Exhibit.ExpressionParser.parseSeveral=function(C,D,A){D=D||0;
A=A||{};
var B=new Exhibit.ExpressionScanner(C,D);
try{return Exhibit.ExpressionParser._internalParse(B,true);
}finally{A.index=B.token()!=null?B.token().start:B.index();
}};
Exhibit.ExpressionParser._internalParse=function(E,O){var J=Exhibit.ExpressionScanner;
var D=E.token();
var F=function(){E.next();
D=E.token();
};
var K=function(){return D!=null?D.start:E.index();
};
var M=function(){var Q=new Exhibit.Expression.Path();
while(D!=null&&D.type==J.PATH_OPERATOR){var P=D.value;
F();
if(D!=null&&D.type==J.IDENTIFIER){Q.appendSegment(D.value,P);
F();
}else{throw new Error("Missing property ID at position "+K());
}}return Q;
};
var N=function(){if(D==null){throw new Error("Missing factor at end of expression");
}var R=null;
switch(D.type){case J.NUMBER:R=new Exhibit.Expression._Constant(D.value,"number");
F();
break;
case J.STRING:R=new Exhibit.Expression._Constant(D.value,"text");
F();
break;
case J.PATH_OPERATOR:R=M();
break;
case J.IDENTIFIER:var Q=D.value;
F();
if(Q in Exhibit.Controls){if(D!=null&&D.type==J.DELIMITER&&D.value=="("){F();
var P=(D!=null&&D.type==J.DELIMITER&&D.value==")")?[]:H();
R=new Exhibit.Expression._ControlCall(Q,P);
if(D!=null&&D.type==J.DELIMITER&&D.value==")"){F();
}else{throw new Error("Missing ) to end "+Q+" at position "+K());
}}else{throw new Error("Missing ( to start "+Q+" at position "+K());
}}else{if(D!=null&&D.type==J.DELIMITER&&D.value=="("){F();
var P=(D!=null&&D.type==J.DELIMITER&&D.value==")")?[]:H();
R=new Exhibit.Expression._FunctionCall(Q,P);
if(D!=null&&D.type==J.DELIMITER&&D.value==")"){F();
}else{throw new Error("Missing ) after function call "+Q+" at position "+K());
}}else{R=M();
R.setRootName(Q);
}}break;
case J.DELIMITER:if(D.value=="("){F();
R=B();
if(D!=null&&D.type==J.DELIMITER&&D.value==")"){F();
break;
}else{throw new Error("Missing ) at position "+K());
}}default:throw new Error("Unexpected text "+D.value+" at position "+K());
}return R;
};
var I=function(){var P=N();
while(D!=null&&D.type==J.OPERATOR&&(D.value=="*"||D.value=="/")){var Q=D.value;
F();
P=new Exhibit.Expression._Operator(Q,[P,N()]);
}return P;
};
var C=function(){var Q=I();
while(D!=null&&D.type==J.OPERATOR&&(D.value=="+"||D.value=="-")){var P=D.value;
F();
Q=new Exhibit.Expression._Operator(P,[Q,I()]);
}return Q;
};
var B=function(){var Q=C();
while(D!=null&&D.type==J.OPERATOR&&(D.value=="="||D.value=="<>"||D.value=="<"||D.value=="<="||D.value==">"||D.value==">=")){var P=D.value;
F();
Q=new Exhibit.Expression._Operator(P,[Q,C()]);
}return Q;
};
var H=function(){var P=[B()];
while(D!=null&&D.type==J.DELIMITER&&D.value==","){F();
P.push(B());
}return P;
};
if(O){var L=H();
var G=[];
for(var A=0;
A<L.length;
A++){G.push(new Exhibit.Expression._Impl(L[A]));
}return G;
}else{return new Exhibit.Expression._Impl(B());
}};
Exhibit.ExpressionScanner=function(B,A){this._text=B+" ";
this._maxIndex=B.length;
this._index=A;
this.next();
};
Exhibit.ExpressionScanner.DELIMITER=0;
Exhibit.ExpressionScanner.NUMBER=1;
Exhibit.ExpressionScanner.STRING=2;
Exhibit.ExpressionScanner.IDENTIFIER=3;
Exhibit.ExpressionScanner.OPERATOR=4;
Exhibit.ExpressionScanner.PATH_OPERATOR=5;
Exhibit.ExpressionScanner.prototype.token=function(){return this._token;
};
Exhibit.ExpressionScanner.prototype.index=function(){return this._index;
};
Exhibit.ExpressionScanner.prototype.next=function(){this._token=null;
while(this._index<this._maxIndex&&" \t\r\n".indexOf(this._text.charAt(this._index))>=0){this._index++;
}if(this._index<this._maxIndex){var C=this._text.charAt(this._index);
var B=this._text.charAt(this._index+1);
if(".!".indexOf(C)>=0){if(B=="@"){this._token={type:Exhibit.ExpressionScanner.PATH_OPERATOR,value:C+B,start:this._index,end:this._index+2};
this._index+=2;
}else{this._token={type:Exhibit.ExpressionScanner.PATH_OPERATOR,value:C,start:this._index,end:this._index+1};
this._index++;
}}else{if("<>".indexOf(C)>=0){if((B=="=")||("<>".indexOf(B)>=0&&C!=B)){this._token={type:Exhibit.ExpressionScanner.OPERATOR,value:C+B,start:this._index,end:this._index+2};
this._index+=2;
}else{this._token={type:Exhibit.ExpressionScanner.OPERATOR,value:C,start:this._index,end:this._index+1};
this._index++;
}}else{if("+-*/=".indexOf(C)>=0){this._token={type:Exhibit.ExpressionScanner.OPERATOR,value:C,start:this._index,end:this._index+1};
this._index++;
}else{if("(),".indexOf(C)>=0){this._token={type:Exhibit.ExpressionScanner.DELIMITER,value:C,start:this._index,end:this._index+1};
this._index++;
}else{if("\"'".indexOf(C)>=0){var A=this._index+1;
while(A<this._maxIndex){if(this._text.charAt(A)==C&&this._text.charAt(A-1)!="\\"){break;
}A++;
}if(A<this._maxIndex){this._token={type:Exhibit.ExpressionScanner.STRING,value:this._text.substring(this._index+1,A).replace(/\\'/g,"'").replace(/\\"/g,'"'),start:this._index,end:A+1};
this._index=A+1;
}else{throw new Error("Unterminated string starting at "+this._index);
}}else{if(this._isDigit(C)){var A=this._index;
while(A<this._maxIndex&&this._isDigit(this._text.charAt(A))){A++;
}if(A<this._maxIndex&&this._text.charAt(A)=="."){A++;
while(A<this._maxIndex&&this._isDigit(this._text.charAt(A))){A++;
}}this._token={type:Exhibit.ExpressionScanner.NUMBER,value:parseFloat(this._text.substring(this._index,A)),start:this._index,end:A};
this._index=A;
}else{var A=this._index;
while(A<this._maxIndex){var D=this._text.charAt(A);
if("(),.!@ \t".indexOf(D)<0){A++;
}else{break;
}}this._token={type:Exhibit.ExpressionScanner.IDENTIFIER,value:this._text.substring(this._index,A),start:this._index,end:A};
this._index=A;
}}}}}}}};
Exhibit.ExpressionScanner.prototype._isDigit=function(A){return"0123456789".indexOf(A)>=0;
};


/* expression.js */
Exhibit.Expression=new Object();
Exhibit.Expression._Impl=function(A){this._rootNode=A;
};
Exhibit.Expression._Impl.prototype.evaluate=function(A,B,E,C){var D=this._rootNode.evaluate(A,B,E,C);
return{values:D.getSet(),valueType:D.valueType,size:D.size};
};
Exhibit.Expression._Impl.prototype.evaluateOnItem=function(B,A){return this.evaluate({"value":B},{"value":"item"},"value",A);
};
Exhibit.Expression._Impl.prototype.evaluateSingle=function(A,B,F,D){var E=this._rootNode.evaluate(A,B,F,D);
var C={value:null,valueType:E.valueType};
E.forEachValue(function(G){C.value=G;
return true;
});
return C;
};
Exhibit.Expression._Impl.prototype.evaluateSingleOnItem=function(B,A){return this.evaluateSingle({"value":B},{"value":"item"},"value",A);
};
Exhibit.Expression._Impl.prototype.testExists=function(A,B,D,C){return this.isPath()?this._rootNode.testExists(A,B,D,C):this.evaluate(A,B,D,C).values.size()>0;
};
Exhibit.Expression._Impl.prototype.isPath=function(){return this._rootNode instanceof Exhibit.Expression.Path;
};
Exhibit.Expression._Impl.prototype.getPath=function(){return this.isPath()?this._rootNode:null;
};
Exhibit.Expression._Collection=function(A,B){this._values=A;
this.valueType=B;
if(A instanceof Array){this.forEachValue=Exhibit.Expression._Collection._forEachValueInArray;
this.getSet=Exhibit.Expression._Collection._getSetFromArray;
this.contains=Exhibit.Expression._Collection._containsInArray;
this.size=A.length;
}else{this.forEachValue=Exhibit.Expression._Collection._forEachValueInSet;
this.getSet=Exhibit.Expression._Collection._getSetFromSet;
this.contains=Exhibit.Expression._Collection._containsInSet;
this.size=A.size();
}};
Exhibit.Expression._Collection._forEachValueInSet=function(A){this._values.visit(A);
};
Exhibit.Expression._Collection._forEachValueInArray=function(C){var A=this._values;
for(var B=0;
B<A.length;
B++){if(C(A[B])){break;
}}};
Exhibit.Expression._Collection._getSetFromSet=function(){return this._values;
};
Exhibit.Expression._Collection._getSetFromArray=function(){return new Exhibit.Set(this._values);
};
Exhibit.Expression._Collection._containsInSet=function(A){this._values.contains(A);
};
Exhibit.Expression._Collection._containsInArray=function(B){var A=this._values;
for(var C=0;
C<A.length;
C++){if(A[C]==B){return true;
}}return false;
};
Exhibit.Expression.Path=function(){this._rootName=null;
this._segments=[];
};
Exhibit.Expression.Path.create=function(A,B){var C=new Exhibit.Expression.Path();
C._segments.push({property:A,forward:B,isArray:false});
return C;
};
Exhibit.Expression.Path.prototype.setRootName=function(A){this._rootName=A;
};
Exhibit.Expression.Path.prototype.appendSegment=function(A,B){this._segments.push({property:A,forward:B.charAt(0)==".",isArray:B.length>1});
};
Exhibit.Expression.Path.prototype.getSegment=function(A){if(A<this._segments.length){var B=this._segments[A];
return{property:B.property,forward:B.forward,isArray:B.isArray};
}else{return null;
}};
Exhibit.Expression.Path.prototype.getLastSegment=function(){return this.getSegment(this._segments.length-1);
};
Exhibit.Expression.Path.prototype.getSegmentCount=function(){return this._segments.length;
};
Exhibit.Expression.Path.prototype.evaluate=function(B,C,H,D){var F=this._rootName!=null?this._rootName:H;
var E=F in C?C[F]:"text";
var G=null;
if(F in B){var A=B[F];
if(A instanceof Exhibit.Set||A instanceof Array){G=new Exhibit.Expression._Collection(A,E);
}else{G=new Exhibit.Expression._Collection([A],E);
}return this._walkForward(G,D);
}else{throw new Error("No such variable called "+F);
}};
Exhibit.Expression.Path.prototype.evaluateBackward=function(C,D,A,B){var E=new Exhibit.Expression._Collection([C],D);
return this._walkBackward(E,A,B);
};
Exhibit.Expression.Path.prototype.walkForward=function(A,C,B){return this._walkForward(new Exhibit.Expression._Collection(A,C),B);
};
Exhibit.Expression.Path.prototype.walkBackward=function(B,D,A,C){return this._walkBackward(new Exhibit.Expression._Collection(B,D),A,C);
};
Exhibit.Expression.Path.prototype._walkForward=function(H,F){for(var C=0;
C<this._segments.length;
C++){var E=this._segments[C];
if(E.isArray){var B=[];
var G;
if(E.forward){H.forEachValue(function(I){F.getObjects(I,E.property).visit(function(J){B.push(J);
});
});
var A=F.getProperty(E.property);
G=A!=null?A.getValueType():"text";
}else{H.forEachValue(function(I){F.getSubjects(I,E.property).visit(function(J){B.push(J);
});
});
G="item";
}H=new Exhibit.Expression._Collection(B,G);
}else{if(E.forward){var D=F.getObjectsUnion(H.getSet(),E.property);
var A=F.getProperty(E.property);
var G=A!=null?A.getValueType():"text";
H=new Exhibit.Expression._Collection(D,G);
}else{var D=F.getSubjectsUnion(H.getSet(),E.property);
H=new Exhibit.Expression._Collection(D,"item");
}}}return H;
};
Exhibit.Expression.Path.prototype._walkBackward=function(A,E,I){for(var C=this._segments.length-1;
C>=0;
C--){var D=this._segments[C];
if(D.isArray){var F=[];
var B;
if(D.forward){A.forEachValue(function(J){I.getSubjects(J,D.property).visit(function(K){if(C>0||E==null||E.contains(K)){F.push(K);
}});
});
var H=I.getProperty(D.property);
B=H!=null?H.getValueType():"text";
}else{A.forEachValue(function(J){I.getObjects(J,D.property).visit(function(K){if(C>0||E==null||E.contains(K)){F.push(K);
}});
});
B="item";
}A=new Exhibit.Expression._Collection(F,B);
}else{if(D.forward){var G=I.getSubjectsUnion(A.getSet(),D.property,null,C==0?E:null);
A=new Exhibit.Expression._Collection(G,"item");
}else{var G=I.getObjectsUnion(A.getSet(),D.property,null,C==0?E:null);
var H=I.getProperty(D.property);
var B=H!=null?H.getValueType():"text";
A=new Exhibit.Expression._Collection(G,B);
}}}return A;
};
Exhibit.Expression.Path.prototype.rangeBackward=function(G,F,J,D,I){var E=new Exhibit.Set();
var A="item";
if(this._segments.length>0){var C=this._segments[this._segments.length-1];
if(C.forward){I.getSubjectsInRange(C.property,G,F,J,E,this._segments.length==1?D:null);
}else{throw new Error("Last path of segment must be forward");
}for(var B=this._segments.length-2;
B>=0;
B--){C=this._segments[B];
if(C.forward){E=I.getSubjectsUnion(E,C.property,null,B==0?D:null);
A="item";
}else{E=I.getObjectsUnion(E,C.property,null,B==0?D:null);
var H=I.getProperty(C.property);
A=H!=null?H.getValueType():"text";
}}}return{valueType:A,values:E,count:E.size()};
};
Exhibit.Expression.Path.prototype.testExists=function(A,B,D,C){return this.evaluate(A,B,D,C).size>0;
};
Exhibit.Expression._Constant=function(A,B){this._value=A;
this._valueType=B;
};
Exhibit.Expression._Constant.prototype.evaluate=function(A,B,D,C){return new Exhibit.Expression._Collection([this._value],this._valueType);
};
Exhibit.Expression._Operator=function(B,A){this._operator=B;
this._args=A;
};
Exhibit.Expression._Operator.prototype.evaluate=function(I,F,A,H){var G=[];
var E=[];
for(var B=0;
B<this._args.length;
B++){E.push(this._args[B].evaluate(I,F,A,H));
}var D=Exhibit.Expression._operators[this._operator];
var C=D.f;
if(D.argumentType=="number"){E[0].forEachValue(function(J){if(!(typeof J=="number")){J=parseFloat(J);
}E[1].forEachValue(function(K){if(!(typeof K=="number")){K=parseFloat(K);
}G.push(C(J,K));
});
});
}else{E[0].forEachValue(function(J){E[1].forEachValue(function(K){G.push(C(J,K));
});
});
}return new Exhibit.Expression._Collection(G,D.valueType);
};
Exhibit.Expression._operators={"+":{argumentType:"number",valueType:"number",f:function(B,A){return B+A;
}},"-":{argumentType:"number",valueType:"number",f:function(B,A){return B-A;
}},"*":{argumentType:"number",valueType:"number",f:function(B,A){return B*A;
}},"/":{argumentType:"number",valueType:"number",f:function(B,A){return B/A;
}},"=":{valueType:"boolean",f:function(B,A){return B==A;
}},"<>":{valueType:"boolean",f:function(B,A){return B!=A;
}},"><":{valueType:"boolean",f:function(B,A){return B!=A;
}},"<":{argumentType:"number",valueType:"boolean",f:function(B,A){return B<A;
}},">":{argumentType:"number",valueType:"boolean",f:function(B,A){return B>A;
}},"<=":{argumentType:"number",valueType:"boolean",f:function(B,A){return B<=A;
}},">=":{argumentType:"number",valueType:"boolean",f:function(B,A){return B>=A;
}}};
Exhibit.Expression._FunctionCall=function(B,A){this._name=B;
this._args=A;
};
Exhibit.Expression._FunctionCall.prototype.evaluate=function(A,D,F,E){var B=[];
for(var C=0;
C<this._args.length;
C++){B.push(this._args[C].evaluate(A,D,F,E));
}if(this._name in Exhibit.Functions){return Exhibit.Functions[this._name].f(B);
}else{throw new Error("No such function named "+this._name);
}};
Exhibit.Expression._ControlCall=function(B,A){this._name=B;
this._args=A;
};
Exhibit.Expression._ControlCall.prototype.evaluate=function(A,B,D,C){return Exhibit.Controls[this._name].f(this._args,A,B,D,C);
};


/* functions.js */
Exhibit.Functions={};
Exhibit.FunctionUtilities={};
Exhibit.FunctionUtilities.registerSimpleMappingFunction=function(A,B,C){Exhibit.Functions[A]={f:function(D){var F=new Exhibit.Set();
for(var E=0;
E<D.length;
E++){D[E].forEachValue(function(G){var H=B(G);
if(H!=undefined){F.add(H);
}});
}return new Exhibit.Expression._Collection(F,C);
}};
};
Exhibit.Functions["union"]={f:function(B){var E=new Exhibit.Set();
var D=null;
if(B.length>0){var D=B[0].valueType;
for(var C=0;
C<B.length;
C++){var A=B[C];
if(A.size>0){if(D==null){D=A.valueType;
}E.addSet(A.getSet());
}}}return new Exhibit.Expression._Collection(E,D!=null?D:"text");
}};
Exhibit.Functions["contains"]={f:function(A){var B=A[0].size>0;
var C=A[0].getSet();
A[1].forEachValue(function(D){if(!C.contains(D)){B=false;
return true;
}});
return new Exhibit.Expression._Collection([B],"boolean");
}};
Exhibit.Functions["exists"]={f:function(A){return new Exhibit.Expression._Collection([A[0].size>0],"boolean");
}};
Exhibit.Functions["count"]={f:function(A){return new Exhibit.Expression._Collection([A[0].size],"number");
}};
Exhibit.Functions["not"]={f:function(A){return new Exhibit.Expression._Collection([!A[0].contains(true)],"boolean");
}};
Exhibit.Functions["and"]={f:function(A){var C=true;
for(var B=0;
C&&B<A.length;
B++){C=C&&A[B].contains(true);
}return new Exhibit.Expression._Collection([C],"boolean");
}};
Exhibit.Functions["or"]={f:function(A){var C=false;
for(var B=0;
C&&B<A.length;
B++){C=C||A[B].contains(true);
}return new Exhibit.Expression._Collection([C],"boolean");
}};
Exhibit.Functions["add"]={f:function(A){var C=0;
for(var B=0;
B<A.length;
B++){A[B].forEachValue(function(D){if(D!=null){if(typeof D=="number"){C+=D;
}else{var E=parseFloat(D);
if(!isNaN(E)){C+=E;
}}}});
}return new Exhibit.Expression._Collection([C],"number");
}};
Exhibit.Functions["concat"]={f:function(A){var C=[];
for(var B=0;
B<A.length;
B++){A[B].forEachValue(function(D){if(D!=null){C.push(D);
}});
}return new Exhibit.Expression._Collection([C.join("")],"text");
}};
Exhibit.Functions["multiply"]={f:function(B){var A=1;
for(var C=0;
C<B.length;
C++){B[C].forEachValue(function(D){if(D!=null){if(typeof D=="number"){A*=D;
}else{var E=parseFloat(D);
if(!isNaN(E)){A*=E;
}}}});
}return new Exhibit.Expression._Collection([A],"number");
}};
Exhibit.Functions["date-range"]={_parseDate:function(A){if(A==null){return Number.NEGATIVE_INFINITY;
}else{if(A instanceof Date){return A.getTime();
}else{try{return SimileAjax.DateTime.parseIso8601DateTime(A).getTime();
}catch(B){return Number.NEGATIVE_INFINITY;
}}}},_factors:{second:1000,minute:60*1000,hour:60*60*1000,day:24*60*60*1000,week:7*24*60*60*1000,month:30*24*60*60*1000,quarter:3*30*24*60*60*1000,year:365*24*60*60*1000,decade:10*365*24*60*60*1000,century:100*365*24*60*60*1000},_computeRange:function(D,C,B){var A=C-D;
if(isFinite(A)){if(B in this._factors){A=Math.round(A/this._factors[B]);
}return A;
}return null;
},f:function(D){var C=this;
var F=Number.POSITIVE_INFINITY;
D[0].forEachValue(function(G){F=Math.min(F,C._parseDate(G));
});
var E=Number.NEGATIVE_INFINITY;
D[1].forEachValue(function(G){E=Math.max(E,C._parseDate(G));
});
var B="day";
D[2].forEachValue(function(G){B=G;
});
var A=this._computeRange(F,E,B);
return new Exhibit.Expression._Collection(A!=null?[A]:[],"number");
}};
Exhibit.Functions["distance"]={_units:{km:1000,mile:1609.344},_computeDistance:function(E,D,B,C){var A=E.distanceFrom(D);
if(!C){C=1;
}if(isFinite(A)){if(this._units.hasOwnProperty(B)){A=A/this._units[B];
}return Exhibit.Util.round(A,C);
}return null;
},f:function(G){var J=this;
var D={};
var A=["origo","lat","lng","unit","round"];
for(var C=0,B;
B=A[C];
C++){G[C].forEachValue(function(K){D[B]=K;
});
}var F=D.origo.split(",");
var I=new GLatLng(F[0],F[1]);
var H=new GLatLng(D.lat,D.lng);
var E=this._computeDistance(I,H,D.unit,D.round);
return new Exhibit.Expression._Collection(E!=null?[E]:[],"number");
}};
Exhibit.Functions["min"]={f:function(C){var F=function(I){return I;
};
var E=Number.POSITIVE_INFINITY;
var H=null;
for(var D=0;
D<C.length;
D++){var B=C[D];
var A=B.valueType?B.valueType:"text";
var G=Exhibit.SettingsUtilities._typeToParser(A);
B.forEachValue(function(I){parsedV=G(I,F);
if(parsedV<E||E==Number.POSITIVE_INFINITY){E=parsedV;
H=(H==null)?A:(H==A?H:"text");
}});
}return new Exhibit.Expression._Collection([E],H!=null?H:"text");
}};
Exhibit.Functions["max"]={f:function(D){var F=function(I){return I;
};
var C=Number.NEGATIVE_INFINITY;
var H=null;
for(var E=0;
E<D.length;
E++){var B=D[E];
var A=B.valueType?B.valueType:"text";
var G=Exhibit.SettingsUtilities._typeToParser(A);
B.forEachValue(function(I){parsedV=G(I,F);
if(parsedV>C||C==Number.NEGATIVE_INFINITY){C=parsedV;
H=(H==null)?A:(H==A?H:"text");
}});
}return new Exhibit.Expression._Collection([C],H!=null?H:"text");
}};
Exhibit.Functions["remove"]={f:function(B){var E=B[0].getSet();
var D=B[0].valueType;
for(var C=1;
C<B.length;
C++){var A=B[C];
if(A.size>0){E.removeSet(A.getSet());
}}return new Exhibit.Expression._Collection(E,D);
}};
Exhibit.Functions["now"]={f:function(A){return new Exhibit.Expression._Collection([new Date()],"date");
}};


/* babel-based-importer.js */
Exhibit.BabelBasedImporter={mimetypeToReader:{"application/rdf+xml":"rdf-xml","application/n3":"n3","application/msexcel":"xls","application/x-msexcel":"xls","application/x-ms-excel":"xls","application/vnd.ms-excel":"xls","application/x-excel":"xls","application/xls":"xls","application/x-xls":"xls","application/x-bibtex":"bibtex"},babelTranslatorURL:"http://simile.mit.edu/babel/translator",_initialize:function(){var C=[];
var F=document.documentElement.getElementsByTagName("head");
for(var D=0;
D<F.length;
D++){var B=F[D].getElementsByTagName("link");
for(var A=0;
A<B.length;
A++){var E=B[A];
if(E.rel.match(/\bexhibit\/babel-translator\b/)){Exhibit.BabelBasedImporter.babelTranslatorURL=E.href;
}}}Exhibit.BabelBasedImporter._initialize=function(){};
}};
Exhibit.importers["application/rdf+xml"]=Exhibit.BabelBasedImporter;
Exhibit.importers["application/n3"]=Exhibit.BabelBasedImporter;
Exhibit.importers["application/msexcel"]=Exhibit.BabelBasedImporter;
Exhibit.importers["application/x-msexcel"]=Exhibit.BabelBasedImporter;
Exhibit.importers["application/vnd.ms-excel"]=Exhibit.BabelBasedImporter;
Exhibit.importers["application/x-excel"]=Exhibit.BabelBasedImporter;
Exhibit.importers["application/xls"]=Exhibit.BabelBasedImporter;
Exhibit.importers["application/x-xls"]=Exhibit.BabelBasedImporter;
Exhibit.importers["application/x-bibtex"]=Exhibit.BabelBasedImporter;
Exhibit.BabelBasedImporter.load=function(F,H,B){Exhibit.BabelBasedImporter._initialize();
var C=(typeof F=="string")?Exhibit.Persistence.resolveURL(F):Exhibit.Persistence.resolveURL(F.href);
var G="rdf-xml";
var A="exhibit-jsonp";
if(typeof F!="string"){var E=F.type;
if(E in Exhibit.BabelBasedImporter.mimetypeToReader){G=Exhibit.BabelBasedImporter.mimetypeToReader[E];
}}if(G=="bibtex"){A="bibtex-exhibit-jsonp";
}var D=Exhibit.BabelBasedImporter.babelTranslatorURL+"?"+["reader="+G,"writer="+A,"url="+encodeURIComponent(C)].join("&");
return Exhibit.JSONPImporter.load(D,H,B);
};


/* exhibit-json-importer.js */
Exhibit.ExhibitJSONImporter={};
Exhibit.importers["application/json"]=Exhibit.ExhibitJSONImporter;
Exhibit.ExhibitJSONImporter.load=function(link,database,cont){var url=typeof link=="string"?link:link.href;
url=Exhibit.Persistence.resolveURL(url);
var fError=function(statusText,status,xmlhttp){Exhibit.UI.hideBusyIndicator();
Exhibit.UI.showHelp(Exhibit.l10n.failedToLoadDataFileMessage(url));
if(cont){cont();
}};
var fDone=function(xmlhttp){Exhibit.UI.hideBusyIndicator();
try{var o=null;
try{o=eval("("+xmlhttp.responseText+")");
}catch(e){Exhibit.UI.showJsonFileValidation(Exhibit.l10n.badJsonMessage(url,e),url);
}if(o!=null){database.loadData(o,Exhibit.Persistence.getBaseURL(url));
}}catch(e){SimileAjax.Debug.exception(e,"Error loading Exhibit JSON data from "+url);
}finally{if(cont){cont();
}}};
Exhibit.UI.showBusyIndicator();
SimileAjax.XmlHttp.get(url,fError,fDone);
};


/* html-table-importer.js */
Exhibit.HtmlTableImporter={};
Exhibit.importers["text/html"]=Exhibit.HtmlTableImporter;
Exhibit.HtmlTableImporter.load=function(G,I,K){var A=typeof G=="string"?G:G.href;
if(A.substr(0,1)=="#"){try{var B=/#(.*)/.exec(f)[1];
var J=document.getElementById(B);
J.style.display="none";
Exhibit.HtmlTableImporter.loadTable(J,I);
}catch(E){SimileAjax.Debug.exception(E);
}finally{if(K){K();
}}}else{if(typeof G!="string"){var D=G.getAttribute("ex:xpath");
var C=(G.getAttribute("ex:columns")).split(",");
var F="http://simile.mit.edu/babel/html-extractor?"+["xpath="+D,"url="+encodeURIComponent(A)].join("&");
var H=function(N){var Q=document.createElement("div");
Q.innerHTML=N;
var P=Q.firstChild;
var O,L=P.getElementsByTagName("th");
for(col=0;
O=L[col];
col++){var M=C[col];
O.setAttribute("ex:name",M);
}Exhibit.HtmlTableImporter.loadTable(P,I);
return{};
};
return Exhibit.JSONPImporter.load(F,I,K,H);
}else{if(K){K();
}}}};
Exhibit.HtmlTableImporter.loadTable=function(a,U){var G=function(h){return h.textContent||h.innerText||"";
};
var d=function(l,j){var o={},n=false,h,m,k;
for(k=0;
h=j[k];
k++){m=Exhibit.getAttribute(l,h);
if(m){o[h]=m;
n=true;
}}return n&&o;
};
var Q=["uri","label","pluralLabel"];
var O=["uri","valueType","label","reverseLabel","pluralLabel","reversePluralLabel","groupingLabel","reverseGroupingLabel"];
var Z=["valueParser","arity"];
var C={};
var F=Exhibit.getAttribute(a,"type");
var P=F&&d(a,Q);
if(P){C.types={};
C.types[F]=P;
}var c=[],E={},N=[],L,J;
var A,R=a.getElementsByTagName("tr");
var K,D=R[0].getElementsByTagName("th");
for(J=0;
K=D[J];
J++){var B=G(K).trim();
var I=false;
var W=d(K,O);
var g=Exhibit.getAttribute(K,"name");
if(g){W=W||{};
W.label=W.label||B;
B=g;
}if(W){E[B]=W;
if(E[B].valueType=="textwithlink"){E[B].valueType="text";
E[(B+"-link")]={valueType:"url"};
I=true;
}C.properties=E;
}c.push(B);
W=d(K,Z)||{};
if(W.valueParser&&W.valueParser in window){W.valueParser=window[W.valueParser];
}else{if(W.arity=="single"){W.valueParser=function(k,i,j,h){return k.trim();
};
}else{W.valueParser=function(n,k,m,j){if(n.indexOf(";")==-1){return n.trim();
}var l=n.split(";");
for(var h=0;
h<l.length;
h++){l[h]=l[h].trim();
}return l;
};
if(I){var X=W.valueParser;
W.valueParser=function(m,j,l,i){var h=j.getElementsByTagName("a");
if(!h.length){return X(m,j,l,i);
}var k={};
k[c[i]]=m.trim();
k[(c[i]+"-link")]=h[0].href;
return k;
};
}}}N[J]=W;
}var e,T=a.getElementsByTagName("img");
while(e=T[0]){e.parentNode.replaceChild(document.createTextNode(e.src),e);
}var V=[],M,S;
for(L=1;
A=R[L];
L++){var b={};
var Y=A.getElementsByTagName("td");
for(J=0;
M=Y[J];
J++){var S=G(M);
data=N[J].valueParser(S,M,L,J);
if(data==null||S===""){continue;
}if(typeof data=="object"&&!(data instanceof Array)){for(var H in data){b[H]=data[H];
}}else{b[c[J]]=data;
}}if(F){b.type=F;
}V.push(b);
C.items=V;
}U.loadData(C,Exhibit.Persistence.resolveURL(location.href));
};


/* jsonp-importer.js */
Exhibit.JSONPImporter={_callbacks:{}};
Exhibit.importers["application/jsonp"]=Exhibit.JSONPImporter;
Exhibit.JSONPImporter.load=function(link,database,cont,fConvert,staticJSONPCallback,charset){var url=link;
if(typeof link!="string"){url=Exhibit.Persistence.resolveURL(link.href);
fConvert=Exhibit.getAttribute(link,"converter");
staticJSONPCallback=Exhibit.getAttribute(link,"jsonp-callback");
charset=Exhibit.getAttribute(link,"charset");
}if(typeof fConvert=="string"){var name=fConvert;
name=name.charAt(0).toLowerCase()+name.substring(1)+"Converter";
if(name in Exhibit.JSONPImporter){fConvert=Exhibit.JSONPImporter[name];
}else{try{fConvert=eval(fConvert);
}catch(e){fConvert=null;
}}}if(fConvert!=null&&"preprocessURL" in fConvert){url=fConvert.preprocessURL(url);
}var next=Exhibit.JSONPImporter._callbacks.next||1;
Exhibit.JSONPImporter._callbacks.next=next+1;
var callbackName="cb"+next.toString(36);
var callbackURL=url;
if(callbackURL.indexOf("?")==-1){callbackURL+="?";
}var lastChar=callbackURL.charAt(callbackURL.length-1);
if(lastChar!="="){if(lastChar!="&"&&lastChar!="?"){callbackURL+="&";
}callbackURL+="callback=";
}var callbackFull="Exhibit.JSONPImporter._callbacks."+callbackName;
callbackURL+=callbackFull;
var cleanup=function(failedURL){try{Exhibit.UI.hideBusyIndicator();
delete Exhibit.JSONPImporter._callbacks[callbackName+"_fail"];
delete Exhibit.JSONPImporter._callbacks[callbackName];
if(script&&script.parentNode){script.parentNode.removeChild(script);
}}finally{if(failedURL){prompt("Failed to load javascript file:",failedURL);
cont&&cont(undefined);
}}};
Exhibit.JSONPImporter._callbacks[callbackName+"_fail"]=cleanup;
Exhibit.JSONPImporter._callbacks[callbackName]=function(json){try{cleanup(null);
database.loadData(fConvert?fConvert(json,url,link):json,Exhibit.Persistence.getBaseURL(url));
}finally{if(cont){cont(json);
}}};
if(staticJSONPCallback){callbackURL=url;
eval(staticJSONPCallback+"="+callbackFull);
}var fail=callbackFull+"_fail('"+callbackURL+"');";
var script=SimileAjax.includeJavascriptFile(document,callbackURL,fail,charset);
Exhibit.UI.showBusyIndicator();
return Exhibit.JSONPImporter._callbacks[callbackName];
};
Exhibit.JSONPImporter.transformJSON=function(J,E,A,K){var G=J,F=[];
if(E){E=E.split(".");
while(E.length){G=G[E.shift()];
}}for(var D=0,C;
C=G[D];
D++){var I={};
for(var B in A){var E=A[B];
if(!A.hasOwnProperty(B)||!C.hasOwnProperty(E)){continue;
}var H=C[E];
if(K&&K.hasOwnProperty(B)){H=K[B](H,C,D,G,J);
}if(typeof H!="undefined"){I[B]=H;
}}F.push(I);
}return F;
};
Exhibit.JSONPImporter.deliciousConverter=function(C,B){var A=Exhibit.JSONPImporter.transformJSON(C,null,{label:"u",note:"n",description:"d",tags:"t"});
return{items:A,properties:{url:{valueType:"url"}}};
};
Exhibit.JSONPImporter.googleSpreadsheetsConverter=function(Z,J,L){var G=";";
if((L)&&(typeof L!="string")){var R=Exhibit.getAttribute(L,"separator");
if(R!=null&&R.length>0){G=R;
}}var T=[];
var H={};
var P={};
var N={"text":true,"number":true,"item":true,"url":true,"boolean":true};
var A=Z.feed.entry;
for(var X=0;
X<A.length;
X++){var C=A[X];
var U=C.id.$t;
var f=U.lastIndexOf("C");
var S=U.lastIndexOf("R");
A[X]={row:parseInt(U.substring(S+1,f))-1,col:parseInt(U.substring(f+1))-1,val:C.content.$t};
}var M=0;
var F=function(){if(M<A.length){var d=A[M++];
var g=[d];
while(M<A.length){var c=A[M];
if(c.row==d.row){g.push(c);
M++;
}else{break;
}}return g;
}return null;
};
var D=F();
if(D!=null){var e=[];
for(var X=0;
X<D.length;
X++){var B=D[X];
var Q=B.val.trim().replace(/^\{/g,"").replace(/\}$/g,"").split(":");
var E=Q[0].trim();
var Y=Q.length>1?Q[1].split(","):[];
var I={single:false};
for(var b=0;
b<Y.length;
b++){var V=Y[b].trim();
if(V in N){I.valueType=V;
}else{if(V=="single"){I.single=true;
}}}e[B.col]=E;
H[E]=I;
}var K=null;
while((K=F())!=null){var a={};
for(var X=0;
X<K.length;
X++){var B=K[X];
var E=e[B.col];
if(typeof E=="string"){a[E]=B.val;
var I=H[E];
if(!I.single){var W=B.val.split(G);
for(var O=0;
O<W.length;
O++){W[O]=W[O].trim();
}a[E]=W;
}else{a[E]=B.val.trim();
}}}T.push(a);
}}return{types:P,properties:H,items:T};
};
Exhibit.JSONPImporter.googleSpreadsheetsConverter.preprocessURL=function(A){return A.replace(/\/list\//g,"/cells/");
};


/* rdfa-importer.js */
var RDFA=new Object();
RDFA.url="http://www.w3.org/2006/07/SWD/RDFa/impl/js/20070301/rdfa.js";
Exhibit.RDFaImporter={};
Exhibit.importers["application/RDFa"]=Exhibit.RDFaImporter;
Exhibit.RDFaImporter.load=function(B,C,A){try{if((B.getAttribute("href")||"").length==0){Exhibit.RDFaImporter.loadRDFa(null,document,C);
}else{iframe=document.createElement("iframe");
iframe.style.display="none";
iframe.setAttribute("onLoad","Exhibit.RDFaImporter.loadRDFa(this, this.contentDocument, database)");
iframe.src=B.href;
document.body.appendChild(iframe);
}}catch(D){SimileAjax.Debug.exception(D);
}finally{if(A){A();
}}};
Exhibit.RDFaImporter.loadRDFa=function(C,B,D){var E=function(F){return F.textContent||F.innerText||"";
};
var A=function(I,G){var L={},K=false,F,J,H;
for(H=0;
F=G[H];
H++){J=Exhibit.getAttribute(I,F);
if(J){L[F]=J;
K=true;
}}return K&&L;
};
RDFA.CALLBACK_DONE_PARSING=function(){if(C!=null){document.body.removeChild(C);
}this.cloneObject=function(S){for(var R in S){this[R]=S[R];
}};
var N=this.triples;
var F={"classes":{},"properties":{},"items":[]};
for(var K in N){var P={};
P["id"],P["uri"],P["label"]=K;
var Q=N[K];
for(var J in Q){for(var I=0;
I<Q[J].length;
I++){if(Q[J][I].predicate.ns){var G=Q[J][I].predicate.ns.prefix+":"+Q[J][I].predicate.suffix;
if(J=="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"){try{var O=Q[J][I]["object"];
var L=O.match(/(.+?)(#|\/)([a-zA-Z_]+)?$/);
var H=L[3]+"("+L[1]+")";
F["classes"][H]={"label":H,"uri":O};
P["type"]=H;
}catch(M){}}else{F["properties"][G]={"uri":J,"label":Q[J][I]["predicate"]["suffix"]};
try{if(!P[G]){P[G]=[];
}P[G].push(Q[J][I]["object"]);
}catch(M){SimileAjax.Debug.log("problem adding property value: "+M);
}if(J=="http://purl.org/dc/elements/1.1/title"||J=="http://www.w3.org/2000/01/rdf-schema#"||J=="http://xmlns.com/foaf/0.1/name"){P.label=P[G];
}}}else{P[J]=Q[J][I]["object"];
}}}F["items"].push(new this.cloneObject(P));
}D.loadData(F,Exhibit.Persistence.getBaseURL(document.location.href));
};
RDFA.CALLBACK_DONE_LOADING=function(){RDFA.parse(B);
};
SimileAjax.includeJavascriptFile(document,RDFA.url);
};


/* exhibit.js */
Exhibit.create=function(A){return new Exhibit._Impl(A);
};
Exhibit.getAttribute=function(C,A,F){try{var E=C.getAttribute(A);
if(E==null){E=C.getAttribute("ex:"+A);
}if(F==null){return E;
}var D=E.split(F);
for(var B=0;
E=D[B];
B++){D[B]=E.trim();
}return D;
}catch(G){return null;
}};
Exhibit.getRoleAttribute=function(A){var B=Exhibit.getAttribute(A,"role");
B=B!=null?B:"";
B=B.startsWith("exhibit-")?B.substr("exhibit-".length):B;
return B;
};
Exhibit.getConfigurationFromDOM=function(elmt){var c=Exhibit.getAttribute(elmt,"configuration");
if(c!=null&&c.length>0){try{var o=eval(c);
if(typeof o=="object"){return o;
}}catch(e){}}return{};
};
Exhibit.getExporters=function(){Exhibit._initializeExporters();
return[].concat(Exhibit._exporters);
};
Exhibit.addExporter=function(A){Exhibit._initializeExporters();
Exhibit._exporters.push(A);
};
Exhibit._initializeExporters=function(){if(!("_exporters" in Exhibit)){Exhibit._exporters=[Exhibit.RdfXmlExporter,Exhibit.SemanticWikitextExporter,Exhibit.TSVExporter,Exhibit.ExhibitJsonExporter];
}};
Exhibit._Impl=function(A){this._database=A!=null?A:("database" in window?window.database:Exhibit.Database.create());
this._uiContext=Exhibit.UIContext.createRootContext({},this);
this._collectionMap={};
this._componentMap={};
this._historyListener={onBeforePerform:function(B){if(B.lengthy){Exhibit.UI.showBusyIndicator();
}},onAfterPerform:function(B){if(B.lengthy){Exhibit.UI.hideBusyIndicator();
}},onBeforeUndoSeveral:function(){Exhibit.UI.showBusyIndicator();
},onAfterUndoSeveral:function(){Exhibit.UI.hideBusyIndicator();
},onBeforeRedoSeveral:function(){Exhibit.UI.showBusyIndicator();
},onAfterRedoSeveral:function(){Exhibit.UI.hideBusyIndicator();
}};
SimileAjax.History.addListener(this._historyListener);
};
Exhibit._Impl.prototype.dispose=function(){SimileAjax.History.removeListener(this._historyListener);
for(var B in this._componentMap){try{this._componentMap[B].dispose();
}catch(A){SimileAjax.Debug.exception(A,"Failed to dispose component");
}}for(var B in this._collectionMap){try{this._collectionMap[B].dispose();
}catch(A){SimileAjax.Debug.exception(A,"Failed to dispose collection");
}}this._uiContext.dispose();
this._componentMap=null;
this._collectionMap=null;
this._uiContext=null;
this._database=null;
};
Exhibit._Impl.prototype.getDatabase=function(){return this._database;
};
Exhibit._Impl.prototype.getUIContext=function(){return this._uiContext;
};
Exhibit._Impl.prototype.getCollection=function(B){var A=this._collectionMap[B];
if(A==null&&B=="default"){A=Exhibit.Collection.createAllItemsCollection(B,this._database);
this.setDefaultCollection(A);
}return A;
};
Exhibit._Impl.prototype.getDefaultCollection=function(){return this.getCollection("default");
};
Exhibit._Impl.prototype.setCollection=function(C,B){if(C in this._collectionMap){try{this._collectionMap[C].dispose();
}catch(A){SimileAjax.Debug.exception(A);
}}this._collectionMap[C]=B;
};
Exhibit._Impl.prototype.setDefaultCollection=function(A){this.setCollection("default",A);
};
Exhibit._Impl.prototype.getComponent=function(A){return this._componentMap[A];
};
Exhibit._Impl.prototype.setComponent=function(C,B){if(C in this._componentMap){try{this._componentMap[C].dispose();
}catch(A){SimileAjax.Debug.exception(A);
}}this._componentMap[C]=B;
};
Exhibit._Impl.prototype.disposeComponent=function(B){if(B in this._componentMap){try{this._componentMap[B].dispose();
}catch(A){SimileAjax.Debug.exception(A);
}delete this._componentMap[B];
}};
Exhibit._Impl.prototype.configure=function(E){if("collections" in E){for(var C=0;
C<E.collections.length;
C++){var B=E.collections[C];
var D=B.id;
if(D==null||D.length==0){D="default";
}this.setCollection(D,Exhibit.Collection.create2(D,B,this._uiContext));
}}if("components" in E){for(var C=0;
C<E.components.length;
C++){var B=E.components[C];
var A=Exhibit.UI.create(B,B.elmt,this._uiContext);
if(A!=null){var D=elmt.id;
if(D==null||D.length==0){D="component"+Math.floor(Math.random()*1000000);
}this.setComponent(D,A);
}}}};
Exhibit._Impl.prototype.configureFromDOM=function(root){var collectionElmts=[];
var coderElmts=[];
var coordinatorElmts=[];
var lensElmts=[];
var facetElmts=[];
var otherElmts=[];
var f=function(elmt){var role=Exhibit.getRoleAttribute(elmt);
if(role.length>0){switch(role){case"collection":collectionElmts.push(elmt);
break;
case"coder":coderElmts.push(elmt);
break;
case"coordinator":coordinatorElmts.push(elmt);
break;
case"lens":lensElmts.push(elmt);
break;
case"facet":facetElmts.push(elmt);
break;
default:otherElmts.push(elmt);
}}else{var node=elmt.firstChild;
while(node!=null){if(node.nodeType==1){f(node);
}node=node.nextSibling;
}}};
f(root||document.body);
var uiContext=this._uiContext;
for(var i=0;
i<collectionElmts.length;
i++){var elmt=collectionElmts[i];
var id=elmt.id;
if(id==null||id.length==0){id="default";
}this.setCollection(id,Exhibit.Collection.createFromDOM2(id,elmt,uiContext));
}var self=this;
var processElmts=function(elmts){for(var i=0;
i<elmts.length;
i++){var elmt=elmts[i];
try{var component=Exhibit.UI.createFromDOM(elmt,uiContext);
if(component!=null){var id=elmt.id;
if(id==null||id.length==0){id="component"+Math.floor(Math.random()*1000000);
}self.setComponent(id,component);
}}catch(e){SimileAjax.Debug.exception(e);
}}};
processElmts(coordinatorElmts);
processElmts(coderElmts);
processElmts(lensElmts);
processElmts(facetElmts);
processElmts(otherElmts);
var exporters=Exhibit.getAttribute(document.body,"exporters");
if(exporters!=null){exporters=exporters.split(";");
for(var i=0;
i<exporters.length;
i++){var expr=exporters[i];
var exporter=null;
try{exporter=eval(expr);
}catch(e){}if(exporter==null){try{exporter=eval(expr+"Exporter");
}catch(e){}}if(exporter==null){try{exporter=eval("Exhibit."+expr+"Exporter");
}catch(e){}}if(typeof exporter=="object"){Exhibit.addExporter(exporter);
}}}var hash=document.location.hash;
if(hash.length>1){var itemID=decodeURIComponent(hash.substr(1));
if(this._database.containsItem(itemID)){this._showFocusDialogOnItem(itemID);
}}};
Exhibit._Impl.prototype._showFocusDialogOnItem=function(C){var B=SimileAjax.DOM.createDOMFromString("div","<div class='exhibit-focusDialog-viewContainer' id='lensContainer'></div><div class='exhibit-focusDialog-controls'><button id='closeButton'>"+Exhibit.l10n.focusDialogBoxCloseButtonLabel+"</button></div>");
B.elmt.className="exhibit-focusDialog exhibit-ui-protection";
B.close=function(){document.body.removeChild(B.elmt);
};
B.layer=SimileAjax.WindowManager.pushLayer(function(){B.close();
},false);
var A=this._uiContext.getLensRegistry().createLens(C,B.lensContainer,this._uiContext);
B.elmt.style.top=(document.body.scrollTop+100)+"px";
document.body.appendChild(B.elmt);
SimileAjax.WindowManager.registerEvent(B.closeButton,"click",function(E,D,F){SimileAjax.WindowManager.popLayer(B.layer);
},B.layer);
};


/* persistence.js */
Exhibit.Persistence={};
Exhibit.Persistence.getBaseURL=function(A){try{if(A.indexOf("://")<0){var C=Exhibit.Persistence.getBaseURL(document.location.href);
if(A.substr(0,1)=="/"){A=C.substr(0,C.indexOf("/",C.indexOf("://")+3))+A;
}else{A=C+A;
}}var B=A.lastIndexOf("/");
if(B<0){return"";
}else{return A.substr(0,B+1);
}}catch(D){return A;
}};
Exhibit.Persistence.resolveURL=function(A){if(A.indexOf("://")<0){var B=Exhibit.Persistence.getBaseURL(document.location.href);
if(A.substr(0,1)=="/"){A=B.substr(0,B.indexOf("/",B.indexOf("://")+3))+A;
}else{A=B+A;
}}return A;
};
Exhibit.Persistence.getURLWithoutQueryAndHash=function(){var A;
if("_urlWithoutQueryAndHash" in Exhibit){A=Exhibit.Persistence._urlWithoutQueryAndHash;
}else{A=document.location.href;
var C=A.indexOf("#");
var B=A.indexOf("?");
if(B>=0){A=A.substr(0,B);
}else{if(C>=0){A=A.substr(0,C);
}}Exhibit.Persistence._urlWithoutQueryAndHash=A;
}return A;
};
Exhibit.Persistence.getURLWithoutQuery=function(){var A;
if("_urlWithoutQuery" in Exhibit.Persistence){A=Exhibit.Persistence._urlWithoutQuery;
}else{A=document.location.href;
var B=A.indexOf("?");
if(B>=0){A=A.substr(0,B);
}Exhibit.Persistence._urlWithoutQuery=A;
}return A;
};
Exhibit.Persistence.getItemLink=function(A){return Exhibit.Persistence.getURLWithoutQueryAndHash()+"#"+encodeURIComponent(A);
};


/* color-coder.js */
Exhibit.ColorCoder=function(A){this._uiContext=A;
this._settings={};
this._map={};
this._mixedCase={label:Exhibit.Coders.l10n.mixedCaseLabel,color:Exhibit.Coders.mixedCaseColor};
this._missingCase={label:Exhibit.Coders.l10n.missingCaseLabel,color:Exhibit.Coders.missingCaseColor};
this._othersCase={label:Exhibit.Coders.l10n.othersCaseLabel,color:Exhibit.Coders.othersCaseColor};
};
Exhibit.ColorCoder._settingSpecs={};
Exhibit.ColorCoder.create=function(C,B){var A=new Exhibit.ColorCoder(Exhibit.UIContext.create(C,B));
Exhibit.ColorCoder._configure(A,C);
return A;
};
Exhibit.ColorCoder.createFromDOM=function(E,B){E.style.display="none";
var F=Exhibit.getConfigurationFromDOM(E);
var A=new Exhibit.ColorCoder(Exhibit.UIContext.create(F,B));
Exhibit.SettingsUtilities.collectSettingsFromDOM(E,Exhibit.ColorCoder._settingSpecs,A._settings);
try{var C=E.firstChild;
while(C!=null){if(C.nodeType==1){A._addEntry(Exhibit.getAttribute(C,"case"),C.firstChild.nodeValue.trim(),Exhibit.getAttribute(C,"color"));
}C=C.nextSibling;
}}catch(D){SimileAjax.Debug.exception(D,"ColorCoder: Error processing configuration of coder");
}Exhibit.ColorCoder._configure(A,F);
return A;
};
Exhibit.ColorCoder._configure=function(A,D){Exhibit.SettingsUtilities.collectSettings(D,Exhibit.ColorCoder._settingSpecs,A._settings);
if("entries" in D){var C=D.entries;
for(var B=0;
B<C.length;
B++){A._addEntry(C[B].kase,C[B].key,C[B].color);
}}};
Exhibit.ColorCoder.prototype.dispose=function(){this._uiContext=null;
this._settings=null;
};
Exhibit.ColorCoder._colorTable={"red":"#ff0000","green":"#00ff00","blue":"#0000ff","white":"#ffffff","black":"#000000","gray":"#888888"};
Exhibit.ColorCoder.prototype._addEntry=function(B,C,A){if(A in Exhibit.ColorCoder._colorTable){A=Exhibit.ColorCoder._colorTable[A];
}var D=null;
switch(B){case"others":D=this._othersCase;
break;
case"mixed":D=this._mixedCase;
break;
case"missing":D=this._missingCase;
break;
}if(D!=null){D.label=C;
D.color=A;
}else{this._map[C]={color:A};
}};
Exhibit.ColorCoder.prototype.translate=function(B,A){if(B in this._map){if(A){A.keys.add(B);
}return this._map[B].color;
}else{if(B==null){if(A){A.missing=true;
}return this._missingCase.color;
}else{if(A){A.others=true;
}return this._othersCase.color;
}}};
Exhibit.ColorCoder.prototype.translateSet=function(D,A){var C=null;
var B=this;
D.visit(function(E){var F=B.translate(E,A);
if(C==null){C=F;
}else{if(C!=F){if(A){A.mixed=true;
}C=B._mixedCase.color;
return true;
}}return false;
});
if(C!=null){return C;
}else{if(A){A.missing=true;
}return this._missingCase.color;
}};
Exhibit.ColorCoder.prototype.getOthersLabel=function(){return this._othersCase.label;
};
Exhibit.ColorCoder.prototype.getOthersColor=function(){return this._othersCase.color;
};
Exhibit.ColorCoder.prototype.getMissingLabel=function(){return this._missingCase.label;
};
Exhibit.ColorCoder.prototype.getMissingColor=function(){return this._missingCase.color;
};
Exhibit.ColorCoder.prototype.getMixedLabel=function(){return this._mixedCase.label;
};
Exhibit.ColorCoder.prototype.getMixedColor=function(){return this._mixedCase.color;
};


/* color-gradient-coder.js */
Exhibit.ColorGradientCoder=function(A){this._uiContext=A;
this._settings={};
this._gradientPoints=[];
this._mixedCase={label:Exhibit.Coders.l10n.mixedCaseLabel,color:Exhibit.Coders.mixedCaseColor};
this._missingCase={label:Exhibit.Coders.l10n.missingCaseLabel,color:Exhibit.Coders.missingCaseColor};
this._othersCase={label:Exhibit.Coders.l10n.othersCaseLabel,color:Exhibit.Coders.othersCaseColor};
};
Exhibit.ColorGradientCoder._settingSpecs={};
Exhibit.ColorGradientCoder.create=function(C,B){var A=new Exhibit.ColorGradientCoder(Exhibit.UIContext.create(C,B));
Exhibit.ColorGradientCoder._configure(A,C);
return A;
};
Exhibit.ColorGradientCoder.createFromDOM=function(B,G){B.style.display="none";
var C=Exhibit.getConfigurationFromDOM(B);
var A=new Exhibit.ColorGradientCoder(Exhibit.UIContext.create(C,G));
Exhibit.SettingsUtilities.collectSettingsFromDOM(B,Exhibit.ColorGradientCoder._settingSpecs,A._settings);
try{var J=Exhibit.getAttribute(B,"gradientPoints",";");
for(var H=0;
H<J.length;
H++){var M=J[H];
var N=parseFloat(M);
var L=M.indexOf("#")+1;
var E=parseInt(M.slice(L,L+2),16);
var F=parseInt(M.slice(L+2,L+4),16);
var K=parseInt(M.slice(L+4),16);
A._gradientPoints.push({value:N,red:E,green:F,blue:K});
}var D=B.firstChild;
while(D!=null){if(D.nodeType==1){A._addEntry(Exhibit.getAttribute(D,"case"),D.firstChild.nodeValue.trim(),Exhibit.getAttribute(D,"color"));
}D=D.nextSibling;
}}catch(I){SimileAjax.Debug.exception(I,"ColorGradientCoder: Error processing configuration of coder");
}Exhibit.ColorGradientCoder._configure(A,C);
return A;
};
Exhibit.ColorGradientCoder._configure=function(A,D){Exhibit.SettingsUtilities.collectSettings(D,Exhibit.ColorGradientCoder._settingSpecs,A._settings);
if("entries" in D){var C=D.entries;
for(var B=0;
B<C.length;
B++){A._addEntry(C[B].kase,C[B].key,C[B].color);
}}};
Exhibit.ColorGradientCoder.prototype.dispose=function(){this._uiContext=null;
this._settings=null;
};
Exhibit.ColorGradientCoder.prototype._addEntry=function(B,C,A){var D=null;
switch(B){case"others":D=this._othersCase;
break;
case"mixed":D=this._mixedCase;
break;
case"missing":D=this._missingCase;
break;
}if(D!=null){D.label=C;
D.color=A;
}};
Exhibit.ColorGradientCoder.prototype.translate=function(B,A){var E=this._gradientPoints;
var D=function(G){if(G.constructor!=Number){G=parseFloat(G);
}for(j=0;
j<E.length;
j++){if(G==E[j].value){return C(E[j].red,E[j].green,E[j].blue);
}else{if(E[j+1]!=null){if(G<E[j+1].value){var F=(G-E[j].value)/(E[j+1].value-E[j].value);
var H=Math.floor(E[j].red+F*(E[j+1].red-E[j].red));
var I=Math.floor(E[j].green+F*(E[j+1].green-E[j].green));
var J=Math.floor(E[j].blue+F*(E[j+1].blue-E[j].blue));
return C(H,I,J);
}}}}};
var C=function(I,H,F){var G=function(J){if(J==0){return"00";
}else{return J.toString(16);
}};
return"#"+G(I)+G(H)+G(F);
};
if(B>=E[0].value&B<=E[E.length-1].value){if(A){A.keys.add(B);
}return D(B);
}else{if(B==null){if(A){A.missing=true;
}return this._missingCase.color;
}else{if(A){A.others=true;
}return this._othersCase.color;
}}};
Exhibit.ColorGradientCoder.prototype.translateSet=function(D,A){var C=null;
var B=this;
D.visit(function(E){var F=B.translate(E,A);
if(C==null){C=F;
}else{if(C!=F){if(A){A.mixed=true;
}C=B._mixedCase.color;
return true;
}}return false;
});
if(C!=null){return C;
}else{if(A){A.missing=true;
}return this._missingCase.color;
}};
Exhibit.ColorGradientCoder.prototype.getOthersLabel=function(){return this._othersCase.label;
};
Exhibit.ColorGradientCoder.prototype.getOthersColor=function(){return this._othersCase.color;
};
Exhibit.ColorGradientCoder.prototype.getMissingLabel=function(){return this._missingCase.label;
};
Exhibit.ColorGradientCoder.prototype.getMissingColor=function(){return this._missingCase.color;
};
Exhibit.ColorGradientCoder.prototype.getMixedLabel=function(){return this._mixedCase.label;
};
Exhibit.ColorGradientCoder.prototype.getMixedColor=function(){return this._mixedCase.color;
};


/* default-color-coder.js */
Exhibit.DefaultColorCoder=function(A){};
Exhibit.DefaultColorCoder.colors=["#FF9000","#5D7CBA","#A97838","#8B9BBA","#FFC77F","#003EBA","#29447B","#543C1C"];
Exhibit.DefaultColorCoder._map={};
Exhibit.DefaultColorCoder._nextColor=0;
Exhibit.DefaultColorCoder.prototype.translate=function(C,A){if(C==null){if(A){A.missing=true;
}return Exhibit.Coders.missingCaseColor;
}else{if(A){A.keys.add(C);
}if(C in Exhibit.DefaultColorCoder._map){return Exhibit.DefaultColorCoder._map[C];
}else{var B=Exhibit.DefaultColorCoder.colors[Exhibit.DefaultColorCoder._nextColor];
Exhibit.DefaultColorCoder._nextColor=(Exhibit.DefaultColorCoder._nextColor+1)%Exhibit.DefaultColorCoder.colors.length;
Exhibit.DefaultColorCoder._map[C]=B;
return B;
}}};
Exhibit.DefaultColorCoder.prototype.translateSet=function(D,A){var C=null;
var B=this;
D.visit(function(E){var F=B.translate(E,A);
if(C==null){C=F;
}else{if(C!=F){C=Exhibit.Coders.mixedCaseColor;
A.mixed=true;
return true;
}}return false;
});
if(C!=null){return C;
}else{A.missing=true;
return Exhibit.Coders.missingCaseColor;
}};
Exhibit.DefaultColorCoder.prototype.getOthersLabel=function(){return Exhibit.Coders.l10n.othersCaseLabel;
};
Exhibit.DefaultColorCoder.prototype.getOthersColor=function(){return Exhibit.Coders.othersCaseColor;
};
Exhibit.DefaultColorCoder.prototype.getMissingLabel=function(){return Exhibit.Coders.l10n.missingCaseLabel;
};
Exhibit.DefaultColorCoder.prototype.getMissingColor=function(){return Exhibit.Coders.missingCaseColor;
};
Exhibit.DefaultColorCoder.prototype.getMixedLabel=function(){return Exhibit.Coders.l10n.mixedCaseLabel;
};
Exhibit.DefaultColorCoder.prototype.getMixedColor=function(){return Exhibit.Coders.mixedCaseColor;
};


/* icon-coder.js */
Exhibit.IconCoder=function(A){this._uiContext=A;
this._settings={};
this._map={};
this._mixedCase={label:"mixed",icon:null};
this._missingCase={label:"missing",icon:null};
this._othersCase={label:"others",icon:null};
};
Exhibit.IconCoder._settingSpecs={};
Exhibit.IconCoder.create=function(C,B){var A=new Exhibit.IconCoder(Exhibit.UIContext.create(C,B));
Exhibit.IconCoder._configure(A,C);
return A;
};
Exhibit.IconCoder.createFromDOM=function(E,B){E.style.display="none";
var F=Exhibit.getConfigurationFromDOM(E);
var A=new Exhibit.IconCoder(Exhibit.UIContext.create(F,B));
Exhibit.SettingsUtilities.collectSettingsFromDOM(E,Exhibit.IconCoder._settingSpecs,A._settings);
try{var C=E.firstChild;
while(C!=null){if(C.nodeType==1){A._addEntry(Exhibit.getAttribute(C,"case"),C.firstChild.nodeValue.trim(),Exhibit.getAttribute(C,"icon"));
}C=C.nextSibling;
}}catch(D){SimileAjax.Debug.exception(D,"IconCoder: Error processing configuration of coder");
}Exhibit.IconCoder._configure(A,F);
return A;
};
Exhibit.IconCoder._configure=function(A,D){Exhibit.SettingsUtilities.collectSettings(D,Exhibit.IconCoder._settingSpecs,A._settings);
if("entries" in D){var C=D.entries;
for(var B=0;
B<C.length;
B++){A._addEntry(C[B].kase,C[B].key,C[B].icon);
}}};
Exhibit.IconCoder.prototype.dispose=function(){this._uiContext=null;
this._settings=null;
};
Exhibit.IconCoder._iconTable={};
Exhibit.IconCoder.prototype._addEntry=function(A,B,C){if(C in Exhibit.IconCoder._iconTable){C=Exhibit.IconCoder._iconTable[C];
}var D=null;
switch(A){case"others":D=this._othersCase;
break;
case"mixed":D=this._mixedCase;
break;
case"missing":D=this._missingCase;
break;
}if(D!=null){D.label=B;
D.icon=C;
}else{this._map[B]={icon:C};
}};
Exhibit.IconCoder.prototype.translate=function(B,A){if(B in this._map){if(A){A.keys.add(B);
}return this._map[B].icon;
}else{if(B==null){if(A){A.missing=true;
}return this._missingCase.icon;
}else{if(A){A.others=true;
}return this._othersCase.icon;
}}};
Exhibit.IconCoder.prototype.translateSet=function(D,A){var C=null;
var B=this;
D.visit(function(F){var E=B.translate(F,A);
if(C==null){C=E;
}else{if(C!=E){if(A){A.mixed=true;
}C=B._mixedCase.icon;
return true;
}}return false;
});
if(C!=null){return C;
}else{if(A){A.missing=true;
}return this._missingCase.icon;
}};
Exhibit.IconCoder.prototype.getOthersLabel=function(){return this._othersCase.label;
};
Exhibit.IconCoder.prototype.getOthersIcon=function(){return this._othersCase.icon;
};
Exhibit.IconCoder.prototype.getMissingLabel=function(){return this._missingCase.label;
};
Exhibit.IconCoder.prototype.getMissingIcon=function(){return this._missingCase.icon;
};
Exhibit.IconCoder.prototype.getMixedLabel=function(){return this._mixedCase.label;
};
Exhibit.IconCoder.prototype.getMixedIcon=function(){return this._mixedCase.icon;
};


/* size-coder.js */
Exhibit.SizeCoder=function(A){this._uiContext=A;
this._settings={};
this._map={};
this._mixedCase={label:"mixed",size:10};
this._missingCase={label:"missing",size:10};
this._othersCase={label:"others",size:10};
};
Exhibit.SizeCoder._settingSpecs={};
Exhibit.SizeCoder.create=function(C,B){var A=new Exhibit.SizeCoder(Exhibit.UIContext.create(C,B));
Exhibit.SizeCoder._configure(A,C);
return A;
};
Exhibit.SizeCoder.createFromDOM=function(E,B){E.style.display="none";
var F=Exhibit.getConfigurationFromDOM(E);
var A=new Exhibit.SizeCoder(Exhibit.UIContext.create(F,B));
Exhibit.SettingsUtilities.collectSettingsFromDOM(E,Exhibit.SizeCoder._settingSpecs,A._settings);
try{var C=E.firstChild;
while(C!=null){if(C.nodeType==1){A._addEntry(Exhibit.getAttribute(C,"case"),C.firstChild.nodeValue.trim(),Exhibit.getAttribute(C,"size"));
}C=C.nextSibling;
}}catch(D){SimileAjax.Debug.exception(D,"SizeCoder: Error processing configuration of coder");
}Exhibit.SizeCoder._configure(A,F);
return A;
};
Exhibit.SizeCoder._configure=function(A,D){Exhibit.SettingsUtilities.collectSettings(D,Exhibit.SizeCoder._settingSpecs,A._settings);
if("entries" in D){var C=D.entries;
for(var B=0;
B<C.length;
B++){A._addEntry(C[B].kase,C[B].key,C[B].size);
}}};
Exhibit.SizeCoder.prototype.dispose=function(){this._uiContext=null;
this._settings=null;
};
Exhibit.SizeCoder.prototype._addEntry=function(A,C,B){var D=null;
switch(A){case"others":D=this._othersCase;
break;
case"mixed":D=this._mixedCase;
break;
case"missing":D=this._missingCase;
break;
}if(D!=null){D.label=C;
D.size=B;
}else{this._map[C]={size:B};
}};
Exhibit.SizeCoder.prototype.translate=function(B,A){if(B in this._map){if(A){A.keys.add(B);
}return this._map[B].size;
}else{if(B==null){if(A){A.missing=true;
}return this._missingCase.size;
}else{if(A){A.others=true;
}return this._othersCase.size;
}}};
Exhibit.SizeCoder.prototype.translateSet=function(D,A){var C=null;
var B=this;
D.visit(function(E){var F=B.translate(E,A);
if(C==null){C=F;
}else{if(C!=F){if(A){A.mixed=true;
}C=B._mixedCase.size;
return true;
}}return false;
});
if(C!=null){return C;
}else{if(A){A.missing=true;
}return this._missingCase.size;
}};
Exhibit.SizeCoder.prototype.getOthersLabel=function(){return this._othersCase.label;
};
Exhibit.SizeCoder.prototype.getOthersSize=function(){return this._othersCase.size;
};
Exhibit.SizeCoder.prototype.getMissingLabel=function(){return this._missingCase.label;
};
Exhibit.SizeCoder.prototype.getMissingSize=function(){return this._missingCase.size;
};
Exhibit.SizeCoder.prototype.getMixedLabel=function(){return this._mixedCase.label;
};
Exhibit.SizeCoder.prototype.getMixedSize=function(){return this._mixedCase.size;
};


/* size-gradient-coder.js */
Exhibit.SizeGradientCoder=function(A){this._uiContext=A;
this._settings={};
this._log={func:function(B){return Math.ceil(Math.log(B));
},invFunc:function(B){return Math.ceil(Math.exp(B));
}};
this._linear={func:function(B){return Math.ceil(B);
},invFunc:function(B){return Math.ceil(B);
}};
this._quad={func:function(B){return Math.ceil(Math.pow((B/100),2));
},invFunc:function(B){return Math.sqrt(B)*100;
}};
this._exp={func:function(B){return Math.ceil(Math.exp(B));
},invFunc:function(B){return Math.ceil(Math.log(B));
}};
this._markerScale=this._quad;
this._valueScale=this._linear;
this._gradientPoints=[];
this._mixedCase={label:"mixed",size:20};
this._missingCase={label:"missing",size:20};
this._othersCase={label:"others",size:20};
};
Exhibit.SizeGradientCoder._settingSpecs={};
Exhibit.SizeGradientCoder.create=function(C,B){var A=new Exhibit.SizeGradientCoder(Exhibit.UIContext.create(C,B));
Exhibit.SizeGradientCoder._configure(A,C);
return A;
};
Exhibit.SizeGradientCoder.createFromDOM=function(B,E){B.style.display="none";
var C=Exhibit.getConfigurationFromDOM(B);
var A=new Exhibit.SizeGradientCoder(Exhibit.UIContext.create(C,E));
Exhibit.SettingsUtilities.collectSettingsFromDOM(B,Exhibit.SizeGradientCoder._settingSpecs,A._settings);
try{var F=A._settings.markerScale;
if(F=="log"){A._markerScale=A._log;
}if(F=="linear"){A._markerScale=A._linear;
}if(F=="exp"){A._markerScale=A._exp;
}var I=Exhibit.getAttribute(B,"gradientPoints",";");
for(var G=0;
G<I.length;
G++){var K=I[G].split(",");
var J=parseFloat(K[0]);
var L=A._markerScale.invFunc(parseFloat(K[1]));
A._gradientPoints.push({value:J,size:L});
}var D=B.firstChild;
while(D!=null){if(D.nodeType==1){A._addEntry(Exhibit.getAttribute(D,"case"),D.firstChild.nodeValue.trim(),Exhibit.getAttribute(D,"size"));
}D=D.nextSibling;
}}catch(H){SimileAjax.Debug.exception(H,"SizeGradientCoder: Error processing configuration of coder");
}Exhibit.SizeGradientCoder._configure(A,C);
return A;
};
Exhibit.SizeGradientCoder._configure=function(A,D){Exhibit.SettingsUtilities.collectSettings(D,Exhibit.SizeGradientCoder._settingSpecs,A._settings);
if("entries" in D){var C=D.entries;
for(var B=0;
B<C.length;
B++){A._addEntry(C[B].kase,C[B].key,C[B].size);
}}};
Exhibit.SizeGradientCoder.prototype.dispose=function(){this._uiContext=null;
this._settings=null;
};
Exhibit.SizeGradientCoder.prototype._addEntry=function(A,C,B){var D=null;
switch(A){case"others":D=this._othersCase;
break;
case"mixed":D=this._mixedCase;
break;
case"missing":D=this._missingCase;
break;
}if(D!=null){D.label=C;
D.size=B;
}};
Exhibit.SizeGradientCoder.prototype.translate=function(C,A){var B=this;
var D=this._gradientPoints;
var E=function(H){if(H.constructor!=Number){H=parseFloat(H);
}for(j=0;
j<D.length;
j++){if(H==D[j].value){return B._markerScale.func(D[j].size);
}else{if(D[j+1]!=null){if(H<D[j+1].value){var G=(H-D[j].value)/(D[j+1].value-D[j].value);
var F=Math.floor(D[j].size+G*(D[j+1].size-D[j].size));
return B._markerScale.func(F);
}}}}};
if(C>=D[0].value&C<=D[D.length-1].value){if(A){A.keys.add(C);
}return E(C);
}else{if(C==null){if(A){A.missing=true;
}return this._missingCase.size;
}else{if(A){A.others=true;
}return this._othersCase.size;
}}};
Exhibit.SizeGradientCoder.prototype.translateSet=function(D,A){var C=null;
var B=this;
D.visit(function(E){var F=B.translate(E,A);
if(C==null){C=F;
}else{if(C!=F){if(A){A.mixed=true;
}C=B._mixedCase.size;
return true;
}}return false;
});
if(C!=null){return C;
}else{if(A){A.missing=true;
}return this._missingCase.size;
}};
Exhibit.SizeGradientCoder.prototype.getOthersLabel=function(){return this._othersCase.label;
};
Exhibit.SizeGradientCoder.prototype.getOthersSize=function(){return this._othersCase.size;
};
Exhibit.SizeGradientCoder.prototype.getMissingLabel=function(){return this._missingCase.label;
};
Exhibit.SizeGradientCoder.prototype.getMissingSize=function(){return this._missingCase.size;
};
Exhibit.SizeGradientCoder.prototype.getMixedLabel=function(){return this._mixedCase.label;
};
Exhibit.SizeGradientCoder.prototype.getMixedSize=function(){return this._mixedCase.size;
};


/* coordinator.js */
Exhibit.Coordinator=function(A){this._uiContext=A;
this._listeners=[];
};
Exhibit.Coordinator.create=function(C,A){var B=new Exhibit.Coordinator(A);
return B;
};
Exhibit.Coordinator.createFromDOM=function(C,A){var B=new Exhibit.Coordinator(Exhibit.UIContext.createFromDOM(C,A,false));
return B;
};
Exhibit.Coordinator.prototype.dispose=function(){this._uiContext.dispose();
this._uiContext=null;
};
Exhibit.Coordinator.prototype.addListener=function(B){var A=new Exhibit.Coordinator._Listener(this,B);
this._listeners.push(A);
return A;
};
Exhibit.Coordinator.prototype._removeListener=function(B){for(var A=0;
A<this._listeners.length;
A++){if(this._listeners[A]==B){this._listeners.splice(A,1);
return ;
}}};
Exhibit.Coordinator.prototype._fire=function(C,D){for(var B=0;
B<this._listeners.length;
B++){var A=this._listeners[B];
if(A!=C){A._callback(D);
}}};
Exhibit.Coordinator._Listener=function(B,A){this._coordinator=B;
this._callback=A;
};
Exhibit.Coordinator._Listener.prototype.dispose=function(){this._coordinator._removeListener(this);
};
Exhibit.Coordinator._Listener.prototype.fire=function(A){this._coordinator._fire(this,A);
};


/* cloud-facet.js */
Exhibit.CloudFacet=function(C,B){this._div=C;
this._uiContext=B;
this._colorCoder=null;
this._expression=null;
this._valueSet=new Exhibit.Set();
this._selectMissing=false;
this._settings={};
this._dom=null;
var A=this;
this._listener={onRootItemsChanged:function(){if("_itemToValue" in A){delete A._itemToValue;
}if("_valueToItem" in A){delete A._valueToItem;
}if("_missingItems" in A){delete A._missingItems;
}}};
B.getCollection().addListener(this._listener);
};
Exhibit.CloudFacet._settingSpecs={"facetLabel":{type:"text"},"minimumCount":{type:"int",defaultValue:1},"showMissing":{type:"boolean",defaultValue:true},"missingLabel":{type:"text"}};
Exhibit.CloudFacet.create=function(D,B,A){var A=Exhibit.UIContext.create(D,A);
var C=new Exhibit.CloudFacet(B,A);
Exhibit.CloudFacet._configure(C,D);
C._initializeUI();
A.getCollection().addFacet(C);
return C;
};
Exhibit.CloudFacet.createFromDOM=function(A,C,E){var D=Exhibit.getConfigurationFromDOM(A);
var E=Exhibit.UIContext.createFromDOM(A,E);
var B=new Exhibit.CloudFacet(C!=null?C:A,E);
Exhibit.SettingsUtilities.collectSettingsFromDOM(A,Exhibit.CloudFacet._settingSpecs,B._settings);
try{var G=Exhibit.getAttribute(A,"expression");
if(G!=null&&G.length>0){B._expression=Exhibit.ExpressionParser.parse(G);
}var J=Exhibit.getAttribute(A,"selection",";");
if(J!=null&&J.length>0){for(var F=0,K;
K=J[F];
F++){B._valueSet.add(K);
}}var H=Exhibit.getAttribute(A,"selectMissing");
if(H!=null&&H.length>0){B._selectMissing=(H=="true");
}}catch(I){SimileAjax.Debug.exception(I,"CloudFacet: Error processing configuration of cloud facet");
}Exhibit.CloudFacet._configure(B,D);
B._initializeUI();
E.getCollection().addFacet(B);
return B;
};
Exhibit.CloudFacet._configure=function(D,C){Exhibit.SettingsUtilities.collectSettings(C,Exhibit.CloudFacet._settingSpecs,D._settings);
if("expression" in C){D._expression=Exhibit.ExpressionParser.parse(C.expression);
}if("selection" in C){var A=C.selection;
for(var B=0;
B<A.length;
B++){D._valueSet.add(A[B]);
}}if("selectMissing" in C){D._selectMissing=C.selectMissing;
}};
Exhibit.CloudFacet.prototype.dispose=function(){this._uiContext.getCollection().removeFacet(this);
this._uiContext.getCollection().removeListener(this._listener);
this._uiContext=null;
this._div.innerHTML="";
this._div=null;
this._dom=null;
this._expression=null;
this._valueSet=null;
this._settings=null;
this._itemToValue=null;
this._valueToItem=null;
this._missingItems=null;
};
Exhibit.CloudFacet.prototype.hasRestrictions=function(){return this._valueSet.size()>0||this._selectMissing;
};
Exhibit.CloudFacet.prototype.clearAllRestrictions=function(){var A={selection:[],selectMissing:false};
if(this.hasRestrictions()){this._valueSet.visit(function(B){A.selection.push(B);
});
this._valueSet=new Exhibit.Set();
A.selectMissing=this._selectMissing;
this._selectMissing=false;
this._notifyCollection();
}return A;
};
Exhibit.CloudFacet.prototype.applyRestrictions=function(A){this._valueSet=new Exhibit.Set();
for(var B=0;
B<A.selection.length;
B++){this._valueSet.add(A.selection[B]);
}this._selectMissing=A.selectMissing;
this._notifyCollection();
};
Exhibit.CloudFacet.prototype.setSelection=function(B,A){if(A){this._valueSet.add(B);
}else{this._valueSet.remove(B);
}this._notifyCollection();
};
Exhibit.CloudFacet.prototype.setSelectMissing=function(A){if(A!=this._selectMissing){this._selectMissing=A;
this._notifyCollection();
}};
Exhibit.CloudFacet.prototype.restrict=function(B){if(this._valueSet.size()==0&&!this._selectMissing){return B;
}var D;
if(this._expression.isPath()){D=this._expression.getPath().walkBackward(this._valueSet,"item",B,this._uiContext.getDatabase()).getSet();
}else{this._buildMaps();
D=new Exhibit.Set();
var A=this._valueToItem;
this._valueSet.visit(function(G){if(G in A){var H=A[G];
for(var E=0;
E<H.length;
E++){var F=H[E];
if(B.contains(F)){D.add(F);
}}}});
}if(this._selectMissing){this._buildMaps();
var C=this._missingItems;
B.visit(function(E){if(E in C){D.add(E);
}});
}return D;
};
Exhibit.CloudFacet.prototype.update=function(A){this._constructBody(this._computeFacet(A));
};
Exhibit.CloudFacet.prototype._computeFacet=function(J){var H=this._uiContext.getDatabase();
var A=[];
var O="text";
var K=this;
if(this._expression.isPath()){var L=this._expression.getPath();
var G=L.walkForward(J,"item",H);
O=G.valueType;
if(G.size>0){G.forEachValue(function(V){var U=L.evaluateBackward(V,O,J,H);
if(U.size>=K._settings.minimumCount||K._valueSet.contains(V)){A.push({value:V,count:U.size});
}});
}}else{this._buildMaps();
O=this._valueType;
for(var N in this._valueToItem){var M=this._valueToItem[N];
var D=0;
for(var R=0;
R<M.length;
R++){if(J.contains(M[R])){D++;
}}if(D>=this._settings.minimumCount||this._valueSet.contains(N)){A.push({value:N,count:D});
}}}if(A.length>0){var I=this._valueSet;
var F=O=="item"?function(V){var U=H.getObject(V,"label");
return U!=null?U:V;
}:function(U){return U;
};
for(var R=0;
R<A.length;
R++){var B=A[R];
B.actionLabel=B.selectionLabel=F(B.value);
B.selected=I.contains(B.value);
}var C=function(V,U){return V.selectionLabel.localeCompare(U.selectionLabel);
};
if("_orderMap" in this){var S=this._orderMap;
C=function(V,U){if(V.selectionLabel in S){if(U.selectionLabel in S){return S[V.selectionLabel]-S[U.selectionLabel];
}else{return -1;
}}else{if(U.selectionLabel in S){return 1;
}else{return V.selectionLabel.localeCompare(U.selectionLabel);
}}};
}else{if(O=="number"){C=function(V,U){V=parseFloat(V.value);
U=parseFloat(U.value);
return V<U?-1:V>U?1:0;
};
}}var P=C;
if(this._settings.sortMode=="count"){P=function(V,U){var W=U.count-V.count;
return W!=0?W:C(V,U);
};
}var E=P;
if(this._settings.sortDirection=="reverse"){E=function(V,U){return P(U,V);
};
}A.sort(E);
}if(this._settings.showMissing||this._selectMissing){this._buildMaps();
var D=0;
for(var T in this._missingItems){if(J.contains(T)){D++;
}}if(D>0||this._selectMissing){var Q=document.createElement("span");
Q.innerHTML=("missingLabel" in this._settings)?this._settings.missingLabel:Exhibit.FacetUtilities.l10n.missingThisField;
Q.className="exhibit-facet-value-missingThisField";
A.unshift({value:null,count:D,selected:this._selectMissing,selectionLabel:Q,actionLabel:Exhibit.FacetUtilities.l10n.missingThisField});
}}return A;
};
Exhibit.CloudFacet.prototype._notifyCollection=function(){this._uiContext.getCollection().onFacetUpdated(this);
};
Exhibit.CloudFacet.prototype._initializeUI=function(){this._div.innerHTML="";
this._div.className="exhibit-cloudFacet";
var A=SimileAjax.DOM.createDOMFromString(this._div,(("facetLabel" in this._settings)?("<div class='exhibit-cloudFacet-header'><span class='exhibit-cloudFacet-header-title'>"+this._settings.facetLabel+"</span></div>"):"")+"<div class='exhibit-cloudFacet-body' id='valuesContainer'></div>");
this._dom=A;
};
Exhibit.CloudFacet.prototype._constructBody=function(B){var I=this;
var A=this._dom.valuesContainer;
A.style.display="none";
A.innerHTML="";
if(B.length>0){var D=Number.POSITIVE_INFINITY;
var G=Number.NEGATIVE_INFINITY;
for(var C=0;
C<B.length;
C++){var H=B[C];
D=Math.min(D,H.count);
G=Math.max(G,H.count);
}var E=G-D;
var F=function(L){var J=function(N,M,O){I._filter(L.value,L.actionLabel,!(M.ctrlKey||M.metaKey));
SimileAjax.DOM.cancelEvent(M);
return false;
};
var K=document.createElement("span");
K.appendChild(document.createTextNode("\u00A0"));
if(typeof L.selectionLabel=="string"){K.appendChild(document.createTextNode(L.selectionLabel));
}else{K.appendChild(L.selectionLabel);
}K.appendChild(document.createTextNode("\u00A0"));
K.className=L.selected?"exhibit-cloudFacet-value exhibit-cloudFacet-value-selected":"exhibit-cloudFacet-value";
if(L.count>D){K.style.fontSize=Math.ceil(100+100*Math.log(1+1.5*(L.count-D)/E))+"%";
}SimileAjax.WindowManager.registerEvent(K,"click",J,SimileAjax.WindowManager.getBaseLayer());
A.appendChild(K);
A.appendChild(document.createTextNode(" "));
};
for(var C=0;
C<B.length;
C++){F(B[C]);
}}A.style.display="block";
};
Exhibit.CloudFacet.prototype._filter=function(K,J,F){var N=this;
var D,O,H;
var L=new Exhibit.Set(this._valueSet);
var M=this._selectMissing;
var I;
var Q;
var B;
var A;
var C;
if(K==null){A=M;
C=A&&(L.size()==0);
if(F){if(L.size()==0){Q=!M;
}else{Q=true;
}I=new Exhibit.Set();
}else{Q=!M;
I=new Exhibit.Set(L);
}}else{A=L.contains(K);
C=A&&(L.size()==1)&&!M;
if(F){Q=false;
I=new Exhibit.Set();
if(!L.contains(K)){I.add(K);
}else{if(L.size()>1||M){I.add(K);
}}}else{Q=M;
I=new Exhibit.Set(L);
if(I.contains(K)){I.remove(K);
}else{I.add(K);
}}}var E={selection:I.toArray(),selectMissing:Q};
var G={selection:L.toArray(),selectMissing:M};
var P=("facetLabel" in this._settings)?this._settings.facetLabel:"";
SimileAjax.History.addLengthyAction(function(){N.applyRestrictions(E);
},function(){N.applyRestrictions(G);
},(F&&!C)?String.substitute(Exhibit.FacetUtilities.l10n["facetSelectOnlyActionTitle"],[J,P]):String.substitute(Exhibit.FacetUtilities.l10n[A?"facetUnselectActionTitle":"facetSelectActionTitle"],[J,P]));
};
Exhibit.CloudFacet.prototype._clearSelections=function(){var B={};
var A=this;
SimileAjax.History.addLengthyAction(function(){B.restrictions=A.clearAllRestrictions();
},function(){A.applyRestrictions(B.restrictions);
},String.substitute(Exhibit.FacetUtilities.l10n["facetClearSelectionsActionTitle"],[this._settings.facetLabel]));
};
Exhibit.CloudFacet.prototype._buildMaps=function(){if(!("_itemToValue" in this)){var C={};
var B={};
var D={};
var F="text";
var A=function(H,J,I){if(H in I){I[H].push(J);
}else{I[H]=[J];
}};
var G=this._expression;
var E=this._uiContext.getDatabase();
this._uiContext.getCollection().getAllItems().visit(function(I){var H=G.evaluateOnItem(I,E);
if(H.values.size()>0){F=H.valueType;
H.values.visit(function(J){A(I,J,C);
A(J,I,B);
});
}else{D[I]=true;
}});
this._itemToValue=C;
this._valueToItem=B;
this._missingItems=D;
this._valueType=F;
}};


/* date-picker-facet.js */
Exhibit.DatePickerFacet=function(B,A){this._div=B;
this._uiContext=A;
this._expression=null;
this._settings={};
this._dom=null;
this._datePicker=null;
this._range={min:null,max:null};
this._dateFormat="y-MM-dd";
};
Exhibit.DatePickerFacet._settingsSpecs={"facetLabel":{type:"text"},"dateFormat":{type:"text"}};
Exhibit.DatePickerFacet.create=function(D,B,A){var A=Exhibit.UIContext.create(D,A);
var C=new Exhibit.DatePickerFacet(B,A);
Exhibit.DatePickerFacet._configure(C,D);
C._initializeUI();
A.getCollection().addFacet(C);
return C;
};
Exhibit.DatePickerFacet.createFromDOM=function(E,D,B){var G=Exhibit.getConfigurationFromDOM(E);
var B=Exhibit.UIContext.createFromDOM(E,B);
var F=new Exhibit.DatePickerFacet(D!=null?D:E,B);
Exhibit.SettingsUtilities.collectSettingsFromDOM(E,Exhibit.DatePickerFacet._settingsSpecs,F._settings);
try{var A=Exhibit.getAttribute(E,"expression");
if(A!=null&&A.length>0){F._expression=Exhibit.ExpressionParser.parse(A);
}}catch(C){SimileAjax.Debug.exception(C,"DatePickerFacet: Error processing configuration of date range facet");
}Exhibit.DatePickerFacet._configure(F,G);
F._initializeUI();
B.getCollection().addFacet(F);
return F;
};
Exhibit.DatePickerFacet._configure=function(D,C){Exhibit.SettingsUtilities.collectSettings(C,Exhibit.DatePickerFacet._settingsSpecs,D._settings);
if("expression" in C){D._expression=Exhibit.ExpressionParser.parse(C.expression);
}if(!("facetLabel" in D._settings)){D._settings.facetLabel="missing ex:facetLabel";
if(D._expression!=null&&D._expression.isPath()){var B=D._expression.getPath().getLastSegment();
var A=D._uiContext.getDatabase().getProperty(B.property);
if(A!=null){D._settings.facetLabel=B.forward?A.getLabel():A.getReverseLabel();
}}}};
Exhibit.DatePickerFacet.prototype._initializeUI=function(){var A=this;
this._dom=this.constructFacetFrame(this._div,this._settings.facetLabel);
if(this._range.min!=null&&this._range.max!=null){this._dom.range_min.value=this._range.min;
this._dom.range_max.value=this._range.max;
}this._datePicker=Exhibit.DatePickerFacet.DatePicker.create(this._dom.DatePicker,this,new Date());
SimileAjax.WindowManager.registerEvent(this._dom.range_min,"keyup",function(C,B,D){A._onDateFieldChange(C,B);
});
SimileAjax.WindowManager.registerEvent(this._dom.range_max,"keyup",function(C,B,D){A._onDateFieldChange(C,B);
});
};
Exhibit.DatePickerFacet.prototype.constructFacetFrame=function(E,C){var B=this;
var A=["<div class='exhibit-facet-header'>","<div class='exhibit-facet-header-filterControl' id='clearSelectionsDiv' title='",Exhibit.FacetUtilities.l10n.clearSelectionsTooltip,"'>","<span id='filterCountSpan'></span>","<img id='checkImage' />","</div>","<span class='exhibit-facet-header-title'>",C,"</span>","</div>","<div class='exhibit-date-picker' id='DatePicker'></div>","<div class='exhibit-date-picker-text'><input type='text' id='range_min' size='10' style='width:auto;'> - ","<input type='text' id='range_max' size='10' style='width:auto;'></div>"].join("");
var D=SimileAjax.DOM.createDOMFromString(E,A,{checkImage:Exhibit.UI.createTranslucentImage("images/black-check.png")});
D.setSelectionCount=function(G,F){this.filterCountSpan.innerHTML=F;
this.clearSelectionsDiv.style.display=G?"block":"none";
};
SimileAjax.WindowManager.registerEvent(D.clearSelectionsDiv,"click",function(G,F,H){B._clearSelections();
});
return D;
};
Exhibit.DatePickerFacet.prototype.hasRestrictions=function(){return(this._range.min!=null&&this._range.max!=null);
};
Exhibit.DatePickerFacet.prototype.clearAllRestrictions=function(){var A=this._range;
if(this.hasRestrictions){this._range={min:null,max:null};
this._notifyCollection();
}this._dom.range_min.value="";
this._dom.range_max.value="";
return A;
};
Exhibit.DatePickerFacet.prototype.applyRestrictions=function(A){this.setRange(A);
};
Exhibit.DatePickerFacet.prototype.restrict=function(A){if(!this.hasRestrictions()){this._dom.setSelectionCount(this.hasRestrictions(),0);
return A;
}else{var C=this._expression.getPath();
var B=this._uiContext.getDatabase();
var D=new Exhibit.Set();
min=SimileAjax.DateTime.parseIso8601DateTime(this._range.min);
max=SimileAjax.DateTime.parseIso8601DateTime(this._range.max);
D.addSet(C.rangeBackward(min,max.setUTCDate(max.getUTCDate()+1),false,A,B).values);
this._dom.setSelectionCount(this.hasRestrictions(),Math.floor((max-min)/(24*60*60*1000)));
return D;
}};
Exhibit.DatePickerFacet.prototype._notifyCollection=function(){this._uiContext.getCollection().onFacetUpdated(this);
};
Exhibit.DatePickerFacet.prototype._clearSelections=function(){this.clearAllRestrictions();
this._datePicker.update();
this._dom.setSelectionCount(this.hasRestrictions(),0);
};
Exhibit.DatePickerFacet.prototype.update=function(A){};
Exhibit.DatePickerFacet.prototype._onDateFieldChange=function(D,A){if(this._dom.range_min.value&&Exhibit.DatePickerFacet.DateUtil.parseDate(this._dom.range_min.value)&&this._dom.range_max.value&&Exhibit.DatePickerFacet.DateUtil.parseDate(this._dom.range_max.value)){min_date=Exhibit.DatePickerFacet.DateUtil.parseDate(this._dom.range_min.value);
max_date=Exhibit.DatePickerFacet.DateUtil.parseDate(this._dom.range_max.value);
if(min_date&&max_date){var B=this;
if(max_date<min_date){old_min=this._dom.range_min.value;
this._dom.range_min.value=this._dom.range_max.value;
this._dom.range_max.value=old_min;
}var C={min:this._dom.range_min.value,max:this._dom.range_max.value};
if(C.min!=this._range.min||C.max!=this._range.max){var B=this;
var E=this._range;
SimileAjax.History.addLengthyAction(function(){B.setRange(C);
B._datePicker.update();
},function(){B.setRange(E);
B._datePicker.update();
},"Clear date range search");
}}}};
Exhibit.DatePickerFacet.prototype.setRange=function(A){if(A.min!=null&&A.max!=null){min_date=Exhibit.DatePickerFacet.DateUtil.parseDate(A.min);
max_date=Exhibit.DatePickerFacet.DateUtil.parseDate(A.max);
this._dom.range_min.value=Exhibit.DatePickerFacet.DateUtil.formatDate(min_date,this._dateFormat);
this._dom.range_max.value=Exhibit.DatePickerFacet.DateUtil.formatDate(max_date,this._dateFormat);
}if(A.min!=this._range.min||A.max!=this._range.max){this._range=A;
this._notifyCollection();
}};
Exhibit.DatePickerFacet.prototype.dateInCurrentRange=function(A){if(this._range.min!=null&&this._range.max!=null){min_date=Exhibit.DatePickerFacet.DateUtil.parseDate(this._range.min);
max_date=Exhibit.DatePickerFacet.DateUtil.parseDate(this._range.max);
return(A>=(min_date-24*60*60*1000))&&(A<=max_date);
}else{return false;
}};
Exhibit.DatePickerFacet.prototype.dateRangeInCurrentRange=function(A){return this.dateInCurrentRange(A.min)&&this.dateInCurrentRange(A.max);
};
Exhibit.DatePickerFacet.prototype.changeDate=function(A){this._datePicker.update(Exhibit.DatePickerFacet.DateUtil.parseDate(A));
};
Exhibit.DatePickerFacet.prototype.selectDate=function(A){if(this._dom.range_min.value.trim()!=""&&this._dom.range_max.value.trim()!=""){this._dom.range_min.value="";
this._dom.range_max.value="";
}if(this._dom.range_min.value.trim()==""&&this._dom.range_max.value.trim()==""){this._datePicker.startHighlighting(A);
}if(this._dom.range_min.value.trim()==""){this._dom.range_min.value=A;
}else{this._dom.range_max.value=A;
this._datePicker.stopHighlighting();
}this._onDateFieldChange();
};
Exhibit.DatePickerFacet.prototype.selectRange=function(A,B){this._dom.range_min.value=A;
this._dom.range_max.value=B;
this._onDateFieldChange();
};
Exhibit.DatePickerFacet.prototype.dateHasItems=function(B){var E=this._expression.getPath();
var D=this._uiContext.getDatabase();
var A=D.getAllItems();
var C=new Date(B.getFullYear(),B.getMonth(),B.getDate());
C=new Date(C.setDate(C.getDate()+1));
return E.rangeBackward(B,C,false,A,D).count>0;
};


/* date-picker.js */
Exhibit.DatePickerFacet.DatePicker=function(C,B,A){this._div=C;
this._facet=B;
this._currentDate=A;
this._highlight=false;
};
Exhibit.DatePickerFacet.DatePicker.create=function(C,B,A){DatePicker=new Exhibit.DatePickerFacet.DatePicker(C,B,A);
DatePicker._div.appendChild(DatePicker.buildCal());
return DatePicker;
};
Exhibit.DatePickerFacet.DatePicker.prototype.update=function(A){if(typeof A=="undefined"){A=this._currentDate;
}while(this._div.hasChildNodes()){this._div.removeChild(this._div.lastChild);
}this._currentDate=A;
this._div.appendChild(DatePicker.buildCal());
};
Exhibit.DatePickerFacet.DatePicker.daysInMonth=[31,0,31,30,31,30,31,31,30,31,30,31];
Exhibit.DatePickerFacet.DatePicker.prototype.buildCal=function(){var I=this._currentDate.getFullYear();
var A=this._currentDate.getMonth()+1;
var N=this;
var O=new Date(I,A-1,1);
O.start_dow=O.getDay()+1;
var F=new Date();
var K=(I==F.getFullYear()&&A==F.getMonth()+1)?F.getDate():0;
Exhibit.DatePickerFacet.DatePicker.daysInMonth[1]=(((O.getFullYear()%100!=0)&&(O.getFullYear()%4==0))||(O.getFullYear()%400==0))?29:28;
base=new Date(I,A-1,1);
var C=new Date(base.setDate(base.getDate()-1));
base=new Date(I,A-1,1);
var E=new Date(base.setDate(base.getDate()+Exhibit.DatePickerFacet.DatePicker.daysInMonth[A-1]+1));
var M=['<tbody id="tbody"><tr align="center">'];
M.push('<td colspan="8" align="center">');
M.push('<table cellpadding="0" cellspacing="0" class="month-header"><tr><td class="previous-month"><a href="javascript:{}" id="prevLink">'+Exhibit.DatePickerFacet.DateUtil.MONTH_NAMES[C.getMonth()+12]+"</a></td>");
M.push('<td width="100%" align="center" class="current-month">'+Exhibit.DatePickerFacet.DateUtil.MONTH_NAMES[A-1]+", "+I+"</td>");
M.push('<td class="next-month"><a href="javascript:{}" id="nextLink">'+Exhibit.DatePickerFacet.DateUtil.MONTH_NAMES[E.getMonth()+12]+"</a></td></tr></table></td>");
M.push('</tr><tr align="center">');
M.push('<td class="day-header exhibit-week-selector">&nbsp;</td>');
for(s=0;
s<7;
s++){M.push('<td class="day-header">'+"SMTWTFS".substr(s,1)+"</td>");
}M.push("</tr></tbody>");
var L=SimileAjax.DOM.createDOMFromString("table",M.join(""));
L.elmt.className="exhibit-date-picker";
L.elmt.cellpadding="0";
L.elmt.cellspacing="0";
SimileAjax.WindowManager.registerEvent(L.prevLink,"click",function(Q,P,R){N._facet.changeDate(Exhibit.DatePickerFacet.DateUtil.formatDate(C,N._facet._dateFormat));
SimileAjax.DOM.cancelEvent(P);
return false;
},SimileAjax.WindowManager.getBaseLayer());
SimileAjax.WindowManager.registerEvent(L.nextLink,"click",function(Q,P,R){N._facet.changeDate(Exhibit.DatePickerFacet.DateUtil.formatDate(E,N._facet._dateFormat));
SimileAjax.DOM.cancelEvent(P);
return false;
},SimileAjax.WindowManager.getBaseLayer());
var G=null;
var J,D,B,H;
for(i=1;
i<=42;
i++){J=i-O.start_dow;
if(J<0){D=Exhibit.DatePickerFacet.DatePicker.daysInMonth[C.getMonth()]+J+1;
B=new Date(C.getFullYear(),C.getMonth(),D);
H="previousMonth";
}if((J>=0)&&(J<Exhibit.DatePickerFacet.DatePicker.daysInMonth[A-1])){D=i-O.start_dow+1;
B=new Date(O.getFullYear(),A-1,D);
H=(J==K?"currentMonth today":"currentMonth");
}if(J>=Exhibit.DatePickerFacet.DatePicker.daysInMonth[A-1]){D=J-Exhibit.DatePickerFacet.DatePicker.daysInMonth[A-1]+1;
B=new Date(E.getFullYear(),E.getMonth(),D);
H="nextMonth";
}td=this.buildCell(B,H);
if(i==1||i%7==1){if(G!=null){L.tbody.appendChild(G);
}G=this.buildRow(B);
}G.appendChild(td);
}L.tbody.appendChild(G);
return L.elmt;
};
Exhibit.DatePickerFacet.DatePicker.prototype.buildRow=function(B){var A=this;
var D=new Date(B.getFullYear(),B.getMonth(),B.getDate());
D=new Date(D.setDate(D.getDate()+6));
var E=SimileAjax.DOM.createDOMFromString("tr","");
var C=SimileAjax.DOM.createDOMFromString("td",'<a href="javascript:{}" id="link"><span>></span></a>');
C.elmt.className="exhibit-week-selector";
C.link.className=(this._facet.dateRangeInCurrentRange({min:B,max:D})?"selected":"");
SimileAjax.WindowManager.registerEvent(C.link,"click",function(G,F,H){A._facet.selectRange(Exhibit.DatePickerFacet.DateUtil.formatDate(B,A._facet._dateFormat),Exhibit.DatePickerFacet.DateUtil.formatDate(D,A._facet._dateFormat));
SimileAjax.DOM.cancelEvent(F);
return false;
},SimileAjax.WindowManager.getBaseLayer());
E.elmt.align="center";
E.elmt.appendChild(C.elmt);
return E.elmt;
};
Exhibit.DatePickerFacet.DatePicker.prototype.buildCell=function(B,C){var A=this;
var D=SimileAjax.DOM.createDOMFromString("td",B.getDate());
D.elmt.className=[C,"day",(this._facet.dateInCurrentRange(B)?"selected":""),((B.getDay()==0||B.getDay()==6)?"weekend":""),(this._facet.dateHasItems(B)?"has-items":"")].join(" ");
D.elmt.id=Exhibit.DatePickerFacet.DateUtil.formatDate(B,A._facet._dateFormat).replace(/[^a-zA-Z 0-9]+/g,"");
D.elmt.title=Exhibit.DatePickerFacet.DateUtil.formatDate(B,A._facet._dateFormat);
SimileAjax.WindowManager.registerEvent(D.elmt,"click",function(F,E,G){A._facet.selectDate(Exhibit.DatePickerFacet.DateUtil.formatDate(B,A._facet._dateFormat));
SimileAjax.DOM.cancelEvent(E);
return false;
},SimileAjax.WindowManager.getBaseLayer());
SimileAjax.WindowManager.registerEvent(D.elmt,"mouseover",function(F,E,G){A.highlight(F);
SimileAjax.DOM.cancelEvent(E);
return false;
},SimileAjax.WindowManager.getBaseLayer());
return D.elmt;
};
Exhibit.DatePickerFacet.DatePicker.prototype.highlight=function(A){if(this._highlight){$("td.day").each(function(B){$("#"+this.id).removeClass("highlight");
});
center=Exhibit.DatePickerFacet.DateUtil.parseDate(this._highlight);
end=Exhibit.DatePickerFacet.DateUtil.parseDate(A.title);
if(end<center){old_end=end;
end=center;
center=old_end;
}while(center<=end){$("#"+Exhibit.DatePickerFacet.DateUtil.formatDate(center,this._facet._dateFormat).replace(/[^a-zA-Z 0-9]+/g,"")).addClass("highlight");
center.setDate(center.getDate()+1);
}}};
Exhibit.DatePickerFacet.DatePicker.prototype.startHighlighting=function(A){this._highlight=A;
dateObj=Exhibit.DatePickerFacet.DateUtil.parseDate(A);
elmtId=Exhibit.DatePickerFacet.DateUtil.formatDate(dateObj,this._facet._dateFormat).replace(/[^a-zA-Z 0-9]+/g,"");
elmt=$("#"+elmtId).addClass("highlight");
};
Exhibit.DatePickerFacet.DatePicker.prototype.stopHighlighting=function(A){this._highlight=false;
};


/* date-util.js */
Exhibit.DatePickerFacet.DateUtil=new Object();
Exhibit.DatePickerFacet.DateUtil.MONTH_NAMES=new Array("January","February","March","April","May","June","July","August","September","October","November","December","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec");
Exhibit.DatePickerFacet.DateUtil.DAY_NAMES=new Array("Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sun","Mon","Tue","Wed","Thu","Fri","Sat");
Exhibit.DatePickerFacet.DateUtil.LZ=function(A){return(A<0||A>9?"":"0")+A;
};
Exhibit.DatePickerFacet.DateUtil.isDate=function(B,C){var A=Exhibit.DatePickerFacet.DateUtil.getDateFromFormat(B,C);
if(A==0){return false;
}return true;
};
Exhibit.DatePickerFacet.DateUtil.compareDates=function(D,E,C,F){var B=Exhibit.DatePickerFacet.DateUtil.getDateFromFormat(D,E);
var A=Exhibit.DatePickerFacet.DateUtil.getDateFromFormat(C,F);
if(B==0||A==0){return -1;
}else{if(B>A){return 1;
}}return 0;
};
Exhibit.DatePickerFacet.DateUtil.formatDate=function(b,X){X=X+"";
var A="";
var i=0;
var e="";
var F="";
var J=b.getYear()+"";
var G=b.getMonth()+1;
var a=b.getDate();
var N=b.getDay();
var L=b.getHours();
var U=b.getMinutes();
var P=b.getSeconds();
var Q,S,C,R,f,D,Z,Y,V,O,j,L,g,I,B,W;
var T=new Object();
if(J.length<4){J=""+(J-0+1900);
}T["y"]=""+J;
T["yyyy"]=J;
T["yy"]=J.substring(2,4);
T["M"]=G;
T["MM"]=Exhibit.DatePickerFacet.DateUtil.LZ(G);
T["MMM"]=Exhibit.DatePickerFacet.DateUtil.MONTH_NAMES[G-1];
T["NNN"]=Exhibit.DatePickerFacet.DateUtil.MONTH_NAMES[G+11];
T["d"]=a;
T["dd"]=Exhibit.DatePickerFacet.DateUtil.LZ(a);
T["E"]=Exhibit.DatePickerFacet.DateUtil.DAY_NAMES[N+7];
T["EE"]=Exhibit.DatePickerFacet.DateUtil.DAY_NAMES[N];
T["H"]=L;
T["HH"]=Exhibit.DatePickerFacet.DateUtil.LZ(L);
if(L==0){T["h"]=12;
}else{if(L>12){T["h"]=L-12;
}else{T["h"]=L;
}}T["hh"]=Exhibit.DatePickerFacet.DateUtil.LZ(T["h"]);
if(L>11){T["K"]=L-12;
}else{T["K"]=L;
}T["k"]=L+1;
T["KK"]=Exhibit.DatePickerFacet.DateUtil.LZ(T["K"]);
T["kk"]=Exhibit.DatePickerFacet.DateUtil.LZ(T["k"]);
if(L>11){T["a"]="PM";
}else{T["a"]="AM";
}T["m"]=U;
T["mm"]=Exhibit.DatePickerFacet.DateUtil.LZ(U);
T["s"]=P;
T["ss"]=Exhibit.DatePickerFacet.DateUtil.LZ(P);
while(i<X.length){e=X.charAt(i);
F="";
while((X.charAt(i)==e)&&(i<X.length)){F+=X.charAt(i++);
}if(T[F]!=null){A=A+T[F];
}else{A=A+F;
}}return A;
};
Exhibit.DatePickerFacet.DateUtil._isInteger=function(C){var A="1234567890";
for(var B=0;
B<C.length;
B++){if(A.indexOf(C.charAt(B))==-1){return false;
}}return true;
};
Exhibit.DatePickerFacet.DateUtil._getInt=function(F,D,E,C){for(var A=C;
A>=E;
A--){var B=F.substring(D,D+A);
if(B.length<E){return null;
}if(Exhibit.DatePickerFacet.DateUtil._isInteger(B)){return B;
}}return null;
};
Exhibit.DatePickerFacet.DateUtil.getDateFromFormat=function(U,N){U=U+"";
N=N+"";
var S=0;
var T=0;
var Q="";
var E="";
var J="";
var G,F;
var B=new Date();
var H=B.getYear();
var R=B.getMonth()+1;
var P=1;
var C=B.getHours();
var O=B.getMinutes();
var L=B.getSeconds();
var I="";
while(T<N.length){Q=N.charAt(T);
E="";
while((N.charAt(T)==Q)&&(T<N.length)){E+=N.charAt(T++);
}if(E=="yyyy"||E=="yy"||E=="y"){if(E=="yyyy"){G=4;
F=4;
}if(E=="yy"){G=2;
F=2;
}if(E=="y"){G=2;
F=4;
}H=Exhibit.DatePickerFacet.DateUtil._getInt(U,S,G,F);
if(H==null){return 0;
}S+=H.length;
if(H.length==2){if(H>70){H=1900+(H-0);
}else{H=2000+(H-0);
}}}else{if(E=="MMM"||E=="NNN"){R=0;
for(var M=0;
M<Exhibit.DatePickerFacet.DateUtil.MONTH_NAMES.length;
M++){var D=Exhibit.DatePickerFacet.DateUtil.MONTH_NAMES[M];
if(U.substring(S,S+D.length).toLowerCase()==D.toLowerCase()){if(E=="MMM"||(E=="NNN"&&M>11)){R=M+1;
if(R>12){R-=12;
}S+=D.length;
break;
}}}if((R<1)||(R>12)){return 0;
}}else{if(E=="EE"||E=="E"){for(var M=0;
M<Exhibit.DatePickerFacet.DateUtil.DAY_NAMES.length;
M++){var K=Exhibit.DatePickerFacet.DateUtil.DAY_NAMES[M];
if(U.substring(S,S+K.length).toLowerCase()==K.toLowerCase()){S+=K.length;
break;
}}}else{if(E=="MM"||E=="M"){R=Exhibit.DatePickerFacet.DateUtil._getInt(U,S,E.length,2);
if(R==null||(R<1)||(R>12)){return 0;
}S+=R.length;
}else{if(E=="dd"||E=="d"){P=Exhibit.DatePickerFacet.DateUtil._getInt(U,S,E.length,2);
if(P==null||(P<1)||(P>31)){return 0;
}S+=P.length;
}else{if(E=="hh"||E=="h"){C=Exhibit.DatePickerFacet.DateUtil._getInt(U,S,E.length,2);
if(C==null||(C<1)||(C>12)){return 0;
}S+=C.length;
}else{if(E=="HH"||E=="H"){C=Exhibit.DatePickerFacet.DateUtil._getInt(U,S,E.length,2);
if(C==null||(C<0)||(C>23)){return 0;
}S+=C.length;
}else{if(E=="KK"||E=="K"){C=Exhibit.DatePickerFacet.DateUtil._getInt(U,S,E.length,2);
if(C==null||(C<0)||(C>11)){return 0;
}S+=C.length;
}else{if(E=="kk"||E=="k"){C=Exhibit.DatePickerFacet.DateUtil._getInt(U,S,E.length,2);
if(C==null||(C<1)||(C>24)){return 0;
}S+=C.length;
C--;
}else{if(E=="mm"||E=="m"){O=Exhibit.DatePickerFacet.DateUtil._getInt(U,S,E.length,2);
if(O==null||(O<0)||(O>59)){return 0;
}S+=O.length;
}else{if(E=="ss"||E=="s"){L=Exhibit.DatePickerFacet.DateUtil._getInt(U,S,E.length,2);
if(L==null||(L<0)||(L>59)){return 0;
}S+=L.length;
}else{if(E=="a"){if(U.substring(S,S+2).toLowerCase()=="am"){I="AM";
}else{if(U.substring(S,S+2).toLowerCase()=="pm"){I="PM";
}else{return 0;
}}S+=2;
}else{if(U.substring(S,S+E.length)!=E){return 0;
}else{S+=E.length;
}}}}}}}}}}}}}}if(S!=U.length){return 0;
}if(R==2){if(((H%4==0)&&(H%100!=0))||(H%400==0)){if(P>29){return 0;
}}else{if(P>28){return 0;
}}}if((R==4)||(R==6)||(R==9)||(R==11)){if(P>30){return 0;
}}if(C<12&&I=="PM"){C=C-0+12;
}else{if(C>11&&I=="AM"){C-=12;
}}var A=new Date(H,R-1,P,C,O,L);
return A.getTime();
};
Exhibit.DatePickerFacet.DateUtil.parseDate=function(G){var D=(arguments.length==2)?arguments[1]:false;
generalFormats=new Array("y-M-d","MMM d, y","MMM d,y","y-MMM-d","d-MMM-y","MMM d");
monthFirst=new Array("M/d/y","M-d-y","M.d.y","MMM-d","M/d","M-d");
dateFirst=new Array("d/M/y","d-M-y","d.M.y","d-MMM","d/M","d-M");
var B=new Array("generalFormats",D?"dateFirst":"monthFirst",D?"monthFirst":"dateFirst");
var F=null;
for(var E=0;
E<B.length;
E++){var A=window[B[E]];
for(var C=0;
C<A.length;
C++){F=Exhibit.DatePickerFacet.DateUtil.getDateFromFormat(G,A[C]);
if(F!=0){return new Date(F);
}}}return null;
};


/* hierarchical-facet.js */
Exhibit.HierarchicalFacet=function(C,B){this._div=C;
this._uiContext=B;
this._colorCoder=null;
this._expression=null;
this._uniformGroupingExpression=null;
this._selections=[];
this._expanded={};
this._settings={};
this._dom=null;
var A=this;
this._listener={onRootItemsChanged:function(){if("_cache" in A){delete A._cache;
}}};
B.getCollection().addListener(this._listener);
};
Exhibit.HierarchicalFacet._settingSpecs={"facetLabel":{type:"text"},"fixedOrder":{type:"text"},"sortMode":{type:"text",defaultValue:"value"},"sortDirection":{type:"text",defaultValue:"forward"},"othersLabel":{type:"text"},"scroll":{type:"boolean",defaultValue:true},"height":{type:"text"},"colorCoder":{type:"text",defaultValue:null},"collapsible":{type:"boolean",defaultValue:false},"collapsed":{type:"boolean",defaultValue:false}};
Exhibit.HierarchicalFacet.create=function(D,B,A){var A=Exhibit.UIContext.create(D,A);
var C=new Exhibit.HierarchicalFacet(B,A);
Exhibit.HierarchicalFacet._configure(C,D);
C._initializeUI();
A.getCollection().addFacet(C);
return C;
};
Exhibit.HierarchicalFacet.createFromDOM=function(B,D,F){var E=Exhibit.getConfigurationFromDOM(B);
var F=Exhibit.UIContext.createFromDOM(B,F);
var C=new Exhibit.HierarchicalFacet(D!=null?D:B,F);
Exhibit.SettingsUtilities.collectSettingsFromDOM(B,Exhibit.HierarchicalFacet._settingSpecs,C._settings);
try{var H=Exhibit.getAttribute(B,"expression");
if(H!=null&&H.length>0){C._expression=Exhibit.ExpressionParser.parse(H);
}var A=Exhibit.getAttribute(B,"uniformGrouping");
if(A!=null&&A.length>0){C._uniformGroupingExpression=Exhibit.ExpressionParser.parse(A);
}var J=Exhibit.getAttribute(B,"selection",";");
if(J!=null&&J.length>0){for(var G=0,K;
K=J[G];
G++){C._selections=C._internalAddSelection({value:K,selectOthers:false});
}}}catch(I){SimileAjax.Debug.exception(I,"HierarchicalFacet: Error processing configuration of hierarchical facet");
}Exhibit.HierarchicalFacet._configure(C,E);
C._initializeUI();
F.getCollection().addFacet(C);
return C;
};
Exhibit.HierarchicalFacet._configure=function(H,G){Exhibit.SettingsUtilities.collectSettings(G,Exhibit.HierarchicalFacet._settingSpecs,H._settings);
if("expression" in G){H._expression=Exhibit.ExpressionParser.parse(G.expression);
}if("uniformGrouping" in G){H._uniformGroupingExpression=Exhibit.ExpressionParser.parse(G.uniformGrouping);
}if("selection" in G){var B=G.selection;
for(var C=0;
C<B.length;
C++){H._selections.push({value:B[C],selectOthers:false});
}}if(!("facetLabel" in H._settings)){H._settings.facetLabel="missing ex:facetLabel";
if(H._expression!=null&&H._expression.isPath()){var E=H._expression.getPath().getLastSegment();
var A=H._uiContext.getDatabase().getProperty(E.property);
if(A!=null){H._settings.facetLabel=E.forward?A.getLabel():A.getReverseLabel();
}}}if("fixedOrder" in H._settings){var D=H._settings.fixedOrder.split(";");
var F={};
for(var C=0;
C<D.length;
C++){F[D[C].trim()]=C;
}H._orderMap=F;
}if("colorCoder" in H._settings){H._colorCoder=H._uiContext.getExhibit().getComponent(H._settings.colorCoder);
}if(H._settings.collapsed){H._settings.collapsible=true;
}};
Exhibit.HierarchicalFacet.prototype.dispose=function(){this._uiContext.getCollection().removeFacet(this);
this._uiContext.getCollection().removeListener(this._listener);
this._uiContext=null;
this._colorCoder=null;
this._div.innerHTML="";
this._div=null;
this._dom=null;
this._expression=null;
this._uniformGroupingExpression=null;
this._selections=null;
this._settings=null;
this._cache=null;
};
Exhibit.HierarchicalFacet.prototype.hasRestrictions=function(){return this._selections.length>0;
};
Exhibit.HierarchicalFacet.prototype.clearAllRestrictions=function(){var A=this._selections;
this._selections=[];
if(A.length>0){this._notifyCollection();
}return A;
};
Exhibit.HierarchicalFacet.prototype.applyRestrictions=function(A){this._selections=[].concat(A);
this._notifyCollection();
};
Exhibit.HierarchicalFacet.prototype.setSelection=function(C,B){var A={value:C,selectOthers:false};
if(B){this._selections=this._internalAddSelection(A);
}else{this._selections=this._internalRemoveSelection(A);
}this._notifyCollection();
};
Exhibit.HierarchicalFacet.prototype.setselectOthers=function(C,B){var A={value:C,selectOthers:true};
if(B){this._selections=this._internalAddSelection(A);
}else{this._selections=this._internalRemoveSelection(A);
}this._notifyCollection();
};
Exhibit.HierarchicalFacet.prototype.restrict=function(B){if(this._selections.length==0){return B;
}this._buildCache();
var G=new Exhibit.Set();
var E=function(H){if("children" in H){F(H.children);
Exhibit.Set.createIntersection(H.others,B,G);
}else{Exhibit.Set.createIntersection(H.items,B,G);
}};
var F=function(I){for(var H=0;
H<I.length;
H++){E(I[H]);
}};
for(var C=0;
C<this._selections.length;
C++){var A=this._selections[C];
var D=this._getTreeNode(A.value);
if(D){if(A.selectOthers){Exhibit.Set.createIntersection(D.others,B,G);
}else{E(D);
}}}return G;
};
Exhibit.HierarchicalFacet.prototype._internalAddSelection=function(I){var B={};
var G={};
var A=this._cache;
var C=function(N){if(N in A.valueToParent){var M=A.valueToParent[N];
for(var L=0;
L<M.length;
L++){var K=M[L];
B[K]=true;
C(K);
}}};
var F=function(M){if(M in A.valueToChildren){var L=A.valueToChildren[M];
for(var K=0;
K<L.length;
K++){var N=L[K];
G[N]=true;
F(N);
}}};
if(I.value!=null){C(I.value);
if(I.selectOthers){B[I.value]=true;
}else{G[I.value]=true;
F(I.value);
}}var D=this._selections;
var H=[I];
for(var E=0;
E<D.length;
E++){var J=D[E];
if((!(J.value in B)||J.selectOthers)&&(!(J.value in G))){H.push(J);
}}return H;
};
Exhibit.HierarchicalFacet.prototype._internalRemoveSelection=function(B){var A=this._selections;
var E=[];
for(var C=0;
C<A.length;
C++){var D=A[C];
if(D.value!=B.value||D.selectOthers!=B.selectOthers){E.push(D);
}}return E;
};
Exhibit.HierarchicalFacet.prototype.update=function(A){this._dom.valuesContainer.style.display="none";
this._dom.valuesContainer.innerHTML="";
this._constructBody(this._computeFacet(A));
this._dom.valuesContainer.style.display="block";
};
Exhibit.HierarchicalFacet.prototype._computeFacet=function(F){this._buildCache();
var H=this._uiContext.getDatabase();
var G=this._getValueSorter();
var E="othersLabel" in this._settings?this._settings.othersLabel:"(others)";
var B={};
for(var C=0;
C<this._selections.length;
C++){var I=this._selections[C];
B[I.value]=I.selectOthers;
}var D=function(K,L,J){var N=(K.value in B&&!B[K.value]);
if("children" in K){var Q={value:K.value,label:K.label,children:[],selected:N,areOthers:false};
var R=new Exhibit.Set();
for(var O=0;
O<K.children.length;
O++){var P=K.children[O];
D(P,Q.children,R);
}Q.children.sort(G);
if(K.others.size()>0){var S=(K.value in B&&B[K.value]);
var M=Exhibit.Set.createIntersection(F,K.others);
if(M.size()>0||S){Q.children.push({value:K.value,label:E,count:M.size(),selected:S,areOthers:true});
R.addSet(M);
}}Q.count=R.size();
if(N||Q.count>0||Q.children.length>0){L.push(Q);
if(J!=null&&R.size()>0){J.addSet(R);
}}}else{var M=Exhibit.Set.createIntersection(F,K.items);
if(M.size()>0||N){L.push({value:K.value,label:K.label,count:M.size(),selected:N,areOthers:false});
if(J!=null&&M.size()>0){J.addSet(M);
}}}};
var A=[];
D(this._cache.tree,A,null);
return A[0];
};
Exhibit.HierarchicalFacet.prototype._getValueSorter=function(){var C=function(F,E){return F.label.localeCompare(E.label);
};
if("_orderMap" in this){var D=this._orderMap;
C=function(F,E){if(F.label in D){if(E.label in D){return D[F.label]-D[E.label];
}else{return -1;
}}else{if(E.label in D){return 1;
}else{return F.label.localeCompare(E.label);
}}};
}else{if(this._cache.valueType=="number"){C=function(F,E){F=parseFloat(F.value);
E=parseFloat(E.value);
return F<E?-1:F>E?1:0;
};
}}var A=C;
if(this._settings.sortMode=="count"){A=function(F,E){var G=E.count-F.count;
return G!=0?G:C(F,E);
};
}var B=A;
if(this._settings.sortDirection=="reverse"){B=function(F,E){return A(E,F);
};
}return B;
};
Exhibit.HierarchicalFacet.prototype._notifyCollection=function(){this._uiContext.getCollection().onFacetUpdated(this);
};
Exhibit.HierarchicalFacet.prototype._initializeUI=function(){var A=this;
this._dom=Exhibit.FacetUtilities[this._settings.scroll?"constructFacetFrame":"constructFlowingFacetFrame"](this._div,this._settings.facetLabel,function(C,B,D){A._clearSelections();
},this._uiContext,this._settings.collapsible,this._settings.collapsed);
if("height" in this._settings&&this._settings.scroll){this._dom.valuesContainer.style.height=this._settings.height;
}};
Exhibit.HierarchicalFacet.prototype._constructBody=function(A){var B=this;
var G=this._dom.valuesContainer;
G.style.display="none";
var F=Exhibit.FacetUtilities[this._settings.scroll?"constructHierarchicalFacetItem":"constructFlowingHierarchicalFacetItem"];
var C=this._selections.length>0;
var E=function(L,N){var H=("children" in L);
var J=function(P,O,Q){B._filter(L.value,L.areOthers,L.label,L.selected,false);
SimileAjax.DOM.cancelEvent(O);
return false;
};
var K=function(P,O,Q){B._filter(L.value,L.areOthers,L.label,L.selected,!(O.ctrlKey||O.metaKey));
SimileAjax.DOM.cancelEvent(O);
return false;
};
var I=function(Q,P,R){var O;
if(L.value in B._expanded){delete B._expanded[L.value];
O=false;
}else{B._expanded[L.value]=true;
O=true;
}M.showChildren(O);
SimileAjax.DOM.cancelEvent(P);
return false;
};
var M=F(L.label,L.count,(B._colorCoder!=null)?B._colorCoder.translate(L.value):null,L.selected,H,(L.value in B._expanded),C,J,K,I,B._uiContext);
N.appendChild(M.elmt);
if(H){D(L.children,M.childrenContainer);
}};
var D=function(I,J){for(var H=0;
H<I.length;
H++){E(I[H],J);
}};
D(A.children,G);
G.style.display="block";
this._dom.setSelectionCount(this._selections.length);
};
Exhibit.HierarchicalFacet.prototype._filter=function(H,B,G,A,D){var J=this;
var E=A&&this._selections.length==1;
var I={value:H,selectOthers:B};
var F=this._selections;
var C;
if(A){if(D){if(E){C=[];
}else{C=[I];
}}else{C=this._internalRemoveSelection(I);
}}else{if(D){C=[I];
}else{C=this._internalAddSelection(I);
}}SimileAjax.History.addLengthyAction(function(){J.applyRestrictions(C);
},function(){J.applyRestrictions(F);
},(D&&!E)?String.substitute(Exhibit.FacetUtilities.l10n["facetSelectOnlyActionTitle"],[G,this._settings.facetLabel]):String.substitute(Exhibit.FacetUtilities.l10n[A?"facetUnselectActionTitle":"facetSelectActionTitle"],[G,this._settings.facetLabel]));
};
Exhibit.HierarchicalFacet.prototype._clearSelections=function(){var B={};
var A=this;
SimileAjax.History.addLengthyAction(function(){B.restrictions=A.clearAllRestrictions();
},function(){A.applyRestrictions(B.restrictions);
},String.substitute(Exhibit.FacetUtilities.l10n["facetClearSelectionsActionTitle"],[this._settings.facetLabel]));
};
Exhibit.HierarchicalFacet.prototype._buildCache=function(){if(!("_cache" in this)){var K={};
var C="text";
var B={};
var F={};
var I={};
var M=new Exhibit.Set();
var J=function(P,R,Q){if(P in Q){Q[P].push(R);
}else{Q[P]=[R];
}};
var N=this._uiContext.getDatabase();
var O={value:null,label:"(root)",others:new Exhibit.Set(),children:[]};
var A=this._expression;
this._uiContext.getCollection().getAllItems().visit(function(Q){var P=A.evaluateOnItem(Q,N);
if(P.values.size()>0){C=P.valueType;
P.values.visit(function(R){M.add(R);
J(R,Q,K);
});
}else{O.others.add(Q);
}});
var D=this._uniformGroupingExpression;
var H=new Exhibit.Set();
var L=function(Q){var P=new Exhibit.Set();
Q.visit(function(S){var R=D.evaluateOnItem(S,N);
if(R.values.size()>0){R.values.visit(function(T){J(S,T,F);
J(T,S,B);
if(!Q.contains(T)){P.add(T);
}return true;
});
}else{H.add(S);
}});
if(P.size()>0){L(P);
}};
L(M);
var G=function(X,P,W,Z){var V=N.getObject(X,"label");
var Q={value:X,label:V!=null?V:X};
P.push(Q);
I[X]=Z;
if(X in B){Q.children=[];
var T=new Exhibit.Set();
var U=B[X];
for(var R=0;
R<U.length;
R++){G(U[R],Q.children,T,Z.concat(R));
}Q.others=new Exhibit.Set();
if(X in K){var S=K[X];
for(var R=0;
R<S.length;
R++){var Y=S[R];
if(!T.contains(Y)){Q.others.add(Y);
W.add(Y);
}}}W.addSet(T);
}else{Q.items=new Exhibit.Set();
if(X in K){var S=K[X];
for(var R=0;
R<S.length;
R++){var Y=S[R];
Q.items.add(Y);
W.add(Y);
}}}};
var E=0;
H.visit(function(P){G(P,O.children,new Exhibit.Set(),[E++]);
});
this._cache={tree:O,valueToChildren:B,valueToParent:F,valueToPath:I,valueType:C};
}};
Exhibit.HierarchicalFacet.prototype._getTreeNode=function(B){if(B==null){return this._cache.tree;
}var C=this._cache.valueToPath[B];
var A=function(F,G,E){var D=F.children[G[E]];
if(++E<G.length){return A(D,G,E);
}else{return D;
}};
return(C)?A(this._cache.tree,C,0):null;
};


/* image-facet.js */
Exhibit.ImageFacet=function(B,A){this._div=B;
this._uiContext=A;
this._colorCoder=null;
this._expression=null;
this._valueSet=new Exhibit.Set();
this._selectMissing=false;
this._settings={};
this._dom=null;
};
Exhibit.ImageFacet._settingSpecs={"facetLabel":{type:"text"},"thumbNail":{type:"uri"},"overlayCounts":{type:"boolean",defaultValue:true},"fixedOrder":{type:"text"},"sortMode":{type:"text",defaultValue:"value"},"sortDirection":{type:"text",defaultValue:"forward"},"showMissing":{type:"boolean",defaultValue:true},"missingLabel":{type:"text"},"scroll":{type:"boolean",defaultValue:true},"height":{type:"text"},"colorCoder":{type:"text",defaultValue:null},"collapsible":{type:"boolean",defaultValue:false},"collapsed":{type:"boolean",defaultValue:false}};
Exhibit.ImageFacet.create=function(D,B,A){var A=Exhibit.UIContext.create(D,A);
var C=new Exhibit.ImageFacet(B,A);
Exhibit.ImageFacet._configure(C,D);
C._initializeUI();
A.getCollection().addFacet(C);
return C;
};
Exhibit.ImageFacet.createFromDOM=function(A,C,F){var D=Exhibit.getConfigurationFromDOM(A);
var F=Exhibit.UIContext.createFromDOM(A,F);
var B=new Exhibit.ImageFacet(C!=null?C:A,F);
Exhibit.SettingsUtilities.collectSettingsFromDOM(A,Exhibit.ImageFacet._settingSpecs,B._settings);
try{var H=Exhibit.getAttribute(A,"expression");
if(H!=null&&H.length>0){B._expression=Exhibit.ExpressionParser.parse(H);
}var E=Exhibit.getAttribute(A,"image");
if(E!=null&&E.length>0){B._imageExpression=Exhibit.ExpressionParser.parse(E);
}var L=Exhibit.getAttribute(A,"tooltip");
if(L!=null&&L.length>0){B._tooltipExpression=Exhibit.ExpressionParser.parse(L);
}var K=Exhibit.getAttribute(A,"selection",";");
if(K!=null&&K.length>0){for(var G=0,M;
M=K[G];
G++){B._valueSet.add(M);
}}var I=Exhibit.getAttribute(A,"selectMissing");
if(I!=null&&I.length>0){B._selectMissing=(I=="true");
}}catch(J){SimileAjax.Debug.exception(J,"ImageFacet: Error processing configuration of list facet");
}Exhibit.ImageFacet._configure(B,D);
B._initializeUI();
F.getCollection().addFacet(B);
return B;
};
Exhibit.ImageFacet._configure=function(H,G){Exhibit.SettingsUtilities.collectSettings(G,Exhibit.ImageFacet._settingSpecs,H._settings);
if("expression" in G){H._expression=Exhibit.ExpressionParser.parse(G.expression);
}if("image" in G){H._imageExpression=Exhibit.ExpressionParser.parse(G.image);
}if("tooltip" in G){H._tooltipExpression=Exhibit.ExpressionParser.parse(G.tooltip);
}if(!(H._imageExpression)){H._imageExpression=Exhibit.ExpressionParser.parse("value");
}if(!(H._tooltipExpression)){H._tooltipExpression=Exhibit.ExpressionParser.parse("value");
}if("selection" in G){var B=G.selection;
for(var C=0;
C<B.length;
C++){H._valueSet.add(B[C]);
}}if("selectMissing" in G){H._selectMissing=G.selectMissing;
}if(!("facetLabel" in H._settings)){H._settings.facetLabel="missing ex:facetLabel";
if(H._expression!=null&&H._expression.isPath()){var E=H._expression.getPath().getLastSegment();
var A=H._uiContext.getDatabase().getProperty(E.property);
if(A!=null){H._settings.facetLabel=E.forward?A.getLabel():A.getReverseLabel();
}}}if("fixedOrder" in H._settings){var D=H._settings.fixedOrder.split(";");
var F={};
for(var C=0;
C<D.length;
C++){F[D[C].trim()]=C;
}H._orderMap=F;
}if("colorCoder" in H._settings){H._colorCoder=H._uiContext.getExhibit().getComponent(H._settings.colorCoder);
}if(H._settings.collapsed){H._settings.collapsible=true;
}H._cache=new Exhibit.FacetUtilities.Cache(H._uiContext.getDatabase(),H._uiContext.getCollection(),H._expression);
};
Exhibit.ImageFacet.prototype.dispose=function(){this._cache.dispose();
this._cache=null;
this._uiContext.getCollection().removeFacet(this);
this._uiContext=null;
this._colorCoder=null;
this._div.innerHTML="";
this._div=null;
this._dom=null;
this._expression=null;
this._valueSet=null;
this._settings=null;
};
Exhibit.ImageFacet.prototype.hasRestrictions=function(){return this._valueSet.size()>0||this._selectMissing;
};
Exhibit.ImageFacet.prototype.clearAllRestrictions=function(){var A={selection:[],selectMissing:false};
if(this.hasRestrictions()){this._valueSet.visit(function(B){A.selection.push(B);
});
this._valueSet=new Exhibit.Set();
A.selectMissing=this._selectMissing;
this._selectMissing=false;
this._notifyCollection();
}return A;
};
Exhibit.ImageFacet.prototype.applyRestrictions=function(A){this._valueSet=new Exhibit.Set();
for(var B=0;
B<A.selection.length;
B++){this._valueSet.add(A.selection[B]);
}this._selectMissing=A.selectMissing;
this._notifyCollection();
};
Exhibit.ImageFacet.prototype.setSelection=function(B,A){if(A){this._valueSet.add(B);
}else{this._valueSet.remove(B);
}this._notifyCollection();
};
Exhibit.ImageFacet.prototype.setSelectMissing=function(A){if(A!=this._selectMissing){this._selectMissing=A;
this._notifyCollection();
}};
Exhibit.ImageFacet.prototype.restrict=function(A){if(this._valueSet.size()==0&&!this._selectMissing){return A;
}var B=this._cache.getItemsFromValues(this._valueSet,A);
if(this._selectMissing){this._cache.getItemsMissingValue(A,B);
}return B;
};
Exhibit.ImageFacet.prototype.update=function(A){this._dom.valuesContainer.style.display="none";
this._dom.valuesContainer.innerHTML="";
this._constructBody(this._computeFacet(A));
this._dom.valuesContainer.style.display="block";
};
Exhibit.ImageFacet.prototype._computeFacet=function(E){var G=this._uiContext.getDatabase();
var A=this._cache.getValueCountsFromItems(E);
var B=A.entries;
var C=A.valueType;
if(B.length>0){var H=this._valueSet;
var I=C=="item"?function(K){var J=G.getObject(K,"label");
return J!=null?J:K;
}:function(J){return J;
};
for(var D=0;
D<B.length;
D++){var F=B[D];
F.actionLabel=F.selectionLabel=I(F.value);
F.image=this._imageExpression.evaluateSingleOnItem(F.value,G).value;
F.tooltip=this._tooltipExpression.evaluateSingleOnItem(F.value,G).value;
F.selected=H.contains(F.value);
}B.sort(this._createSortFunction(C));
}return B;
};
Exhibit.ImageFacet.prototype._notifyCollection=function(){this._uiContext.getCollection().onFacetUpdated(this);
};
Exhibit.ImageFacet.prototype._initializeUI=function(){var A=this;
this._dom=Exhibit.FacetUtilities[this._settings.scroll?"constructFacetFrame":"constructFlowingFacetFrame"](this._div,this._settings.facetLabel,function(C,B,D){A._clearSelections();
},this._uiContext,this._settings.collapsible,this._settings.collapsed);
if("height" in this._settings&&this._settings.scroll){this._dom.valuesContainer.style.height=this._settings.height;
}};
Exhibit.ImageFacet.prototype._constructBody=function(F){var A=this;
var C=this._settings.overlayCounts;
var G=this._dom.valuesContainer;
G.style.display="none";
var E=this._valueSet.size()>0||this._selectMissing;
var D=function(L){var K=function(Q,P,R){A._filter(L.value,L.actionLabel,!(P.ctrlKey||P.metaKey));
SimileAjax.DOM.cancelEvent(P);
return false;
};
var J=document.createElement("span");
var O=document.createElement("div");
O.className="wrapper";
var M=document.createElement("img");
M.src=L.image;
O.appendChild(M);
if(C==true){var I=document.createElement("div");
I.className="countDiv";
var N=document.createElement("div");
N.className="countBackground";
I.appendChild(N);
var H=document.createElement("div");
H.className="text";
H.innerHTML=L.count;
I.appendChild(H);
O.appendChild(I);
}J.appendChild(O);
J.className=L.selected?"inline-block exhibit-imageFacet-value exhibit-imageFacet-value-selected":"inline-block exhibit-imageFacet-value";
J.title=L.count+" "+L.tooltip;
SimileAjax.WindowManager.registerEvent(J,"click",K,SimileAjax.WindowManager.getBaseLayer());
G.appendChild(J);
};
for(var B=0;
B<F.length;
B++){D(F[B]);
}G.style.display="block";
this._dom.setSelectionCount(this._valueSet.size()+(this._selectMissing?1:0));
};
Exhibit.ImageFacet.prototype._filter=function(K,J,F){var N=this;
var D,O,H;
var L=new Exhibit.Set(this._valueSet);
var M=this._selectMissing;
var I;
var P;
var B;
var A;
var C;
if(K==null){A=M;
C=A&&(L.size()==0);
if(F){if(L.size()==0){P=!M;
}else{P=true;
}I=new Exhibit.Set();
}else{P=!M;
I=new Exhibit.Set(L);
}}else{A=L.contains(K);
C=A&&(L.size()==1)&&!M;
if(F){P=false;
I=new Exhibit.Set();
if(!L.contains(K)){I.add(K);
}else{if(L.size()>1||M){I.add(K);
}}}else{P=M;
I=new Exhibit.Set(L);
if(I.contains(K)){I.remove(K);
}else{I.add(K);
}}}var E={selection:I.toArray(),selectMissing:P};
var G={selection:L.toArray(),selectMissing:M};
SimileAjax.History.addLengthyAction(function(){N.applyRestrictions(E);
},function(){N.applyRestrictions(G);
},(F&&!C)?String.substitute(Exhibit.FacetUtilities.l10n["facetSelectOnlyActionTitle"],[J,this._settings.facetLabel]):String.substitute(Exhibit.FacetUtilities.l10n[A?"facetUnselectActionTitle":"facetSelectActionTitle"],[J,this._settings.facetLabel]));
};
Exhibit.ImageFacet.prototype._clearSelections=function(){var B={};
var A=this;
SimileAjax.History.addLengthyAction(function(){B.restrictions=A.clearAllRestrictions();
},function(){A.applyRestrictions(B.restrictions);
},String.substitute(Exhibit.FacetUtilities.l10n["facetClearSelectionsActionTitle"],[this._settings.facetLabel]));
};
Exhibit.ImageFacet.prototype._createSortFunction=function(C){var D=function(G,F){return G.selectionLabel.localeCompare(F.selectionLabel);
};
if("_orderMap" in this){var E=this._orderMap;
D=function(G,F){if(G.selectionLabel in E){if(F.selectionLabel in E){return E[G.selectionLabel]-E[F.selectionLabel];
}else{return -1;
}}else{if(F.selectionLabel in E){return 1;
}else{return G.selectionLabel.localeCompare(F.selectionLabel);
}}};
}else{if(C=="number"){D=function(G,F){G=parseFloat(G.value);
F=parseFloat(F.value);
return G<F?-1:G>F?1:0;
};
}}var A=D;
if(this._settings.sortMode=="count"){A=function(G,F){var H=F.count-G.count;
return H!=0?H:D(G,F);
};
}var B=A;
if(this._settings.sortDirection=="reverse"){B=function(G,F){return A(F,G);
};
}return B;
};


/* list-facet.js */
Exhibit.ListFacet=function(B,A){this._div=B;
this._uiContext=A;
this._colorCoder=null;
this._expression=null;
this._valueSet=new Exhibit.Set();
this._selectMissing=false;
this._settings={};
this._dom=null;
};
Exhibit.ListFacet._settingSpecs={"facetLabel":{type:"text"},"fixedOrder":{type:"text"},"sortMode":{type:"text",defaultValue:"value"},"sortDirection":{type:"text",defaultValue:"forward"},"showMissing":{type:"boolean",defaultValue:true},"missingLabel":{type:"text"},"scroll":{type:"boolean",defaultValue:true},"height":{type:"text"},"colorCoder":{type:"text",defaultValue:null},"collapsible":{type:"boolean",defaultValue:false},"collapsed":{type:"boolean",defaultValue:false}};
Exhibit.ListFacet.create=function(D,B,A){var A=Exhibit.UIContext.create(D,A);
var C=new Exhibit.ListFacet(B,A);
Exhibit.ListFacet._configure(C,D);
C._initializeUI();
A.getCollection().addFacet(C);
return C;
};
Exhibit.ListFacet.createFromDOM=function(A,C,E){var D=Exhibit.getConfigurationFromDOM(A);
var E=Exhibit.UIContext.createFromDOM(A,E);
var B=new Exhibit.ListFacet(C!=null?C:A,E);
Exhibit.SettingsUtilities.collectSettingsFromDOM(A,Exhibit.ListFacet._settingSpecs,B._settings);
try{var G=Exhibit.getAttribute(A,"expression");
if(G!=null&&G.length>0){B._expression=Exhibit.ExpressionParser.parse(G);
}var J=Exhibit.getAttribute(A,"selection",";");
if(J!=null&&J.length>0){for(var F=0,K;
K=J[F];
F++){B._valueSet.add(K);
}}var H=Exhibit.getAttribute(A,"selectMissing");
if(H!=null&&H.length>0){B._selectMissing=(H=="true");
}}catch(I){SimileAjax.Debug.exception(I,"ListFacet: Error processing configuration of list facet");
}Exhibit.ListFacet._configure(B,D);
B._initializeUI();
E.getCollection().addFacet(B);
return B;
};
Exhibit.ListFacet._configure=function(H,G){Exhibit.SettingsUtilities.collectSettings(G,Exhibit.ListFacet._settingSpecs,H._settings);
if("expression" in G){H._expression=Exhibit.ExpressionParser.parse(G.expression);
}if("selection" in G){var B=G.selection;
for(var C=0;
C<B.length;
C++){H._valueSet.add(B[C]);
}}if("selectMissing" in G){H._selectMissing=G.selectMissing;
}if(!("facetLabel" in H._settings)){H._settings.facetLabel="missing ex:facetLabel";
if(H._expression!=null&&H._expression.isPath()){var E=H._expression.getPath().getLastSegment();
var A=H._uiContext.getDatabase().getProperty(E.property);
if(A!=null){H._settings.facetLabel=E.forward?A.getLabel():A.getReverseLabel();
}}}if("fixedOrder" in H._settings){var D=H._settings.fixedOrder.split(";");
var F={};
for(var C=0;
C<D.length;
C++){F[D[C].trim()]=C;
}H._orderMap=F;
}if("colorCoder" in H._settings){H._colorCoder=H._uiContext.getExhibit().getComponent(H._settings.colorCoder);
}if(H._settings.collapsed){H._settings.collapsible=true;
}H._cache=new Exhibit.FacetUtilities.Cache(H._uiContext.getDatabase(),H._uiContext.getCollection(),H._expression);
};
Exhibit.ListFacet.prototype.dispose=function(){this._cache.dispose();
this._cache=null;
this._uiContext.getCollection().removeFacet(this);
this._uiContext=null;
this._colorCoder=null;
this._div.innerHTML="";
this._div=null;
this._dom=null;
this._expression=null;
this._valueSet=null;
this._settings=null;
};
Exhibit.ListFacet.prototype.hasRestrictions=function(){return this._valueSet.size()>0||this._selectMissing;
};
Exhibit.ListFacet.prototype.clearAllRestrictions=function(){var A={selection:[],selectMissing:false};
if(this.hasRestrictions()){this._valueSet.visit(function(B){A.selection.push(B);
});
this._valueSet=new Exhibit.Set();
A.selectMissing=this._selectMissing;
this._selectMissing=false;
this._notifyCollection();
}return A;
};
Exhibit.ListFacet.prototype.applyRestrictions=function(A){this._valueSet=new Exhibit.Set();
for(var B=0;
B<A.selection.length;
B++){this._valueSet.add(A.selection[B]);
}this._selectMissing=A.selectMissing;
this._notifyCollection();
};
Exhibit.ListFacet.prototype.setSelection=function(B,A){if(A){this._valueSet.add(B);
}else{this._valueSet.remove(B);
}this._notifyCollection();
};
Exhibit.ListFacet.prototype.setSelectMissing=function(A){if(A!=this._selectMissing){this._selectMissing=A;
this._notifyCollection();
}};
Exhibit.ListFacet.prototype.restrict=function(A){if(this._valueSet.size()==0&&!this._selectMissing){return A;
}var B=this._cache.getItemsFromValues(this._valueSet,A);
if(this._selectMissing){this._cache.getItemsMissingValue(A,B);
}return B;
};
Exhibit.ListFacet.prototype.update=function(A){this._dom.valuesContainer.style.display="none";
this._dom.valuesContainer.innerHTML="";
this._constructBody(this._computeFacet(A));
this._dom.valuesContainer.style.display="block";
};
Exhibit.ListFacet.prototype._computeFacet=function(F){var I=this._uiContext.getDatabase();
var A=this._cache.getValueCountsFromItems(F);
var B=A.entries;
var C=A.valueType;
if(B.length>0){var J=this._valueSet;
var K=C=="item"?function(M){var L=I.getObject(M,"label");
return L!=null?L:M;
}:function(L){return L;
};
for(var D=0;
D<B.length;
D++){var H=B[D];
H.actionLabel=H.selectionLabel=K(H.value);
H.selected=J.contains(H.value);
}B.sort(this._createSortFunction(C));
}if(this._settings.showMissing||this._selectMissing){var E=this._cache.countItemsMissingValue(F);
if(E>0||this._selectMissing){var G=document.createElement("span");
G.innerHTML=("missingLabel" in this._settings)?this._settings.missingLabel:Exhibit.FacetUtilities.l10n.missingThisField;
G.className="exhibit-facet-value-missingThisField";
B.unshift({value:null,count:E,selected:this._selectMissing,selectionLabel:G,actionLabel:Exhibit.FacetUtilities.l10n.missingThisField});
}}return B;
};
Exhibit.ListFacet.prototype._notifyCollection=function(){this._uiContext.getCollection().onFacetUpdated(this);
};
Exhibit.ListFacet.prototype._initializeUI=function(){var A=this;
this._dom=Exhibit.FacetUtilities[this._settings.scroll?"constructFacetFrame":"constructFlowingFacetFrame"](this._div,this._settings.facetLabel,function(C,B,D){A._clearSelections();
},this._uiContext,this._settings.collapsible,this._settings.collapsed);
if("height" in this._settings&&this._settings.scroll){this._dom.valuesContainer.style.height=this._settings.height;
}};
Exhibit.ListFacet.prototype._constructBody=function(E){var A=this;
var G=this._dom.valuesContainer;
G.style.display="none";
var F=Exhibit.FacetUtilities[this._settings.scroll?"constructFacetItem":"constructFlowingFacetItem"];
var D=this._valueSet.size()>0||this._selectMissing;
var C=function(K){var H=function(M,L,N){A._filter(K.value,K.actionLabel,false);
SimileAjax.DOM.cancelEvent(L);
return false;
};
var J=function(M,L,N){A._filter(K.value,K.actionLabel,!(L.ctrlKey||L.metaKey));
SimileAjax.DOM.cancelEvent(L);
return false;
};
var I=F(K.selectionLabel,K.count,(A._colorCoder!=null)?A._colorCoder.translate(K.value):null,K.selected,D,H,J,A._uiContext);
G.appendChild(I);
};
for(var B=0;
B<E.length;
B++){C(E[B]);
}G.style.display="block";
this._dom.setSelectionCount(this._valueSet.size()+(this._selectMissing?1:0));
};
Exhibit.ListFacet.prototype._filter=function(K,J,F){var N=this;
var D,O,H;
var L=new Exhibit.Set(this._valueSet);
var M=this._selectMissing;
var I;
var P;
var B;
var A;
var C;
if(K==null){A=M;
C=A&&(L.size()==0);
if(F){if(L.size()==0){P=!M;
}else{P=true;
}I=new Exhibit.Set();
}else{P=!M;
I=new Exhibit.Set(L);
}}else{A=L.contains(K);
C=A&&(L.size()==1)&&!M;
if(F){P=false;
I=new Exhibit.Set();
if(!L.contains(K)){I.add(K);
}else{if(L.size()>1||M){I.add(K);
}}}else{P=M;
I=new Exhibit.Set(L);
if(I.contains(K)){I.remove(K);
}else{I.add(K);
}}}var E={selection:I.toArray(),selectMissing:P};
var G={selection:L.toArray(),selectMissing:M};
SimileAjax.History.addLengthyAction(function(){N.applyRestrictions(E);
},function(){N.applyRestrictions(G);
},(F&&!C)?String.substitute(Exhibit.FacetUtilities.l10n["facetSelectOnlyActionTitle"],[J,this._settings.facetLabel]):String.substitute(Exhibit.FacetUtilities.l10n[A?"facetUnselectActionTitle":"facetSelectActionTitle"],[J,this._settings.facetLabel]));
};
Exhibit.ListFacet.prototype._clearSelections=function(){var B={};
var A=this;
SimileAjax.History.addLengthyAction(function(){B.restrictions=A.clearAllRestrictions();
},function(){A.applyRestrictions(B.restrictions);
},String.substitute(Exhibit.FacetUtilities.l10n["facetClearSelectionsActionTitle"],[this._settings.facetLabel]));
};
Exhibit.ListFacet.prototype._createSortFunction=function(C){var D=function(G,F){return G.selectionLabel.localeCompare(F.selectionLabel);
};
if("_orderMap" in this){var E=this._orderMap;
D=function(G,F){if(G.selectionLabel in E){if(F.selectionLabel in E){return E[G.selectionLabel]-E[F.selectionLabel];
}else{return -1;
}}else{if(F.selectionLabel in E){return 1;
}else{return G.selectionLabel.localeCompare(F.selectionLabel);
}}};
}else{if(C=="number"){D=function(G,F){G=parseFloat(G.value);
F=parseFloat(F.value);
return G<F?-1:G>F?1:0;
};
}}var A=D;
if(this._settings.sortMode=="count"){A=function(G,F){var H=F.count-G.count;
return H!=0?H:D(G,F);
};
}var B=A;
if(this._settings.sortDirection=="reverse"){B=function(G,F){return A(F,G);
};
}return B;
};


/* numeric-range-facet.js */
Exhibit.NumericRangeFacet=function(C,B){this._div=C;
this._uiContext=B;
this._expression=null;
this._settings={};
this._dom=null;
this._ranges=[];
var A=this;
this._listener={onRootItemsChanged:function(){if("_rangeIndex" in A){delete A._rangeIndex;
}}};
B.getCollection().addListener(this._listener);
};
Exhibit.NumericRangeFacet._settingSpecs={"facetLabel":{type:"text"},"scroll":{type:"boolean",defaultValue:true},"height":{type:"text"},"interval":{type:"float",defaultValue:10},"collapsible":{type:"boolean",defaultValue:false},"collapsed":{type:"boolean",defaultValue:false}};
Exhibit.NumericRangeFacet.create=function(D,B,A){var A=Exhibit.UIContext.create(D,A);
var C=new Exhibit.NumericRangeFacet(B,A);
Exhibit.NumericRangeFacet._configure(C,D);
C._initializeUI();
A.getCollection().addFacet(C);
return C;
};
Exhibit.NumericRangeFacet.createFromDOM=function(E,D,B){var G=Exhibit.getConfigurationFromDOM(E);
var B=Exhibit.UIContext.createFromDOM(E,B);
var F=new Exhibit.NumericRangeFacet(D!=null?D:E,B);
Exhibit.SettingsUtilities.collectSettingsFromDOM(E,Exhibit.NumericRangeFacet._settingSpecs,F._settings);
try{var A=Exhibit.getAttribute(E,"expression");
if(A!=null&&A.length>0){F._expression=Exhibit.ExpressionParser.parse(A);
}}catch(C){SimileAjax.Debug.exception(C,"NumericRangeFacet: Error processing configuration of numeric range facet");
}Exhibit.NumericRangeFacet._configure(F,G);
F._initializeUI();
B.getCollection().addFacet(F);
return F;
};
Exhibit.NumericRangeFacet._configure=function(D,C){Exhibit.SettingsUtilities.collectSettings(C,Exhibit.NumericRangeFacet._settingSpecs,D._settings);
if("expression" in C){D._expression=Exhibit.ExpressionParser.parse(C.expression);
}if(!("facetLabel" in D._settings)){D._settings.facetLabel="missing ex:facetLabel";
if(D._expression!=null&&D._expression.isPath()){var B=D._expression.getPath().getLastSegment();
var A=D._uiContext.getDatabase().getProperty(B.property);
if(A!=null){D._settings.facetLabel=B.forward?A.getLabel():A.getReverseLabel();
}}}if(D._settings.collapsed){D._settings.collapsible=true;
}};
Exhibit.NumericRangeFacet.prototype.dispose=function(){this._uiContext.getCollection().removeFacet(this);
this._uiContext.getCollection().removeListener(this._listener);
this._uiContext=null;
this._div.innerHTML="";
this._div=null;
this._dom=null;
this._expression=null;
this._settings=null;
this._ranges=null;
};
Exhibit.NumericRangeFacet.prototype.hasRestrictions=function(){return this._ranges.length>0;
};
Exhibit.NumericRangeFacet.prototype.clearAllRestrictions=function(){var A=[];
if(this._ranges.length>0){A=A.concat(this._ranges);
this._ranges=[];
this._notifyCollection();
}return A;
};
Exhibit.NumericRangeFacet.prototype.applyRestrictions=function(A){this._ranges=A;
this._notifyCollection();
};
Exhibit.NumericRangeFacet.prototype.setRange=function(E,D,C){if(C){for(var B=0;
B<this._ranges.length;
B++){var A=this._ranges[B];
if(A.from==E&&A.to==D){return ;
}}this._ranges.push({from:E,to:D});
}else{for(var B=0;
B<this._ranges.length;
B++){var A=this._ranges[B];
if(A.from==E&&A.to==D){this._ranges.splice(B,1);
break;
}}}this._notifyCollection();
};
Exhibit.NumericRangeFacet.prototype.restrict=function(B){if(this._ranges.length==0){return B;
}else{if(this._expression.isPath()){var E=this._expression.getPath();
var D=this._uiContext.getDatabase();
var F=new Exhibit.Set();
for(var C=0;
C<this._ranges.length;
C++){var A=this._ranges[C];
F.addSet(E.rangeBackward(A.from,A.to,false,B,D).values);
}return F;
}else{this._buildRangeIndex();
var F=new Exhibit.Set();
for(var C=0;
C<this._ranges.length;
C++){var A=this._ranges[C];
this._rangeIndex.getSubjectsInRange(A.from,A.to,false,F,B);
}return F;
}}};
Exhibit.NumericRangeFacet.prototype.update=function(A){this._dom.valuesContainer.style.display="none";
this._dom.valuesContainer.innerHTML="";
this._reconstruct(A);
this._dom.valuesContainer.style.display="block";
};
Exhibit.NumericRangeFacet.prototype._reconstruct=function(L){var M=this;
var E=[];
var K;
var C;
if(this._expression.isPath()){var J=this._uiContext.getDatabase();
var N=this._expression.getPath();
var S=N.getLastSegment().property;
var D=J.getProperty(S);
if(D==null){return null;
}K=D.getRangeIndex();
countItems=function(T){return N.rangeBackward(T.from,T.to,false,L,J).values.size();
};
}else{this._buildRangeIndex();
K=this._rangeIndex;
countItems=function(T){return K.getSubjectsInRange(T.from,T.to,false,null,L).size();
};
}var P=K.getMin();
var R=K.getMax();
P=Math.floor(P/this._settings.interval)*this._settings.interval;
R=Math.ceil((R+this._settings.interval)/this._settings.interval)*this._settings.interval;
for(var G=P;
G<R;
G+=this._settings.interval){var I={from:G,to:G+this._settings.interval,selected:false};
I.count=countItems(I);
for(var Q=0;
Q<this._ranges.length;
Q++){var A=this._ranges[Q];
if(A.from==I.from&&A.to==I.to){I.selected=true;
B=true;
break;
}}E.push(I);
}var B=this._ranges.length>0;
var F=this._dom.valuesContainer;
F.style.display="none";
var H=Exhibit.FacetUtilities[this._settings.scroll?"constructFacetItem":"constructFlowingFacetItem"];
var O=function(Z,Y,X,W){var T=function(b,a,c){M._toggleRange(Z,Y,W,false);
SimileAjax.DOM.cancelEvent(a);
return false;
};
var V=function(b,a,c){M._toggleRange(Z,Y,W,!(a.ctrlKey||a.metaKey));
SimileAjax.DOM.cancelEvent(a);
return false;
};
var U=H(Z+" - "+Y,X,null,W,B,T,V,M._uiContext);
F.appendChild(U);
};
for(var Q=0;
Q<E.length;
Q++){var I=E[Q];
if(I.selected||I.count>0){O(I.from,I.to,I.count,I.selected);
}}F.style.display="block";
this._dom.setSelectionCount(this._ranges.length);
};
Exhibit.NumericRangeFacet.prototype._notifyCollection=function(){this._uiContext.getCollection().onFacetUpdated(this);
};
Exhibit.NumericRangeFacet.prototype._initializeUI=function(){var A=this;
this._dom=Exhibit.FacetUtilities[this._settings.scroll?"constructFacetFrame":"constructFlowingFacetFrame"](this._div,this._settings.facetLabel,function(C,B,D){A._clearSelections();
},this._uiContext,this._settings.collapsible,this._settings.collapsed);
if("height" in this._settings){this._dom.valuesContainer.style.height=this._settings.height;
}};
Exhibit.NumericRangeFacet.prototype._toggleRange=function(G,F,A,I){var H=this;
var E=G+" to "+F;
var B=(this._ranges.length==1&&A);
if(I&&!B){var C=[{from:G,to:F}];
var D=[].concat(this._ranges);
SimileAjax.History.addLengthyAction(function(){H.applyRestrictions(C);
},function(){H.applyRestrictions(D);
},String.substitute(Exhibit.FacetUtilities.l10n["facetSelectOnlyActionTitle"],[E,this._settings.facetLabel]));
}else{SimileAjax.History.addLengthyAction(function(){H.setRange(G,F,!A);
},function(){H.setRange(G,F,A);
},String.substitute(Exhibit.FacetUtilities.l10n[A?"facetUnselectActionTitle":"facetSelectActionTitle"],[E,this._settings.facetLabel]));
}};
Exhibit.NumericRangeFacet.prototype._clearSelections=function(){var B={};
var A=this;
SimileAjax.History.addLengthyAction(function(){B.restrictions=A.clearAllRestrictions();
},function(){A.applyRestrictions(B.restrictions);
},String.substitute(Exhibit.FacetUtilities.l10n["facetClearSelectionsActionTitle"],[this._settings.facetLabel]));
};
Exhibit.NumericRangeFacet.prototype._buildRangeIndex=function(){if(!("_rangeIndex" in this)){var C=this._expression;
var B=this._uiContext.getDatabase();
var A=function(D,E){C.evaluateOnItem(D,B).values.visit(function(F){if(typeof F!="number"){F=parseFloat(F);
}if(!isNaN(F)){E(F);
}});
};
this._rangeIndex=new Exhibit.Database._RangeIndex(this._uiContext.getCollection().getAllItems(),A);
}};


/* slider-facet.js */
Exhibit.SliderFacet=function(B,A){this._div=B;
this._uiContext=A;
this._expression=null;
this._settings={};
this._selection={min:null,max:null};
this._range={min:null,max:null};
this._maxRange={min:null,max:null};
};
Exhibit.SliderFacet._settingsSpecs={"facetLabel":{type:"text"},"scroll":{type:"boolean",defaultValue:true},"height":{type:"text"},"precision":{type:"float",defaultValue:1},"histogram":{type:"boolean",defaultValue:true},"height":{type:"int",defaultValue:false},"width":{type:"int",defaultValue:false},"horizontal":{type:"boolean",defaultValue:true},"inputText":{type:"boolean",defaultValue:true}};
Exhibit.SliderFacet.create=function(D,B,A){var A=Exhibit.UIContext.create(D,A);
var C=new Exhibit.SliderFacet(B,A);
Exhibit.SliderFacet._configure(C,D);
C._initializeUI();
A.getCollection().addFacet(C);
return C;
};
Exhibit.SliderFacet.createFromDOM=function(E,D,B){var G=Exhibit.getConfigurationFromDOM(E);
var B=Exhibit.UIContext.createFromDOM(E,B);
var F=new Exhibit.SliderFacet(D!=null?D:E,B);
Exhibit.SettingsUtilities.collectSettingsFromDOM(E,Exhibit.SliderFacet._settingsSpecs,F._settings);
try{var A=Exhibit.getAttribute(E,"expression");
if(A!=null&&A.length>0){F._expression=Exhibit.ExpressionParser.parse(A);
}}catch(C){SimileAjax.Debug.exception(C,"SliderFacet: Error processing configuration of slider facet");
}Exhibit.SliderFacet._configure(F,G);
F._initializeUI();
B.getCollection().addFacet(F);
return F;
};
Exhibit.SliderFacet._configure=function(E,D){Exhibit.SettingsUtilities.collectSettings(D,Exhibit.SliderFacet._settingsSpecs,E._settings);
if("expression" in D){E._expression=Exhibit.ExpressionParser.parse(D.expression);
}if("selection" in D){var B=D.selection;
E._selection={min:B[0],max:B[1]};
}if(!("facetLabel" in E._settings)){E._settings.facetLabel="missing ex:facetLabel";
if(E._expression!=null&&E._expression.isPath()){var C=E._expression.getPath().getLastSegment();
var A=E._uiContext.getDatabase().getProperty(C.property);
if(A!=null){E._settings.facetLabel=C.forward?A.getLabel():A.getReverseLabel();
}}}E._maxRange=E._getMaxRange();
};
Exhibit.SliderFacet.prototype._initializeUI=function(){this._dom=SimileAjax.DOM.createDOMFromString(this._div,"<div class='exhibit-facet-header'><span class='exhibit-facet-header-title'>"+this._settings.facetLabel+"</span></div><div class='exhibit-slider' id='slider'></div>");
this._slider=new Exhibit.SliderFacet.slider(this._dom.slider,this,this._settings.precision,this._settings.horizontal);
};
Exhibit.SliderFacet.prototype.hasRestrictions=function(){return(this._range.min&&this._range.min!=this._maxRange.min)||(this._range.max&&this._range.max!=this._maxRange.max);
};
Exhibit.SliderFacet.prototype.update=function(B){if(this._settings.histogram){var E=[];
var G=75;
var A=(this._maxRange.max-this._maxRange.min)/G;
var D=this._uiContext.getDatabase();
var F=this._expression.getPath();
for(var C=0;
C<G;
C++){E[C]=F.rangeBackward(this._maxRange.min+C*A,this._maxRange.min+(C+1)*A,false,B,D).values.size();
}this._slider.updateHistogram(E);
}};
Exhibit.SliderFacet.prototype.restrict=function(A){if(!this.hasRestrictions()){return A;
}var C=this._expression.getPath();
var B=this._uiContext.getDatabase();
return C.rangeBackward(this._range.min,this._range.max,false,A,B).values;
};
Exhibit.SliderFacet.prototype._getMaxRange=function(){var D=this._expression.getPath();
var C=this._uiContext.getDatabase();
var E=D.getLastSegment().property;
var A=C.getProperty(E);
var B=A.getRangeIndex();
return{min:B.getMin(),max:B.getMax()};
};
Exhibit.SliderFacet.prototype.changeRange=function(A){this._range=A;
this._notifyCollection();
};
Exhibit.SliderFacet.prototype._notifyCollection=function(){this._uiContext.getCollection().onFacetUpdated(this);
};
Exhibit.SliderFacet.prototype.clearAllRestrictions=function(){this._slider.resetSliders();
this._range=this._maxRange;
};
Exhibit.SliderFacet.prototype.dispose=function(){this._uiContext.getCollection().removeFacet(this);
this._uiContext=null;
this._colorCoder=null;
this._div.innerHTML="";
this._div=null;
this._dom=null;
this._expression=null;
this._settings=null;
this._selection=null;
this._range=null;
this._maxRange=null;
};


/* slider.js */
Exhibit.SliderFacet.slider=function(E,D,B){this._div=E;
this._facet=D;
this._prec=B||0.1;
this._maxRange={min:parseFloat(Exhibit.Util.round(D._maxRange.min-B/2,this._prec)),max:parseFloat(Exhibit.Util.round(D._maxRange.max+B/2,this._prec))};
this._horizontal=this._facet._settings.horizontal;
this._scaleFactor=null;
this._slider1={};
this._slider2={};
this._dom=SimileAjax.DOM.createDOMFromString(E,'<div class="exhibit-slider-bar" id="bar"><div id="slider1"></div><div id="slider2"></div>'+(this._facet._settings.histogram?'<div class="exhibit-slider-histogram" id="histogram"></div>':"")+'</div><div class="exhibit-slider-display">'+(this._facet._settings.inputText?'<input type="text" id="minDisplay"></input> - <input type="text" id="maxDisplay"></input> ':'<span id="minDisplay"></span> - <span id="maxDisplay"></span>')+"</div>");
var A=this._horizontal;
var C=this._dom.histogram;
if(A&&C){this._dom.bar.style.height="14px";
this._dom.bar.style.width="150px";
}else{if(A&&!C){this._dom.bar.style.height="1px";
this._dom.bar.style.width="150px";
}else{if(!A&&C){this._dom.bar.style.height="150px";
this._dom.bar.style.width="14px";
}else{this._dom.bar.style.height="150px";
this._dom.bar.style.width="1px";
}}}if(this._facet._settings.height){this._dom.bar.style.height=this._facet._settings.height+"px";
}if(this._facet._settings.width){this._dom.bar.style.width=this._facet._settings.width+"px";
}if(C){this._dom.histogram.style.height=this._dom.bar.offsetHeight;
this._dom.histogram.style.width=this._dom.bar.offsetWidth;
}if(A){this._scaleFactor=(this._maxRange.max-this._maxRange.min)/this._dom.bar.offsetWidth;
}else{this._scaleFactor=(this._maxRange.max-this._maxRange.min)/this._dom.bar.offsetHeight;
}this._slider1=new Exhibit.SliderFacet.slider.slider(this._dom.slider1,this);
this._slider2=new Exhibit.SliderFacet.slider.slider(this._dom.slider2,this);
this._setSlider(this._slider1,this._maxRange.min);
this._setSlider(this._slider2,this._maxRange.max);
this._registerDragging();
if(this._facet._settings.inputText){this._registerInputs();
}};
Exhibit.SliderFacet.slider.prototype.resetSliders=function(){this._setSlider(this._slider1,this._maxRange.min);
this._setSlider(this._slider2,this._maxRange.max);
};
Exhibit.SliderFacet.slider.prototype._setSlider=function(A,B){if(B>this._maxRange.max){B=this._maxRange.max;
}else{if(B<this._maxRange.min){B=this._maxRange.min;
}}B=parseFloat(Exhibit.Util.round(B,this._prec));
A.value=B;
if(this._horizontal){A.div.style.left=(B/this._scaleFactor-A.offset)+"px";
}else{A.div.style.top=(B/this._scaleFactor-A.offset)+"px";
}this._setDisplays(A);
};
Exhibit.SliderFacet.slider.prototype._setMin=function(C){var B=this._slider1.value<this._slider2.value?this._slider1:this._slider2;
var A=(B==this._slider1)?this._slider2:this._slider1;
C=parseFloat(C);
if(isNaN(C)){return ;
}if(C>A.value){C=A.value;
}this._setSlider(B,C);
};
Exhibit.SliderFacet.slider.prototype._setMax=function(C){var B=this._slider1.value>this._slider2.value?this._slider1:this._slider2;
var A=(B==this._slider1)?this._slider2:this._slider1;
C=parseFloat(C);
if(isNaN(C)){return ;
}if(C<A.value){C=A.value;
}this._setSlider(B,C);
};
Exhibit.SliderFacet.slider.prototype._setDisplays=function(C){var B=(C==this._slider1)?this._slider2:this._slider1;
var D=Math.min(C.value,B.value);
var A=Math.max(C.value,B.value);
if(this._facet._settings.inputText){this._dom.minDisplay.value=D;
this._dom.maxDisplay.value=A;
}else{this._dom.minDisplay.innerHTML=D;
this._dom.maxDisplay.innerHTML=A;
}};
Exhibit.SliderFacet.slider.slider=function(C,B){var A=B._dom.bar;
this.div=C;
if(B._horizontal){this.div.className="exhibit-slider-handle";
this.div.style.backgroundImage='url("'+Exhibit.urlPrefix+'images/slider-handle.png")';
this.offset=this.div.offsetWidth/2;
this.min=-this.offset;
this.max=A.offsetWidth-this.offset;
}else{this.div.className="exhibit-slider-handle2";
this.div.style.backgroundImage='url("'+Exhibit.urlPrefix+'images/slider-handle2.png")';
this.offset=this.div.offsetHeight/2;
this.min=-this.offset;
this.max=A.offsetHeight-this.offset;
}if(B._facet._settings.histogram){this.div.style.top=(A.offsetHeight-4)+"px";
}};
Exhibit.SliderFacet.slider.prototype._registerDragging=function(){var B=this;
var D=function(G){return function(I){I=I||window.event;
var H=B._horizontal?A(I,G):C(I,G);
if(document.attachEvent){document.attachEvent("onmousemove",H);
document.attachEvent("onmouseup",F(G,H));
}else{document.addEventListener("mousemove",H,false);
document.addEventListener("mouseup",F(G,H),false);
}SimileAjax.DOM.cancelEvent(I);
return false;
};
};
var A=function(K,H){var L=K.screenX;
var J=parseInt(H.div.style.left);
var I=H.min;
var G=H.max;
return function(O){O=O||window.event;
var M=O.screenX-L;
var N=J+M;
if(N<I){N=I;
}if(N>G){N=G;
}H.div.style.left=N+"px";
setTimeout(function(){var P=parseInt(H.div.style.left)+H.offset;
H.value=parseFloat(Exhibit.Util.round(P*B._scaleFactor+B._maxRange.min,B._prec));
B._setDisplays(H);
},0);
};
};
var C=function(K,H){var L=K.screenY;
var J=parseInt(H.div.style.top);
var I=H.min;
var G=H.max;
return function(O){O=O||window.event;
var M=O.screenY-L;
var N=J+M;
if(N<I){N=I;
}if(N>G){N=G;
}H.div.style.top=N+"px";
setTimeout(function(){var P=parseInt(H.div.style.top)+H.offset;
H.value=parseFloat(Exhibit.Util.round(P*B._scaleFactor+B._maxRange.min,B._prec));
B._setDisplays(H);
},0);
};
};
var F=function(G,H){return function(I){if(document.detachEvent){document.detachEvent("onmousemove",H);
document.detachEvent("onmouseup",arguments.callee);
}else{document.removeEventListener("mousemove",H,false);
document.removeEventListener("mouseup",arguments.callee,false);
}B._notifyFacet();
};
};
var E=function(G){if(document.attachEvent){G.div.attachEvent("onmousedown",D(G));
}else{G.div.addEventListener("mousedown",D(G),false);
}};
E(this._slider1);
E(this._slider2);
};
Exhibit.SliderFacet.slider.prototype._notifyFacet=function(){var B=this._slider1.value;
var A=this._slider2.value;
this._facet.changeRange({min:Math.min(B,A),max:Math.max(B,A)});
};
Exhibit.SliderFacet.slider.prototype.updateHistogram=function(D){var B=D.length;
var I=this._dom.histogram;
var G=Math.max.apply(Math,D);
if(!G){return ;
}if(this._horizontal){var A=I.offsetWidth/B;
var J=I.offsetHeight;
var F=J/G;
I.innerHTML="";
for(var C=0;
C<B;
C++){var H=Math.round(D[C]*F);
var E=document.createElement("div");
I.appendChild(E);
E.style.width=A+"px";
E.style.height=H+"px";
E.style.display=H?"":"none";
E.style.position="absolute";
E.style.top=(J-H)+"px";
E.style.left=C*A+"px";
}}else{var A=I.offsetHeight/B;
var J=I.offsetWidth;
var F=J/G;
I.innerHTML="";
for(var C=0;
C<B;
C++){var H=Math.round(D[C]*F);
var E=document.createElement("div");
E.style.height=A;
E.style.width=H;
E.style.position="absolute";
E.style.left=0;
E.style.top=C*A;
I.appendChild(E);
}}};
Exhibit.SliderFacet.slider.prototype._registerInputs=function(){var A=this;
if(document.attachEvent){this._dom.minDisplay.attachEvent("onchange",function(B){A._setMin(this.value);
A._notifyFacet();
});
this._dom.maxDisplay.attachEvent("onchange",function(B){A._setMax(this.value);
A._notifyFacet();
});
}else{this._dom.minDisplay.addEventListener("change",function(B){A._setMin(this.value);
A._notifyFacet();
},false);
this._dom.maxDisplay.addEventListener("change",function(B){A._setMax(this.value);
A._notifyFacet();
},false);
}};


/* text-search-facet.js */
Exhibit.TextSearchFacet=function(C,B){this._div=C;
this._uiContext=B;
this._expressions=[];
this._text=null;
this._settings={};
this._dom=null;
this._timerID=null;
var A=this;
this._listener={onRootItemsChanged:function(){if("_itemToValue" in A){delete A._itemToValue;
}}};
B.getCollection().addListener(this._listener);
};
Exhibit.TextSearchFacet._settingSpecs={"facetLabel":{type:"text"},"queryParamName":{type:"text"},"requiresEnter":{type:"boolean",defaultValue:false}};
Exhibit.TextSearchFacet.create=function(D,B,A){var A=Exhibit.UIContext.create(D,A);
var C=new Exhibit.TextSearchFacet(B,A);
Exhibit.TextSearchFacet._configure(C,D);
C._initializeUI();
A.getCollection().addFacet(C);
return C;
};
Exhibit.TextSearchFacet.createFromDOM=function(F,E,B){var H=Exhibit.getConfigurationFromDOM(F);
var B=Exhibit.UIContext.createFromDOM(F,B);
var G=new Exhibit.TextSearchFacet(E!=null?E:F,B);
Exhibit.SettingsUtilities.collectSettingsFromDOM(F,Exhibit.TextSearchFacet._settingSpecs,G._settings);
try{var A=Exhibit.getAttribute(F,"expressions");
if(A!=null&&A.length>0){G._expressions=Exhibit.ExpressionParser.parseSeveral(A);
}var C=Exhibit.getAttribute(F,"query");
if(C!=null&&C.length>0){G._text=C;
}}catch(D){SimileAjax.Debug.exception(D,"TextSearchFacet: Error processing configuration of list facet");
}Exhibit.TextSearchFacet._configure(G,H);
G._initializeUI();
B.getCollection().addFacet(G);
return G;
};
Exhibit.TextSearchFacet._configure=function(E,D){Exhibit.SettingsUtilities.collectSettings(D,Exhibit.TextSearchFacet._settingSpecs,E._settings);
if("expressions" in D){for(var B=0;
B<D.expressions.length;
B++){E._expressions.push(Exhibit.ExpressionParser.parse(D.expressions[B]));
}}if("selection" in D){var A=D.selection;
for(var B=0;
B<A.length;
B++){E._valueSet.add(A[B]);
}}if("query" in D){E._text=D.query;
}if("queryParamName" in E._settings){var C=SimileAjax.parseURLParameters();
if(E._settings["queryParamName"] in C){E._text=C[E._settings["queryParamName"]];
}}if(!("facetLabel" in E._settings)){E._settings.facetLabel="";
}};
Exhibit.TextSearchFacet.prototype.dispose=function(){this._uiContext.getCollection().removeFacet(this);
this._uiContext.getCollection().removeListener(this._listener);
this._uiContext=null;
this._div.innerHTML="";
this._div=null;
this._dom=null;
this._expressions=null;
this._itemToValue=null;
this._settings=null;
};
Exhibit.TextSearchFacet.prototype.hasRestrictions=function(){return this._text!=null;
};
Exhibit.TextSearchFacet.prototype.clearAllRestrictions=function(){var A=this._text;
if(this._text!=null){this._text=null;
this._notifyCollection();
}this._dom.input.value="";
return A;
};
Exhibit.TextSearchFacet.prototype.applyRestrictions=function(A){this.setText(A);
};
Exhibit.TextSearchFacet.prototype.setText=function(A){if(A!=null){A=A.trim();
this._dom.input.value=A;
A=A.length>0?A:null;
}else{this._dom.input.value="";
}if(A!=this._text){this._text=A;
this._notifyCollection();
}};
Exhibit.TextSearchFacet.prototype.restrict=function(A){if(this._text==null){return A;
}else{this._buildMaps();
var D=new Exhibit.Set();
var B=this._itemToValue;
var C=this._text.toLowerCase();
A.visit(function(G){if(G in B){var F=B[G];
for(var E=0;
E<F.length;
E++){if(F[E].indexOf(C)>=0){D.add(G);
break;
}}}});
return D;
}};
Exhibit.TextSearchFacet.prototype.update=function(A){};
Exhibit.TextSearchFacet.prototype._notifyCollection=function(){this._uiContext.getCollection().onFacetUpdated(this);
};
Exhibit.TextSearchFacet.prototype._initializeUI=function(){var A=this;
this._dom=Exhibit.TextSearchFacet.constructFacetFrame(this._div,this._settings.facetLabel);
if(this._text!=null){this._dom.input.value=this._text;
}SimileAjax.WindowManager.registerEvent(this._dom.input,"keyup",function(C,B,D){A._onTextInputKeyUp(B);
});
};
Exhibit.TextSearchFacet.constructFacetFrame=function(B,A){if(A!==""&&A!==null){return SimileAjax.DOM.createDOMFromString(B,"<div class='exhibit-facet-header'><span class='exhibit-facet-header-title'>"+A+"</span></div><div class='exhibit-text-facet'><input type='text' id='input'></div>");
}else{return SimileAjax.DOM.createDOMFromString(B,"<div class='exhibit-text-facet'><input type='text' id='input'></div>");
}};
Exhibit.TextSearchFacet.prototype._onTextInputKeyUp=function(A){if(this._timerID!=null){window.clearTimeout(this._timerID);
}var B=this;
if(this._settings.requiresEnter==false){this._timerID=window.setTimeout(function(){B._onTimeout();
},500);
}else{var C=this._dom.input.value.trim();
if(C.length==0||A.keyCode==13){this._timerID=window.setTimeout(function(){B._onTimeout();
},0);
}}};
Exhibit.TextSearchFacet.prototype._onTimeout=function(){this._timerID=null;
var C=this._dom.input.value.trim();
if(C.length==0){C=null;
}if(C!=this._text){var A=this;
var B=this._text;
SimileAjax.History.addLengthyAction(function(){A.setText(C);
},function(){A.setText(B);
},C!=null?String.substitute(Exhibit.FacetUtilities.l10n["facetTextSearchActionTitle"],[C]):Exhibit.FacetUtilities.l10n["facetClearTextSearchActionTitle"]);
}};
Exhibit.TextSearchFacet.prototype._buildMaps=function(){if(!("_itemToValue" in this)){var A={};
var B=this._uiContext.getCollection().getAllItems();
var D=this._uiContext.getDatabase();
if(this._expressions.length>0){var C=this._expressions;
B.visit(function(H){var G=[];
for(var F=0;
F<C.length;
F++){var I=C[F];
I.evaluateOnItem(H,D).values.visit(function(J){G.push(J.toLowerCase());
});
}A[H]=G;
});
}else{var E=D.getAllProperties();
B.visit(function(G){var F=[];
for(var H=0;
H<E.length;
H++){D.getObjects(G,E[H]).visit(function(I){F.push(I.toLowerCase());
});
}A[G]=F;
});
}this._itemToValue=A;
}};


/* format-parser.js */
Exhibit.FormatParser=new Object();
Exhibit.FormatParser.parse=function(D,C,E,A){E=E||0;
A=A||{};
var B=new Exhibit.FormatScanner(C,E);
try{return Exhibit.FormatParser._internalParse(D,B,A,false);
}finally{A.index=B.token()!=null?B.token().start:B.index();
}};
Exhibit.FormatParser.parseSeveral=function(D,C,E,A){E=E||0;
A=A||{};
var B=new Exhibit.FormatScanner(C,E);
try{return Exhibit.FormatParser._internalParse(D,B,A,true);
}finally{A.index=B.token()!=null?B.token().start:B.index();
}};
Exhibit.FormatParser._valueTypes={"list":true,"number":true,"date":true,"item":true,"text":true,"url":true,"image":true,"currency":true};
Exhibit.FormatParser._internalParse=function(F,I,R,B){var S=Exhibit.FormatScanner;
var M=I.token();
var Q=function(){I.next();
M=I.token();
};
var L=function(){return M!=null?M.start:I.index();
};
var D=function(Z,X,Y){F.putSetting("format/"+Z+"/"+X,Y);
};
var J=function(Z,X,Y){if(M!=null&&M.type!=S.IDENTIFIER&&M.value in Y){D(Z,X,Y[M.value]);
Q();
return false;
}return true;
};
var E=function(Z,X,Y){if(J(Z,X,Y)){if(M==null||M.type!=S.NUMBER){throw new Error("Missing number at position "+L());
}D(Z,X,M.value);
Q();
}};
var T=function(Z,X,Y){if(J(Z,X,Y)){if(M==null||M.type!=S.NUMBER){throw new Error("Missing integer at position "+L());
}D(Z,X,Math.round(M.value));
Q();
}};
var V=function(Z,X,Y){if(J(Z,X,Y)){if(M==null||M.type!=S.NUMBER||M.value<0){throw new Error("Missing non-negative integer at position "+L());
}D(Z,X,Math.round(M.value));
Q();
}};
var H=function(Z,X,Y){if(J(Z,X,Y)){if(M==null||M.type!=S.STRING){throw new Error("Missing string at position "+L());
}D(Z,X,M.value);
Q();
}};
var O=function(Z,X,Y){if(J(Z,X,Y)){if(M==null||M.type!=S.URL){throw new Error("Missing url at position "+L());
}D(Z,X,M.value);
Q();
}};
var P=function(Z,X,Y){if(J(Z,X,Y)){if(M==null||M.type!=S.EXPRESSION){throw new Error("Missing expression at position "+L());
}D(Z,X,M.value);
Q();
}};
var K=function(Z,X,Y){if(J(Z,X,Y)){if(M==null||(M.type!=S.EXPRESSION&&M.type!=S.STRING)){throw new Error("Missing expression or string at position "+L());
}D(Z,X,M.value);
Q();
}};
var W=function(Z,X,a){if(M==null||M.type!=S.IDENTIFIER){throw new Error("Missing option at position "+L());
}for(var Y=0;
Y<a.length;
Y++){if(M.value==a[Y]){D(Z,X,M.value);
Q();
return ;
}}throw new Error("Unsupported option "+M.value+" for setting "+X+" on value type "+Z+" found at position "+L());
};
var G=function(b,Y,X,a){outer:while(M!=null&&M.type==S.IDENTIFIER){for(var Z=0;
Z<X.length;
Z++){if(M.value==X[Z]){D(b,Y+"/"+M.value,true);
Q();
continue outer;
}}if(M.value in a){D(b,Y+"/"+a[M.value],false);
Q();
continue outer;
}throw new Error("Unsupported flag "+M.value+" for setting "+Y+" on value type "+b+" found at position "+L());
}};
var U=function(Y,X){switch(Y){case"number":switch(X){case"decimal-digits":V(Y,X,{"default":-1});
return ;
}break;
case"date":switch(X){case"time-zone":E(Y,X,{"default":null});
return ;
case"show":W(Y,X,["date","time","date-time"]);
return ;
case"mode":W(Y,X,["short","medium","long","full"]);
D(Y,"template",null);
return ;
case"template":H(Y,X,{});
D(Y,"mode",null);
return ;
}break;
case"boolean":switch(X){}break;
case"text":switch(X){case"max-length":T(Y,X,{"none":0});
return ;
}break;
case"image":switch(X){case"tooltip":K(Y,X,{"none":null});
return ;
case"max-width":case"max-height":T(Y,X,{"none":-1});
return ;
}break;
case"url":switch(X){case"target":H(Y,X,{"none":null});
return ;
case"external-icon":O(Y,X,{"none":null});
return ;
}break;
case"item":switch(X){case"title":P(Y,X,{"default":null});
return ;
}break;
case"currency":switch(X){case"negative-format":G(Y,X,["red","parentheses","signed"],{"unsigned":"signed","no-parenthesis":"parentheses","black":"red"});
return ;
case"symbol":H(Y,X,{"default":"$","none":null});
return ;
case"symbol-placement":W(Y,X,["first","last","after-sign"]);
return ;
case"decimal-digits":V(Y,X,{"default":-1});
return ;
}break;
case"list":switch(X){case"separator":case"last-separator":case"pair-separator":case"empty-text":H(Y,X,{});
return ;
}break;
}throw new Error("Unsupported setting called "+X+" for value type "+Y+" found at position "+L());
};
var A=function(Y){while(M!=null&&M.type==S.IDENTIFIER){var X=M.value;
Q();
if(M==null||M.type!=S.DELIMITER||M.value!=":"){throw new Error("Missing : at position "+L());
}Q();
U(Y,X);
if(M==null||M.type!=S.DELIMITER||M.value!=";"){break;
}else{Q();
}}};
var C=function(){if(M==null||M.type!=S.IDENTIFIER){throw new Error("Missing value type at position "+L());
}var X=M.value;
if(!(X in Exhibit.FormatParser._valueTypes)){throw new Error("Unsupported value type "+X+" at position "+L());
}Q();
if(M!=null&&M.type==S.DELIMITER&&M.value=="{"){Q();
A(X);
if(M==null||M.type!=S.DELIMITER||M.value!="}"){throw new Error("Missing } at position "+L());
}Q();
}return X;
};
var N=function(){var X="text";
while(M!=null&&M.type==S.IDENTIFIER){X=C();
}return X;
};
if(B){return N();
}else{return C();
}};
Exhibit.FormatScanner=function(B,A){this._text=B+" ";
this._maxIndex=B.length;
this._index=A;
this.next();
};
Exhibit.FormatScanner.DELIMITER=0;
Exhibit.FormatScanner.NUMBER=1;
Exhibit.FormatScanner.STRING=2;
Exhibit.FormatScanner.IDENTIFIER=3;
Exhibit.FormatScanner.URL=4;
Exhibit.FormatScanner.EXPRESSION=5;
Exhibit.FormatScanner.COLOR=6;
Exhibit.FormatScanner.prototype.token=function(){return this._token;
};
Exhibit.FormatScanner.prototype.index=function(){return this._index;
};
Exhibit.FormatScanner.prototype.next=function(){this._token=null;
var J=this;
var E=function(L){while(L<J._maxIndex&&" \t\r\n".indexOf(J._text.charAt(L))>=0){L++;
}return L;
};
this._index=E(this._index);
if(this._index<this._maxIndex){var I=this._text.charAt(this._index);
var G=this._text.charAt(this._index+1);
if("{}(),:;".indexOf(I)>=0){this._token={type:Exhibit.FormatScanner.DELIMITER,value:I,start:this._index,end:this._index+1};
this._index++;
}else{if("\"'".indexOf(I)>=0){var H=this._index+1;
while(H<this._maxIndex){if(this._text.charAt(H)==I&&this._text.charAt(H-1)!="\\"){break;
}H++;
}if(H<this._maxIndex){this._token={type:Exhibit.FormatScanner.STRING,value:this._text.substring(this._index+1,H).replace(/\\'/g,"'").replace(/\\"/g,'"'),start:this._index,end:H+1};
this._index=H+1;
}else{throw new Error("Unterminated string starting at "+this._index);
}}else{if(I=="#"){var H=this._index+1;
while(H<this._maxIndex&&this._isHexDigit(this._text.charAt(H))){H++;
}this._token={type:Exhibit.FormatScanner.COLOR,value:this._text.substring(this._index,H),start:this._index,end:H};
this._index=H;
}else{if(this._isDigit(I)){var H=this._index;
while(H<this._maxIndex&&this._isDigit(this._text.charAt(H))){H++;
}if(H<this._maxIndex&&this._text.charAt(H)=="."){H++;
while(H<this._maxIndex&&this._isDigit(this._text.charAt(H))){H++;
}}this._token={type:Exhibit.FormatScanner.NUMBER,value:parseFloat(this._text.substring(this._index,H)),start:this._index,end:H};
this._index=H;
}else{var H=this._index;
while(H<this._maxIndex){var F=this._text.substr(H).search(/\W/);
if(F>0){H+=F;
}else{if("-".indexOf(this._text.charAt(H))>=0){H++;
}else{break;
}}}var B=this._text.substring(this._index,H);
while(true){if(B=="url"){var K=E(H);
if(this._text.charAt(K)=="("){var D=this._text.indexOf(")",K);
if(D>0){this._token={type:Exhibit.FormatScanner.URL,value:this._text.substring(K+1,D),start:this._index,end:D+1};
this._index=D+1;
break;
}else{throw new Error("Missing ) to close url at "+this._index);
}}}else{if(B=="expression"){var K=E(H);
if(this._text.charAt(K)=="("){var C={};
var A=Exhibit.ExpressionParser.parse(this._text,K+1,C);
var D=E(C.index);
if(this._text.charAt(D)==")"){this._token={type:Exhibit.FormatScanner.EXPRESSION,value:A,start:this._index,end:D+1};
this._index=D+1;
break;
}else{throw new Error("Missing ) to close expression at "+C.index);
}}}}this._token={type:Exhibit.FormatScanner.IDENTIFIER,value:B,start:this._index,end:H};
this._index=H;
break;
}}}}}}};
Exhibit.FormatScanner.prototype._isDigit=function(A){return"0123456789".indexOf(A)>=0;
};
Exhibit.FormatScanner.prototype._isHexDigit=function(A){return"0123456789abcdefABCDEF".indexOf(A)>=0;
};


/* formatter.js */
Exhibit.Formatter=new Object();
Exhibit.Formatter.createListDelimiter=function(F,C,B){var E=B.getSetting("format/list/separator");
var A=B.getSetting("format/list/last-separator");
var G=B.getSetting("format/list/pair-separator");
if(typeof E!="string"){E=Exhibit.Formatter.l10n.listSeparator;
}if(typeof A!="string"){A=Exhibit.Formatter.l10n.listLastSeparator;
}if(typeof G!="string"){G=Exhibit.Formatter.l10n.listPairSeparator;
}var D=function(){if(D.index>0&&D.index<C){if(C>2){F.appendChild(document.createTextNode((D.index==C-1)?A:E));
}else{F.appendChild(document.createTextNode(G));
}}D.index++;
};
D.index=0;
return D;
};
Exhibit.Formatter._lessThanRegex=/</g;
Exhibit.Formatter._greaterThanRegex=/>/g;
Exhibit.Formatter.encodeAngleBrackets=function(A){return A.replace(Exhibit.Formatter._lessThanRegex,"&lt;").replace(Exhibit.Formatter._greaterThanRegex,"&gt;");
};
Exhibit.Formatter._ListFormatter=function(A){this._uiContext=A;
this._separator=A.getSetting("format/list/separator");
this._lastSeparator=A.getSetting("format/list/last-separator");
this._pairSeparator=A.getSetting("format/list/pair-separator");
this._emptyText=A.getSetting("format/list/empty-text");
if(typeof this._separator!="string"){this._separator=Exhibit.Formatter.l10n.listSeparator;
}if(typeof this._lastSeparator!="string"){this._lastSeparator=Exhibit.Formatter.l10n.listLastSeparator;
}if(typeof this._pairSeparator!="string"){this._pairSeparator=Exhibit.Formatter.l10n.listPairSeparator;
}};
Exhibit.Formatter._ListFormatter.prototype.formatList=function(E,F,G,A){var D=this._uiContext;
var B=this;
if(F==0){if(this._emptyText!=null&&this._emptyText.length>0){A(document.createTextNode(this._emptyText));
}}else{if(F==1){E.visit(function(H){D.format(H,G,A);
});
}else{var C=0;
if(F==2){E.visit(function(H){D.format(H,G,A);
C++;
if(C==1){A(document.createTextNode(B._pairSeparator));
}});
}else{E.visit(function(H){D.format(H,G,A);
C++;
if(C<F){A(document.createTextNode((C==F-1)?B._lastSeparator:B._separator));
}});
}}}};
Exhibit.Formatter._TextFormatter=function(A){this._maxLength=A.getSetting("format/text/max-length");
if(typeof this._maxLength=="number"){this._maxLength=Math.max(3,Math.round(this._maxLength));
}else{this._maxLength=0;
}};
Exhibit.Formatter._TextFormatter.prototype.format=function(C,A){var B=document.createElement("span");
B.innerHTML=this.formatText(C);
A(B);
};
Exhibit.Formatter._TextFormatter.prototype.formatText=function(A){if(Exhibit.params.safe){A=Exhibit.Formatter.encodeAngleBrackets(A);
}if(this._maxLength==0||A.length<=this._maxLength){return A;
}else{return A.substr(0,this._maxLength)+Exhibit.Formatter.l10n.textEllipsis;
}};
Exhibit.Formatter._BooleanFormatter=function(A){};
Exhibit.Formatter._BooleanFormatter.prototype.format=function(C,A){var B=document.createElement("span");
B.innerHTML=this.formatText(C);
A(B);
};
Exhibit.Formatter._BooleanFormatter.prototype.formatText=function(A){return(typeof A=="boolean"?A:(typeof A=="string"?(A=="true"):false))?Exhibit.Formatter.l10n.booleanTrue:Exhibit.Formatter.l10n.booleanFalse;
};
Exhibit.Formatter._NumberFormatter=function(A){this._decimalDigits=A.getSetting("format/number/decimal-digits");
if(typeof this._decimalDigits=="number"){this._decimalDigits=Math.max(-1,Math.round(this._decimalDigits));
}else{this._decimalDigits=-1;
}};
Exhibit.Formatter._NumberFormatter.prototype.format=function(B,A){A(document.createTextNode(this.formatText(B)));
};
Exhibit.Formatter._NumberFormatter.prototype.formatText=function(A){if(this._decimalDigits==-1){return A.toString();
}else{return new Number(A).toFixed(this._decimalDigits);
}};
Exhibit.Formatter._ImageFormatter=function(A){this._uiContext=A;
this._maxWidth=A.getSetting("format/image/max-width");
if(typeof this._maxWidth=="number"){this._maxWidth=Math.max(-1,Math.round(this._maxWidth));
}else{this._maxWidth=-1;
}this._maxHeight=A.getSetting("format/image/max-height");
if(typeof this._maxHeight=="number"){this._maxHeight=Math.max(-1,Math.round(this._maxHeight));
}else{this._maxHeight=-1;
}this._tooltip=A.getSetting("format/image/tooltip");
};
Exhibit.Formatter._ImageFormatter.prototype.format=function(C,A){if(Exhibit.params.safe){C=C.trim().startsWith("javascript:")?"":C;
}var B=document.createElement("img");
B.src=C;
if(this._tooltip!=null){if(typeof this._tooltip=="string"){B.title=this._tootlip;
}else{B.title=this._tooltip.evaluateSingleOnItem(this._uiContext.getSetting("itemID"),this._uiContext.getDatabase()).value;
}}A(B);
};
Exhibit.Formatter._ImageFormatter.prototype.formatText=function(A){return A;
};
Exhibit.Formatter._URLFormatter=function(A){this._target=A.getSetting("format/url/target");
this._externalIcon=A.getSetting("format/url/external-icon");
};
Exhibit.Formatter._URLFormatter.prototype.format=function(C,B){var A=document.createElement("a");
A.href=C;
A.innerHTML=C;
if(this._target!=null){A.target=this._target;
}if(this._externalIcon!=null){}B(A);
};
Exhibit.Formatter._URLFormatter.prototype.formatText=function(A){if(Exhibit.params.safe){A=A.trim().startsWith("javascript:")?"":A;
}return A;
};
Exhibit.Formatter._CurrencyFormatter=function(A){this._decimalDigits=A.getSetting("format/currency/decimal-digits");
if(typeof this._decimalDigits=="number"){this._decimalDigits=Math.max(-1,Math.round(this._decimalDigits));
}else{this._decimalDigits=2;
}this._symbol=A.getSetting("format/currency/symbol");
if(this._symbol==null){this._symbol=Exhibit.Formatter.l10n.currencySymbol;
}this._symbolPlacement=A.getSetting("format/currency/symbol-placement");
if(this._symbolPlacement==null){this._symbol=Exhibit.Formatter.l10n.currencySymbolPlacement;
}this._negativeFormat={signed:A.getBooleanSetting("format/currency/negative-format/signed",Exhibit.Formatter.l10n.currencyShowSign),red:A.getBooleanSetting("format/currency/negative-format/red",Exhibit.Formatter.l10n.currencyShowRed),parentheses:A.getBooleanSetting("format/currency/negative-format/parentheses",Exhibit.Formatter.l10n.currencyShowParentheses)};
};
Exhibit.Formatter._CurrencyFormatter.prototype.format=function(C,A){var D=this.formatText(C);
if(C<0&&this._negativeFormat.red){var B=document.createElement("span");
B.innerHTML=D;
B.style.color="red";
A(B);
}else{A(document.createTextNode(D));
}};
Exhibit.Formatter._CurrencyFormatter.prototype.formatText=function(C){var B=C<0;
var D;
if(this._decimalDigits==-1){D=Math.abs(C);
}else{D=new Number(Math.abs(C)).toFixed(this._decimalDigits);
}var A=(B&&this._negativeFormat.signed)?"-":"";
if(B&&this._negativeFormat.parentheses){D="("+D+")";
}switch(this._negativeFormat){case"first":D=this._symbol+A+D;
break;
case"after-sign":D=A+this._symbol+D;
break;
case"last":D=A+D+this._symbol;
break;
}return D;
};
Exhibit.Formatter._ItemFormatter=function(A){this._uiContext=A;
this._title=A.getSetting("format/item/title");
};
Exhibit.Formatter._ItemFormatter.prototype.format=function(E,B){var C=this;
var F=this.formatText(E);
var A=SimileAjax.DOM.createElementFromString('<a href="'+Exhibit.Persistence.getItemLink(E)+"\" class='exhibit-item'>"+F+"</a>");
var D=function(H,G,I){Exhibit.UI.showItemInPopup(E,H,C._uiContext);
};
SimileAjax.WindowManager.registerEvent(A,"click",D,this._uiContext.getSetting("layer"));
B(A);
};
Exhibit.Formatter._ItemFormatter.prototype.formatText=function(B){var A=this._uiContext.getDatabase();
var C=null;
if(this._title==null){C=A.getObject(B,"label");
}else{C=this._title.evaluateSingleOnItem(B,A).value;
}if(C==null){C=B;
}return C;
};
Exhibit.Formatter._DateFormatter=function(B){this._timeZone=B.getSetting("format/date/time-zone");
if(!(typeof this._timeZone=="number")){this._timeZone=-(new Date().getTimezoneOffset())/60;
}this._timeZoneOffset=this._timeZone*3600000;
var D=B.getSetting("format/date/mode");
var I=B.getSetting("format/date/show");
var J=null;
switch(D){case"short":J=I=="date"?Exhibit.Formatter.l10n.dateShortFormat:(I=="time"?Exhibit.Formatter.l10n.timeShortFormat:Exhibit.Formatter.l10n.dateTimeShortFormat);
break;
case"medium":J=I=="date"?Exhibit.Formatter.l10n.dateMediumFormat:(I=="time"?Exhibit.Formatter.l10n.timeMediumFormat:Exhibit.Formatter.l10n.dateTimeMediumFormat);
break;
case"long":J=I=="date"?Exhibit.Formatter.l10n.dateLongFormat:(I=="time"?Exhibit.Formatter.l10n.timeLongFormat:Exhibit.Formatter.l10n.dateTimeLongFormat);
break;
case"full":J=I=="date"?Exhibit.Formatter.l10n.dateFullFormat:(I=="time"?Exhibit.Formatter.l10n.timeFullFormat:Exhibit.Formatter.l10n.dateTimeFullFormat);
break;
default:J=B.getSetting("format/date/template");
}if(typeof J!="string"){J=Exhibit.Formatter.l10n.dateTimeDefaultFormat;
}var C=[];
var G=J.match(/\b\w+\b/g);
var K=0;
for(var A=0;
A<G.length;
A++){var H=G[A];
var F=J.indexOf(H,K);
if(F>K){C.push(J.substring(K,F));
}var E=Exhibit.Formatter._DateFormatter._retrievers[H];
if(typeof E=="function"){C.push(E);
}else{C.push(H);
}K=F+H.length;
}if(K<J.length){C.push(J.substr(K));
}this._segments=C;
};
Exhibit.Formatter._DateFormatter.prototype.format=function(B,A){A(document.createTextNode(this.formatText(B)));
};
Exhibit.Formatter._DateFormatter.prototype.formatText=function(E){var B=(E instanceof Date)?E:SimileAjax.DateTime.parseIso8601DateTime(E);
if(B==null){return E;
}B.setTime(B.getTime()+this._timeZoneOffset);
var F="";
var A=this._segments;
for(var C=0;
C<A.length;
C++){var D=A[C];
if(typeof D=="string"){F+=D;
}else{F+=D(B);
}}return F;
};
Exhibit.Formatter._DateFormatter._pad=function(A){return A<10?("0"+A):A.toString();
};
Exhibit.Formatter._DateFormatter._pad3=function(A){return A<10?("00"+A):(A<100?("0"+A):A.toString());
};
Exhibit.Formatter._DateFormatter._retrievers={"d":function(A){return A.getUTCDate().toString();
},"dd":function(A){return Exhibit.Formatter._DateFormatter._pad(A.getUTCDate());
},"EEE":function(A){return Exhibit.Formatter.l10n.shortDaysOfWeek[A.getUTCDay()];
},"EEEE":function(A){return Exhibit.Formatter.l10n.daysOfWeek[A.getUTCDay()];
},"MM":function(A){return Exhibit.Formatter._DateFormatter._pad(A.getUTCMonth()+1);
},"MMM":function(A){return Exhibit.Formatter.l10n.shortMonths[A.getUTCMonth()];
},"MMMM":function(A){return Exhibit.Formatter.l10n.months[A.getUTCMonth()];
},"yy":function(A){return Exhibit.Formatter._DateFormatter._pad(A.getUTCFullYear()%100);
},"yyyy":function(A){var B=A.getUTCFullYear();
return B>0?B.toString():(1-B);
},"G":function(A){var B=A.getUTCYear();
return B>0?Exhibit.Formatter.l10n.commonEra:Exhibit.Formatter.l10n.beforeCommonEra;
},"HH":function(A){return Exhibit.Formatter._DateFormatter._pad(A.getUTCHours());
},"hh":function(A){var B=A.getUTCHours();
return Exhibit.Formatter._DateFormatter._pad(B==0?12:(B>12?B-12:B));
},"h":function(A){var B=A.getUTCHours();
return(B==0?12:(B>12?B-12:B)).toString();
},"a":function(A){return A.getUTCHours()<12?Exhibit.Formatter.l10n.beforeNoon:Exhibit.Formatter.l10n.afterNoon;
},"A":function(A){return A.getUTCHours()<12?Exhibit.Formatter.l10n.BeforeNoon:Exhibit.Formatter.l10n.AfterNoon;
},"mm":function(A){return Exhibit.Formatter._DateFormatter._pad(A.getUTCMinutes());
},"ss":function(A){return Exhibit.Formatter._DateFormatter._pad(A.getUTCSeconds());
},"S":function(A){return Exhibit.Formatter._DateFormatter._pad3(A.getUTCMilliseconds());
}};
Exhibit.Formatter._constructors={"number":Exhibit.Formatter._NumberFormatter,"date":Exhibit.Formatter._DateFormatter,"text":Exhibit.Formatter._TextFormatter,"boolean":Exhibit.Formatter._BooleanFormatter,"image":Exhibit.Formatter._ImageFormatter,"url":Exhibit.Formatter._URLFormatter,"item":Exhibit.Formatter._ItemFormatter,"currency":Exhibit.Formatter._CurrencyFormatter};


/* lens.js */
Exhibit.LensRegistry=function(A){this._parentRegistry=A;
this._defaultLens=null;
this._typeToLens={};
this._lensSelectors=[];
};
Exhibit.LensRegistry.EditModeRegistry={};
Exhibit.LensRegistry.prototype.registerDefaultLens=function(A){this._defaultLens=(typeof A=="string")?A:A.cloneNode(true);
};
Exhibit.LensRegistry.prototype.registerLensForType=function(B,A){this._typeToLens[A]=(typeof B=="string")?B:B.cloneNode(true);
};
Exhibit.LensRegistry.prototype.addLensSelector=function(A){this._lensSelectors.unshift(A);
};
Exhibit.LensRegistry.prototype.getLens=function(E,D){for(var B=0;
B<this._lensSelectors.length;
B++){var A=this._lensSelectors[B](E,D);
if(A!=null){return A;
}}var C=D.getObject(E,"type");
if(C in this._typeToLens){return this._typeToLens[C];
}if(this._defaultLens!=null){return this._defaultLens;
}if(this._parentRegistry){return this._parentRegistry.getLens(E,D);
}return null;
};
Exhibit.LensRegistry.prototype.getEditLens=function(C,B){var A=B.getObject(C,"type")+"-editor";
if(A in this._typeToLens){return this._typeToLens[A];
}if(this._parentRegistry){return this._parentRegistry.getEditLens(C,B);
}return null;
};
Exhibit.LensRegistry.prototype.createLens=function(F,E,B){var A=new Exhibit.Lens();
var D=this.isBeingEdited(F);
var C=D?this.getEditLens(F,B.getDatabase()):this.getLens(F,B.getDatabase());
if(C==null){if(D){A._constructDefaultEditingUI(F,E,B);
}else{A._constructDefaultUI(F,E,B);
}}else{if(typeof C=="string"){A._constructFromLensTemplateURL(F,E,B,C);
}else{A._constructFromLensTemplateDOM(F,E,B,C);
}}return A;
};
Exhibit.LensRegistry.prototype.setEditMode=function(B,A){if(A){Exhibit.LensRegistry.EditModeRegistry[B]=true;
}else{delete Exhibit.LensRegistry.EditModeRegistry[B];
}};
Exhibit.LensRegistry.prototype.isBeingEdited=function(A){return Exhibit.LensRegistry.EditModeRegistry[A];
};
Exhibit.Lens=function(){};
Exhibit.Lens._commonProperties=null;
Exhibit.Lens.prototype._constructDefaultUI=function(K,B,E){var O=E.getDatabase();
if(Exhibit.Lens._commonProperties==null){Exhibit.Lens._commonProperties=O.getAllProperties();
}var A=Exhibit.Lens._commonProperties;
var M=O.getObject(K,"label");
M=M!=null?M:K;
if(Exhibit.params.safe){M=Exhibit.Formatter.encodeAngleBrackets(M);
}var N={elmt:B,className:"exhibit-lens",children:[{tag:"div",className:"exhibit-lens-title",title:M,children:[M+" (",{tag:"a",href:Exhibit.Persistence.getItemLink(K),target:"_blank",children:[Exhibit.l10n.itemLinkLabel]},")"]},{tag:"div",className:"exhibit-lens-body",children:[{tag:"table",className:"exhibit-lens-properties",field:"propertiesTable"}]}]};
var H=SimileAjax.DOM.createDOMFromTemplate(N);
B.setAttribute("ex:itemID",K);
var C=Exhibit.ViewPanel.getPropertyValuesPairs(K,A,O);
for(var G=0;
G<C.length;
G++){var F=C[G];
var L=H.propertiesTable.insertRow(G);
L.className="exhibit-lens-property";
var J=L.insertCell(0);
J.className="exhibit-lens-property-name";
J.innerHTML=F.propertyLabel+": ";
var I=L.insertCell(1);
I.className="exhibit-lens-property-values";
if(F.valueType=="item"){for(var D=0;
D<F.values.length;
D++){if(D>0){I.appendChild(document.createTextNode(", "));
}I.appendChild(Exhibit.UI.makeItemSpan(F.values[D],null,E));
}}else{for(var D=0;
D<F.values.length;
D++){if(D>0){I.appendChild(document.createTextNode(", "));
}I.appendChild(Exhibit.UI.makeValueSpan(F.values[D],F.valueType));
}}}};
Exhibit.Lens.prototype._constructDefaultEditingUI=function(C,B,A){};
Exhibit.Lens._compiledTemplates={};
Exhibit.Lens._handlers=["onblur","onfocus","onkeydown","onkeypress","onkeyup","onmousedown","onmouseenter","onmouseleave","onmousemove","onmouseout","onmouseover","onmouseup","onclick","onresize","onscroll"];
Exhibit.Lens.prototype._constructFromLensTemplateURL=function(F,E,A,D){var C={lens:this,itemID:F,div:E,uiContext:A};
var B=Exhibit.Lens._compiledTemplates[D];
if(B==null){Exhibit.Lens._startCompilingTemplate(D,C);
}else{if(!B.compiled){B.jobs.push(C);
}else{C.template=B;
Exhibit.Lens._performConstructFromLensTemplateJob(C);
}}};
Exhibit.Lens.prototype._constructFromLensTemplateDOM=function(G,F,B,A){var D={lens:this,itemID:G,div:F,uiContext:B};
var E=A.id;
if(E==null||E.length==0){E="exhibitLensTemplate"+Math.floor(Math.random()*10000);
A.id=E;
}var C=Exhibit.Lens._compiledTemplates[E];
if(C==null){C={url:E,template:Exhibit.Lens.compileTemplate(A,false,B),compiled:true,jobs:[]};
Exhibit.Lens._compiledTemplates[E]=C;
}D.template=C;
Exhibit.Lens._performConstructFromLensTemplateJob(D);
};
Exhibit.Lens._startCompilingTemplate=function(D,C){var B={url:D,template:null,compiled:false,jobs:[C]};
Exhibit.Lens._compiledTemplates[D]=B;
var E=function(H,G,F){SimileAjax.Debug.log("Failed to load view template from "+D+"\n"+H);
};
var A=function(F){try{B.template=Exhibit.Lens.compileTemplate(F.responseXML.documentElement,true,C.uiContext);
B.compiled=true;
for(var G=0;
G<B.jobs.length;
G++){try{var I=B.jobs[G];
I.template=B;
Exhibit.Lens._performConstructFromLensTemplateJob(I);
}catch(H){SimileAjax.Debug.exception(H,"Lens: Error constructing lens template in job queue");
}}B.jobs=null;
}catch(H){SimileAjax.Debug.exception(H,"Lens: Error compiling lens template and processing template job queue");
}};
SimileAjax.XmlHttp.get(D,E,A);
return B;
};
Exhibit.Lens.compileTemplate=function(B,C,A){return Exhibit.Lens._processTemplateNode(B,C,A);
};
Exhibit.Lens._processTemplateNode=function(B,C,A){if(B.nodeType==1){return Exhibit.Lens._processTemplateElement(B,C,A);
}else{return B.nodeValue;
}};
Exhibit.Lens._processTemplateElement=function(C,N,G){var K={tag:C.tagName.toLowerCase(),uiContext:G,control:null,condition:null,content:null,contentAttributes:null,subcontentAttributes:null,attributes:[],styles:[],handlers:[],children:null};
var F={parseChildTextNodes:true};
var H=C.attributes;
for(var I=0;
I<H.length;
I++){var D=H[I];
var A=D.nodeName;
var M=D.nodeValue;
Exhibit.Lens._processTemplateAttribute(G,K,F,A,M);
}if(!N&&SimileAjax.Platform.browser.isIE){var E=Exhibit.Lens._handlers;
for(var J=0;
J<E.length;
J++){var O=E[J];
var B=C[O];
if(B!=null){K.handlers.push({name:O,code:B});
}}}var L=C.firstChild;
if(L!=null){K.children=[];
while(L!=null){if((F.parseChildTextNodes&&L.nodeType==3)||L.nodeType==1){K.children.push(Exhibit.Lens._processTemplateNode(L,N,K.uiContext));
}L=L.nextSibling;
}}return K;
};
Exhibit.Lens._processTemplateAttribute=function(E,C,D,B,G){if(G==null||typeof G!="string"||G.length==0||B=="contentEditable"){return ;
}if(B=="ex:onshow"){C.attributes.push({name:B,value:G});
}else{if(B.length>3&&B.substr(0,3)=="ex:"){B=B.substr(3);
if(B=="formats"){C.uiContext=Exhibit.UIContext._createWithParent(E);
Exhibit.FormatParser.parseSeveral(C.uiContext,G,0,{});
}else{if(B=="control"){C.control=G;
}else{if(B=="content"){C.content=Exhibit.ExpressionParser.parse(G);
}else{if(B=="edit"){C.edit=G;
}else{if(B=="editvalues"){C.editValues=G;
}else{if(B=="tag"){C.tag=G;
}else{if(B=="if-exists"){C.condition={test:"if-exists",expression:Exhibit.ExpressionParser.parse(G)};
}else{if(B=="if"){C.condition={test:"if",expression:Exhibit.ExpressionParser.parse(G)};
D.parseChildTextNodes=false;
}else{if(B=="select"){C.condition={test:"select",expression:Exhibit.ExpressionParser.parse(G)};
}else{if(B=="case"){C.condition={test:"case",value:G};
D.parseChildTextNodes=false;
}else{var F=false;
var A=B.indexOf("-style-content");
if(A>0){F=true;
}else{A=B.indexOf("-content");
}if(A>0){if(C.contentAttributes==null){C.contentAttributes=[];
}C.contentAttributes.push({name:B.substr(0,A),expression:Exhibit.ExpressionParser.parse(G),isStyle:F});
}else{A=B.indexOf("-style-subcontent");
if(A>0){F=true;
}else{A=B.indexOf("-subcontent");
}if(A>0){if(C.subcontentAttributes==null){C.subcontentAttributes=[];
}C.subcontentAttributes.push({name:B.substr(0,A),fragments:Exhibit.Lens._parseSubcontentAttribute(G),isStyle:F});
}}}}}}}}}}}}}else{if(B=="style"){Exhibit.Lens._processStyle(C,G);
}else{if(B!="id"){if(B=="class"){if(SimileAjax.Platform.browser.isIE){B="className";
}}else{if(B=="cellspacing"){B="cellSpacing";
}else{if(B=="cellpadding"){B="cellPadding";
}else{if(B=="bgcolor"){B="bgColor";
}}}}C.attributes.push({name:B,value:G});
}}}}};
Exhibit.Lens._processStyle=function(D,H){var F=H.split(";");
for(var I=0;
I<F.length;
I++){var B=F[I].split(":");
if(B.length>1){var A=B[0].trim();
var G=B[1].trim();
if(A=="float"){A=SimileAjax.Platform.browser.isIE?"styleFloat":"cssFloat";
}else{if(A=="-moz-opacity"){A="MozOpacity";
}else{if(A.indexOf("-")>0){var C=A.split("-");
A=C[0];
for(var E=1;
E<C.length;
E++){A+=C[E].substr(0,1).toUpperCase()+C[E].substr(1);
}}}}D.styles.push({name:A,value:G});
}}};
Exhibit.Lens._parseSubcontentAttribute=function(C){var A=[];
var D=0;
var B;
while(D<C.length&&(B=C.indexOf("{{",D))>=0){var E=C.indexOf("}}",B);
if(E<0){break;
}A.push(C.substring(D,B));
A.push(Exhibit.ExpressionParser.parse(C.substring(B+2,E)));
D=E+2;
}if(D<C.length){A.push(C.substr(D));
}return A;
};
Exhibit.Lens.constructFromLensTemplate=function(D,A,C,B){return Exhibit.Lens._performConstructFromLensTemplateJob({itemID:D,template:{template:A},div:C,uiContext:B});
};
Exhibit.Lens._performConstructFromLensTemplateJob=function(job){Exhibit.Lens._constructFromLensTemplateNode({"value":job.itemID},{"value":"item"},job.template.template,job.div,job.uiContext);
var node=job.div.lastChild;
var tagName=node.tagName;
if(tagName=="span"){node.style.display="inline";
}else{node.style.display="block";
}node.setAttribute("ex:itemID",job.itemID);
if(!Exhibit.params.safe){var onshow=Exhibit.getAttribute(node,"onshow");
if(onshow!=null&&onshow.length>0){try{eval("(function() { "+onshow+" })").call(node);
}catch(e){SimileAjax.Debug.log(e);
}}}return node;
};
Exhibit.Lens._constructFromLensTemplateNode=function(I,C,S,L){if(typeof S=="string"){L.appendChild(document.createTextNode(S));
return ;
}var D=S.uiContext;
var P=D.getDatabase();
var F=S.children;
if(S.condition!=null){if(S.condition.test=="if-exists"){if(!S.condition.expression.testExists(I,C,"value",P)){return ;
}}else{if(S.condition.test=="if"){if(S.condition.expression.evaluate(I,C,"value",P).values.contains(true)){if(F!=null&&F.length>0){Exhibit.Lens._constructFromLensTemplateNode(I,C,F[0],L);
}}else{if(F!=null&&F.length>1){Exhibit.Lens._constructFromLensTemplateNode(I,C,F[1],L);
}}return ;
}else{if(S.condition.test=="select"){var M=S.condition.expression.evaluate(I,C,"value",P).values;
if(F!=null){var E=null;
for(var Z=0;
Z<F.length;
Z++){var A=F[Z];
if(A.condition!=null&&A.condition.test=="case"){if(M.contains(A.condition.value)){Exhibit.Lens._constructFromLensTemplateNode(I,C,A,L);
return ;
}}else{if(typeof A!="string"){E=A;
}}}}if(E!=null){Exhibit.Lens._constructFromLensTemplateNode(I,C,E,L);
}return ;
}}}}var K=Exhibit.Lens._constructElmtWithAttributes(S,L,P);
if(S.contentAttributes!=null){var b=S.contentAttributes;
for(var W=0;
W<b.length;
W++){var O=b[W];
var M=[];
O.expression.evaluate(I,C,"value",P).values.visit(function(a){M.push(a);
});
var V=M.join(";");
if(O.isStyle){K.style[O.name]=V;
}else{if("class"==O.name){K.className=V;
}else{if(Exhibit.Lens._attributeValueIsSafe(O.name,V)){K.setAttribute(O.name,V);
}}}}}if(S.subcontentAttributes!=null){var H=S.subcontentAttributes;
for(var W=0;
W<H.length;
W++){var O=H[W];
var e=O.fragments;
var U="";
for(var Q=0;
Q<e.length;
Q++){var N=e[Q];
if(typeof N=="string"){U+=N;
}else{U+=N.evaluateSingle(I,C,"value",P).value;
}}if(O.isStyle){K.style[O.name]=U;
}else{if("class"==O.name){K.className=U;
}else{if(Exhibit.Lens._attributeValueIsSafe(O.name,U)){K.setAttribute(O.name,U);
}}}}}if(!Exhibit.params.safe){var T=S.handlers;
for(var X=0;
X<T.length;
X++){var B=T[X];
K[B.name]=B.code;
}}var J=I["value"];
if(S.control!=null){switch(S.control){case"item-link":var d=document.createElement("a");
d.innerHTML=Exhibit.l10n.itemLinkLabel;
d.href=Exhibit.Persistence.getItemLink(J);
d.target="_blank";
K.appendChild(d);
break;
case"start-editing":if(S.tag=="a"){K.href="javascript:";
}SimileAjax.jQuery(K).click(function(){D.getLensRegistry().setEditMode(J,true);
D.getCollection()._listeners.fire("onItemsChanged",[]);
});
if(F!=null){for(var W=0;
W<F.length;
W++){Exhibit.Lens._constructFromLensTemplateNode(I,C,F[W],K);
}}break;
case"stop-editing":if((typeof J)!="string"){L.removeChild(K);
}else{if(S.tag=="a"){K.href="javascript:";
}SimileAjax.jQuery(K).click(function(){D.getLensRegistry().setEditMode(J,false);
D.getCollection()._listeners.fire("onItemsChanged",[]);
});
if(F!=null){for(var W=0;
W<F.length;
W++){Exhibit.Lens._constructFromLensTemplateNode(I,C,F[W],K);
}}}break;
}}else{if(S.content!=null){var U=S.content.evaluate(I,C,"value",P);
if(F!=null){var Y={"value":U.valueType,"index":"number"};
var G=1;
var R=function(a){var f={"value":a,"index":G++};
for(var c=0;
c<F.length;
c++){Exhibit.Lens._constructFromLensTemplateNode(f,Y,F[c],K);
}};
if(U.values instanceof Array){for(var W=0;
W<U.values.length;
W++){R(U.values[W]);
}}else{U.values.visit(R);
}}else{Exhibit.Lens._constructDefaultValueList(U.values,U.valueType,K,S.uiContext);
}}else{if(S.edit!=null){if(F!=null){for(var W=0;
W<F.length;
W++){Exhibit.Lens._constructFromLensTemplateNode(I,C,F[W],K);
}}Exhibit.Lens._constructEditableContent(S,K,J,D);
}else{if(F!=null){for(var W=0;
W<F.length;
W++){Exhibit.Lens._constructFromLensTemplateNode(I,C,F[W],K);
}}}}}};
Exhibit.Lens._constructElmtWithAttributes=function(H,D,K){var B;
if(H.tag=="input"&&SimileAjax.Platform.browser.isIE){var J=["<input"];
var E=H.attributes;
for(var F=0;
F<E.length;
F++){var C=E[F];
if(Exhibit.Lens._attributeValueIsSafe(C.name,C.value)){J.push(C.name+'="'+C.value+'"');
}}J.push("></input>");
B=SimileAjax.DOM.createElementFromString(J.join(" "));
D.appendChild(B);
}else{switch(H.tag){case"tr":B=D.insertRow(D.rows.length);
break;
case"td":B=D.insertCell(D.cells.length);
break;
default:B=document.createElement(H.tag);
D.appendChild(B);
}var E=H.attributes;
for(var F=0;
F<E.length;
F++){var C=E[F];
if(Exhibit.Lens._attributeValueIsSafe(C.name,C.value)){try{B.setAttribute(C.name,C.value);
}catch(G){}}}}var I=H.styles;
for(var F=0;
F<I.length;
F++){var A=I[F];
B.style[A.name]=A.value;
}return B;
};
Exhibit.Lens._constructEditableContent=function(F,B,G,C){var I=C.getDatabase();
var E=F.edit;
if(G.type=="temporaryItem"){var H=G.values[E]||"";
var A=function(){G.values[E]=this.value;
};
}else{var H=I.getObject(G,E);
var A=function(){var J=I.getObject(G,E);
I.removeObjects(G,E);
I.addStatement(G,E,this.value);
I.getProperty(E)._onNewData();
I._listeners.fire("onItemModified",[G,E,J,this.value]);
C.getExhibit().getDefaultCollection()._update();
};
}if(F.tag=="select"){for(var D in B.options){if(B.options.hasOwnProperty(D)&&B.options[D].value==H){B.selectedIndex=D;
}}}else{B.value=H;
}if(F.tag=="select"){SimileAjax.jQuery(B).blur(A);
}else{SimileAjax.jQuery(B).change(A);
}};
Exhibit.Lens._constructDefaultValueList=function(B,C,D,A){A.formatList(B,B.size(),C,function(E){D.appendChild(E);
});
};
Exhibit.Lens._attributeValueIsSafe=function(A,B){if(Exhibit.params.safe){if((A=="href"&&B.startsWith("javascript:"))||(A.startsWith("on"))){return false;
}}return true;
};


/* ui-context.js */
Exhibit.UIContext=function(){this._parent=null;
this._exhibit=null;
this._collection=null;
this._lensRegistry=new Exhibit.LensRegistry();
this._settings={};
this._formatters={};
this._listFormatter=null;
};
Exhibit.UIContext.createRootContext=function(F,C){var A=new Exhibit.UIContext();
A._exhibit=C;
var B=Exhibit.UIContext.l10n.initialSettings;
for(var E in B){A._settings[E]=B[E];
}var D=Exhibit.getAttribute(document.body,"formats");
if(D!=null&&D.length>0){Exhibit.FormatParser.parseSeveral(A,D,0,{});
}Exhibit.SettingsUtilities.collectSettingsFromDOM(document.body,Exhibit.UIContext._settingSpecs,A._settings);
Exhibit.UIContext._configure(A,F);
return A;
};
Exhibit.UIContext.create=function(D,A,C){var B=Exhibit.UIContext._createWithParent(A);
Exhibit.UIContext._configure(B,D,C);
return B;
};
Exhibit.UIContext.createFromDOM=function(E,A,D){var B=Exhibit.UIContext._createWithParent(A);
if(!(D)){Exhibit.UIContext.registerLensesFromDOM(E,B.getLensRegistry());
}var F=Exhibit.getAttribute(E,"collectionID");
if(F!=null&&F.length>0){B._collection=B._exhibit.getCollection(F);
}var C=Exhibit.getAttribute(E,"formats");
if(C!=null&&C.length>0){Exhibit.FormatParser.parseSeveral(B,C,0,{});
}Exhibit.SettingsUtilities.collectSettingsFromDOM(E,Exhibit.UIContext._settingSpecs,B._settings);
Exhibit.UIContext._configure(B,Exhibit.getConfigurationFromDOM(E),D);
return B;
};
Exhibit.UIContext.prototype.dispose=function(){};
Exhibit.UIContext.prototype.getParentUIContext=function(){return this._parent;
};
Exhibit.UIContext.prototype.getExhibit=function(){return this._exhibit;
};
Exhibit.UIContext.prototype.getDatabase=function(){return this.getExhibit().getDatabase();
};
Exhibit.UIContext.prototype.getCollection=function(){if(this._collection==null){if(this._parent!=null){this._collection=this._parent.getCollection();
}else{this._collection=this._exhibit.getDefaultCollection();
}}return this._collection;
};
Exhibit.UIContext.prototype.getLensRegistry=function(){return this._lensRegistry;
};
Exhibit.UIContext.prototype.getSetting=function(A){return A in this._settings?this._settings[A]:(this._parent!=null?this._parent.getSetting(A):undefined);
};
Exhibit.UIContext.prototype.getBooleanSetting=function(B,C){var A=this.getSetting(B);
return A==undefined||A==null?C:A;
};
Exhibit.UIContext.prototype.putSetting=function(A,B){this._settings[A]=B;
};
Exhibit.UIContext.prototype.format=function(C,D,A){var B;
if(D in this._formatters){B=this._formatters[D];
}else{B=this._formatters[D]=new Exhibit.Formatter._constructors[D](this);
}B.format(C,A);
};
Exhibit.UIContext.prototype.formatList=function(B,C,D,A){if(this._listFormatter==null){this._listFormatter=new Exhibit.Formatter._ListFormatter(this);
}this._listFormatter.formatList(B,C,D,A);
};
Exhibit.UIContext._createWithParent=function(A){var B=new Exhibit.UIContext();
B._parent=A;
B._exhibit=A._exhibit;
B._lensRegistry=new Exhibit.LensRegistry(A.getLensRegistry());
return B;
};
Exhibit.UIContext._settingSpecs={"bubbleWidth":{type:"int"},"bubbleHeight":{type:"int"}};
Exhibit.UIContext._configure=function(A,C,B){Exhibit.UIContext.registerLenses(C,A.getLensRegistry());
if("collectionID" in C){A._collection=A._exhibit.getCollection(C["collectionID"]);
}if("formats" in C){Exhibit.FormatParser.parseSeveral(A,C.formats,0,{});
}if(!(B)){Exhibit.SettingsUtilities.collectSettings(C,Exhibit.UIContext._settingSpecs,A._settings);
}};
Exhibit.UIContext.registerLens=function(D,B){var A=D.templateFile;
if(A!=null){if("itemTypes" in D){for(var C=0;
C<D.itemTypes.length;
C++){B.registerLensForType(A,D.itemTypes[C]);
}}else{B.registerDefaultLens(A);
}}};
Exhibit.UIContext.registerLensFromDOM=function(E,C){E.style.display="none";
var G=Exhibit.getAttribute(E,"itemTypes",",");
var A=null;
var B=Exhibit.getAttribute(E,"templateFile");
if(B!=null&&B.length>0){A=B;
}else{var H=Exhibit.getAttribute(E,"template");
var F=H&&document.getElementById(H);
if(F!=null){A=F;
}else{A=E;
}}if(A!=null){if(G==null||G.length==0||(G.length==1&&G[0]=="")){C.registerDefaultLens(A);
}else{for(var D=0;
D<G.length;
D++){C.registerLensForType(A,G[D]);
}}}};
Exhibit.UIContext.registerLenses=function(D,A){if("lenses" in D){for(var B=0;
B<D.lenses.length;
B++){Exhibit.UIContext.registerLens(D.lenses[B],A);
}}if("lensSelector" in D){var C=D.lensSelector;
if(typeof C=="function"){A.addLensSelector(C);
}else{SimileAjax.Debug.log("lensSelector is not a function");
}}};
Exhibit.UIContext.registerLensesFromDOM=function(parentNode,lensRegistry){var node=parentNode.firstChild;
while(node!=null){if(node.nodeType==1){var role=Exhibit.getRoleAttribute(node);
if(role=="lens"){Exhibit.UIContext.registerLensFromDOM(node,lensRegistry);
}}node=node.nextSibling;
}var lensSelectorString=Exhibit.getAttribute(parentNode,"lensSelector");
if(lensSelectorString!=null&&lensSelectorString.length>0){try{var lensSelector=eval(lensSelectorString);
if(typeof lensSelector=="function"){lensRegistry.addLensSelector(lensSelector);
}else{SimileAjax.Debug.log("lensSelector expression "+lensSelectorString+" is not a function");
}}catch(e){SimileAjax.Debug.exception(e,"Bad lensSelector expression: "+lensSelectorString);
}}};
Exhibit.UIContext.createLensRegistry=function(C,B){var A=new Exhibit.LensRegistry(B);
Exhibit.UIContext.registerLenses(C,A);
return A;
};
Exhibit.UIContext.createLensRegistryFromDOM=function(B,D,C){var A=new Exhibit.LensRegistry(C);
Exhibit.UIContext.registerLensesFromDOM(B,A);
Exhibit.UIContext.registerLenses(D,A);
return A;
};


/* ui.js */
Exhibit.UI=new Object();
Exhibit.UI.create=function(D,A,B){if("role" in D){var C=D.role;
if(C!=null&&C.startsWith("exhibit-")){C=C.substr("exhibit-".length);
}switch(C){case"lens":Exhibit.UIContext.registerLens(D,B.getLensRegistry());
return null;
case"view":return Exhibit.UI.createView(D,A,B);
case"facet":return Exhibit.UI.createFacet(D,A,B);
case"coordinator":return Exhibit.UI.createCoordinator(D,B);
case"coder":return Exhibit.UI.createCoder(D,B);
case"viewPanel":return Exhibit.ViewPanel.create(D,A,B);
case"logo":return Exhibit.Logo.create(D,A,B);
case"item-creator":return Exhibit.UI.createItemCreator(D,A,B);
case"hiddenContent":A.style.display="none";
return null;
}}return null;
};
Exhibit.UI.createFromDOM=function(A,B){var C=Exhibit.getRoleAttribute(A);
switch(C){case"lens":Exhibit.UIContext.registerLensFromDOM(A,B.getLensRegistry());
return null;
case"view":return Exhibit.UI.createViewFromDOM(A,null,B);
case"facet":return Exhibit.UI.createFacetFromDOM(A,null,B);
case"coordinator":return Exhibit.UI.createCoordinatorFromDOM(A,B);
case"coder":return Exhibit.UI.createCoderFromDOM(A,B);
case"viewPanel":return Exhibit.ViewPanel.createFromDOM(A,B);
case"logo":return Exhibit.Logo.createFromDOM(A,B);
case"item-creator":return Exhibit.UI.createItemCreatorFromDOM(A,B);
case"hiddenContent":A.style.display="none";
return null;
}return null;
};
Exhibit.UI.createView=function(D,B,C){var A="viewClass" in D?D.viewClass:Exhibit.TileView;
if(typeof A=="string"){A=Exhibit.UI.viewClassNameToViewClass(A);
}return A.create(D,B,C);
};
Exhibit.UI.createViewFromDOM=function(B,D,C){var A=Exhibit.UI.viewClassNameToViewClass(Exhibit.getAttribute(B,"viewClass"));
return A.createFromDOM(B,D,C);
};
Exhibit.UI.viewClassNameToViewClass=function(A){if(A!=null&&A.length>0){try{return Exhibit.UI._stringToObject(A,"View");
}catch(B){SimileAjax.Debug.warn("Unknown viewClass "+A);
}}return Exhibit.TileView;
};
Exhibit.UI.createFacet=function(D,A,B){var C="facetClass" in D?D.facetClass:Exhibit.ListFacet;
if(typeof C=="string"){C=Exhibit.UI.facetClassNameToFacetClass(C);
}return C.create(D,A,B);
};
Exhibit.UI.createFacetFromDOM=function(A,C,B){var D=Exhibit.UI.facetClassNameToFacetClass(Exhibit.getAttribute(A,"facetClass"));
return D.createFromDOM(A,C,B);
};
Exhibit.UI.facetClassNameToFacetClass=function(A){if(A!=null&&A.length>0){try{return Exhibit.UI._stringToObject(A,"Facet");
}catch(B){SimileAjax.Debug.warn("Unknown facetClass "+A);
}}return Exhibit.ListFacet;
};
Exhibit.UI.createCoder=function(C,A){var B="coderClass" in C?C.coderClass:Exhibit.ColorCoder;
if(typeof B=="string"){B=Exhibit.UI.coderClassNameToCoderClass(B);
}return B.create(C,A);
};
Exhibit.UI.createCoderFromDOM=function(A,B){var C=Exhibit.UI.coderClassNameToCoderClass(Exhibit.getAttribute(A,"coderClass"));
return C.createFromDOM(A,B);
};
Exhibit.UI.coderClassNameToCoderClass=function(A){if(A!=null&&A.length>0){try{return Exhibit.UI._stringToObject(A,"Coder");
}catch(B){SimileAjax.Debug.warn("Unknown coderClass "+A);
}}return Exhibit.ColorCoder;
};
Exhibit.UI.createCoordinator=function(B,A){return Exhibit.Coordinator.create(B,A);
};
Exhibit.UI.createCoordinatorFromDOM=function(A,B){return Exhibit.Coordinator.createFromDOM(A,B);
};
Exhibit.UI.createItemCreator=function(B,A,D){var H=D.getDatabase();
var F=B.itemType||"item";
var C=H.getType(F).getLabel();
var E=SimileAjax.jQuery;
var I=function(){var J="Untitled "+C;
var L="";
var K=J;
while(H.containsItem(K)){L++;
K=J+" "+L;
}return K;
};
if(A.nodeName.toLowerCase()=="a"){A.href="javascript:";
}var G=function(){var J=I();
var U={type:F,id:J,label:J};
var L=E("<div>");
var N=E("<div>").appendTo(L);
var K=E("<button>").text("Cancel");
var M=E("<button>").text("Add to Exhibit");
E("<table>").append(E("<tr>").append(E("<td>").append(K),E("<td>").append(M))).appendTo(L).css({"text-align":"center",width:"100%"});
var R=D.getLensRegistry()._typeToLens[U.type+"-editor"];
var O=new Exhibit.Lens();
var Q={type:"temporaryItem",values:U};
O._constructFromLensTemplateDOM(Q,N.get(0),D,R);
L.attr("exibit_inpop",true);
var S=function(){SimileAjax.WindowManager._layers.forEach(function(V){if(E(V.elmt).find("[exibit_inpop]").length>0){SimileAjax.WindowManager.popLayer(V);
}});
};
var P=function(){S();
H.loadItems([U],"");
H._listeners.fire("onItemAdded",[U.id,U.type]);
};
K.click(S);
M.click(P);
var T=SimileAjax.DOM.getPageCoordinates(A);
SimileAjax.Graphics.createBubbleForContentAndPoint(L.get(0),T.left+Math.round(A.offsetWidth/2),T.top+Math.round(A.offsetHeight/2),D.getSetting("bubbleWidth"));
};
SimileAjax.jQuery(A).click(G);
return A;
};
Exhibit.UI.createItemCreatorFromDOM=function(A,B){var D={};
var C=Exhibit.getAttribute(A,"itemType");
if(C){D.itemType=C;
}return Exhibit.UI.createItemCreator(D,A,B);
};
Exhibit.UI._stringToObject=function(name,suffix){if(!name.startsWith("Exhibit.")){if(!name.endsWith(suffix)){try{return eval("Exhibit."+name+suffix);
}catch(e){}}try{return eval("Exhibit."+name);
}catch(e){}}if(!name.endsWith(suffix)){try{return eval(name+suffix);
}catch(e){}}try{return eval(name);
}catch(e){}throw new Error("Unknown class "+name);
};
Exhibit.UI.docRoot="http://simile.mit.edu/wiki/";
Exhibit.UI.validator="http://simile.mit.edu/babel/validator";
Exhibit.UI.showHelp=function(B,A,C){C=(C)?C:"_blank";
if(A!=null){if(window.confirm(B+"\n\n"+Exhibit.l10n.showDocumentationMessage)){window.open(A,C);
}}else{window.alert(B);
}};
Exhibit.UI.showJavascriptExpressionValidation=function(A,B){var C="_blank";
if(window.confirm(A+"\n\n"+Exhibit.l10n.showJavascriptValidationMessage)){window.open(Exhibit.UI.validator+"?expresson="+encodeURIComponent(B),C);
}};
Exhibit.UI.showJsonFileValidation=function(B,A){var C="_blank";
if(A.indexOf("file:")==0){if(window.confirm(B+"\n\n"+Exhibit.l10n.showJsonValidationFormMessage)){window.open(Exhibit.UI.validator,C);
}}else{if(window.confirm(B+"\n\n"+Exhibit.l10n.showJsonValidationMessage)){window.open(Exhibit.UI.validator+"?url="+A,C);
}}};
Exhibit.UI._busyIndicator=null;
Exhibit.UI._busyIndicatorCount=0;
Exhibit.UI.showBusyIndicator=function(){Exhibit.UI._busyIndicatorCount++;
if(Exhibit.UI._busyIndicatorCount>1){return ;
}if(Exhibit.UI._busyIndicator==null){Exhibit.UI._busyIndicator=Exhibit.UI.createBusyIndicator();
}var C=("scrollTop" in document.body)?document.body.scrollTop:document.body.parentNode.scrollTop;
var A=("innerHeight" in window)?window.innerHeight:("clientHeight" in document.body?document.body.clientHeight:document.body.parentNode.clientHeight);
var B=Math.floor(C+A/3);
Exhibit.UI._busyIndicator.style.top=B+"px";
document.body.appendChild(Exhibit.UI._busyIndicator);
};
Exhibit.UI.hideBusyIndicator=function(){Exhibit.UI._busyIndicatorCount--;
if(Exhibit.UI._busyIndicatorCount>0){return ;
}try{document.body.removeChild(Exhibit.UI._busyIndicator);
}catch(A){}};
Exhibit.UI.protectUI=function(A){SimileAjax.DOM.appendClassName(A,"exhibit-ui-protection");
};
Exhibit.UI.makeActionLink=function(E,D,C){var B=document.createElement("a");
B.href="javascript:";
B.className="exhibit-action";
B.innerHTML=E;
var A=function(G,F,H){if("true"!=G.getAttribute("disabled")){D(G,F,H);
}};
SimileAjax.WindowManager.registerEvent(B,"click",A,C);
return B;
};
Exhibit.UI.enableActionLink=function(A,B){A.setAttribute("disabled",B?"false":"true");
A.className=B?"exhibit-action":"exhibit-action-disabled";
};
Exhibit.UI.makeItemSpan=function(F,B,E,C){if(B==null){B=database.getObject(F,"label");
if(B==null){B=F;
}}var A=SimileAjax.DOM.createElementFromString('<a href="'+Exhibit.Persistence.getItemLink(F)+"\" class='exhibit-item'>"+B+"</a>");
var D=function(H,G,I){Exhibit.UI.showItemInPopup(F,H,E);
};
SimileAjax.WindowManager.registerEvent(A,"click",D,C);
return A;
};
Exhibit.UI.makeValueSpan=function(B,E,C){var D=document.createElement("span");
D.className="exhibit-value";
if(E=="url"){var A=B;
if(Exhibit.params.safe&&A.trim().startsWith("javascript:")){D.appendChild(document.createTextNode(A));
}else{D.innerHTML='<a href="'+A+"\" target='_blank'>"+(B.length>50?B.substr(0,20)+" ... "+B.substr(B.length-20):B)+"</a>";
}}else{if(Exhibit.params.safe){B=Exhibit.Formatter.encodeAngleBrackets(B);
}D.innerHTML=B;
}return D;
};
Exhibit.UI.showItemInPopup=function(F,B,C){var A=SimileAjax.DOM.getPageCoordinates(B);
var E=document.createElement("div");
var D=C.getLensRegistry().createLens(F,E,C);
SimileAjax.Graphics.createBubbleForContentAndPoint(E,A.left+Math.round(B.offsetWidth/2),A.top+Math.round(B.offsetHeight/2),C.getSetting("bubbleWidth"));
};
Exhibit.UI.createButton=function(C,D,A){var B=document.createElement("button");
B.className=(A||"exhibit-button")+" screen";
B.innerHTML=C;
if(D){SimileAjax.WindowManager.registerEvent(B,"click",D);
}return B;
};
Exhibit.UI.createPopupMenuDom=function(A){var C=document.createElement("div");
C.className="exhibit-menu-popup exhibit-ui-protection";
var B={elmt:C,close:function(){document.body.removeChild(this.elmt);
},open:function(){var E=this;
this.layer=SimileAjax.WindowManager.pushLayer(function(){E.close();
},true,C);
var F=document.body.offsetWidth;
var G=document.body.offsetHeight;
var D=SimileAjax.DOM.getPageCoordinates(A);
C.style.top=(D.top+A.scrollHeight)+"px";
C.style.right=(F-(D.left+A.scrollWidth))+"px";
document.body.appendChild(this.elmt);
},appendMenuItem:function(F,G,H){var E=this;
var D=document.createElement("a");
D.className="exhibit-menu-item";
D.href="javascript:";
SimileAjax.WindowManager.registerEvent(D,"click",function(K,J,L){H(K,J,L);
SimileAjax.WindowManager.popLayer(E.layer);
SimileAjax.DOM.cancelEvent(J);
return false;
});
var I=document.createElement("div");
D.appendChild(I);
I.appendChild(SimileAjax.Graphics.createTranslucentImage(G!=null?G:(Exhibit.urlPrefix+"images/blank-16x16.png")));
I.appendChild(document.createTextNode(F));
this.elmt.appendChild(D);
},appendSeparator:function(){var D=document.createElement("hr");
this.elmt.appendChild(D);
}};
return B;
};
Exhibit.UI.createBusyIndicator=function(){var D=Exhibit.urlPrefix+"images/";
var I=document.createElement("div");
if(SimileAjax.Graphics.pngIsTranslucent){var J=document.createElement("div");
J.style.height="33px";
J.style.background="url("+D+"message-bubble/message-top-left.png) top left no-repeat";
J.style.paddingLeft="44px";
I.appendChild(J);
var F=document.createElement("div");
F.style.height="33px";
F.style.background="url("+D+"message-bubble/message-top-right.png) top right no-repeat";
J.appendChild(F);
var H=document.createElement("div");
H.style.background="url("+D+"message-bubble/message-left.png) top left repeat-y";
H.style.paddingLeft="44px";
I.appendChild(H);
var B=document.createElement("div");
B.style.background="url("+D+"message-bubble/message-right.png) top right repeat-y";
B.style.paddingRight="44px";
H.appendChild(B);
var C=document.createElement("div");
B.appendChild(C);
var G=document.createElement("div");
G.style.height="55px";
G.style.background="url("+D+"message-bubble/message-bottom-left.png) bottom left no-repeat";
G.style.paddingLeft="44px";
I.appendChild(G);
var A=document.createElement("div");
A.style.height="55px";
A.style.background="url("+D+"message-bubble/message-bottom-right.png) bottom right no-repeat";
G.appendChild(A);
}else{I.style.border="2px solid #7777AA";
I.style.padding="20px";
I.style.background="white";
SimileAjax.Graphics.setOpacity(I,90);
var C=document.createElement("div");
I.appendChild(C);
}I.className="exhibit-busyIndicator";
C.className="exhibit-busyIndicator-content";
var E=document.createElement("img");
E.src=D+"progress-running.gif";
C.appendChild(E);
C.appendChild(document.createTextNode(" "+Exhibit.l10n.busyIndicatorMessage));
return I;
};
Exhibit.UI.createFocusDialogBox=function(E,B,D){var A={tag:"div",className:"exhibit-focusDialog exhibit-ui-protection",children:[{tag:"div",className:"exhibit-focusDialog-viewContainer",field:"viewContainer"},{tag:"div",className:"exhibit-focusDialog-controls",children:[{tag:"button",field:"closeButton",children:[Exhibit.l10n.focusDialogBoxCloseButtonLabel]}]}]};
var C=SimileAjax.DOM.createDOMFromTemplate(A);
C.close=function(){document.body.removeChild(C.elmt);
};
C.open=function(){C.layer=SimileAjax.WindowManager.pushLayer(function(){C.close();
},false);
var F=new Exhibit.Lens(E,C.viewContainer,B,D);
C.elmt.style.top=(document.body.scrollTop+100)+"px";
document.body.appendChild(C.elmt);
SimileAjax.WindowManager.registerEvent(C.closeButton,"click",function(H,G,I){SimileAjax.WindowManager.popLayer(C.layer);
SimileAjax.DOM.cancelEvent(G);
return false;
},C.layer);
};
return C;
};
Exhibit.UI.createTranslucentImage=function(A,B){return SimileAjax.Graphics.createTranslucentImage(Exhibit.urlPrefix+A,B);
};
Exhibit.UI.createTranslucentImageHTML=function(A,B){return SimileAjax.Graphics.createTranslucentImageHTML(Exhibit.urlPrefix+A,B);
};


/* html-view.js */
Exhibit.HTMLView=function(C,B,A){this.html=A;
this.view=this.moveChildNodes(A,C);
};
Exhibit.HTMLView.create=Exhibit.HTMLView.createFromDOM=function(C,B,A){return new Exhibit.HTMLView(B!=null?B:C,null,C);
};
Exhibit.HTMLView.prototype.dispose=function(){this.html=this.moveChildNodes(this.view,this.html);
this.view=this.html=null;
};
Exhibit.HTMLView.prototype.moveChildNodes=function(B,C){if(B===C){return C;
}var A=document.createDocumentFragment();
while(B.firstChild){A.appendChild(B.firstChild);
}C.appendChild(A);
return C;
};


/* ordered-view-frame.js */
Exhibit.OrderedViewFrame=function(A){this._uiContext=A;
this._orders=null;
this._possibleOrders=null;
this._settings={};
};
Exhibit.OrderedViewFrame._settingSpecs={"showAll":{type:"boolean",defaultValue:false},"grouped":{type:"boolean",defaultValue:true},"showDuplicates":{type:"boolean",defaultValue:false},"abbreviatedCount":{type:"int",defaultValue:10},"showHeader":{type:"boolean",defaultValue:true},"showSummary":{type:"boolean",defaultValue:true},"showControls":{type:"boolean",defaultValue:true},"showFooter":{type:"boolean",defaultValue:true}};
Exhibit.OrderedViewFrame.prototype.configure=function(A){if("orders" in A){this._orders=[];
this._configureOrders(A.orders);
}if("possibleOrders" in A){this._possibleOrders=[];
this._configurePossibleOrders(A.possibleOrders);
}Exhibit.SettingsUtilities.collectSettings(A,Exhibit.OrderedViewFrame._settingSpecs,this._settings);
this._internalValidate();
};
Exhibit.OrderedViewFrame.prototype.configureFromDOM=function(E){var A=Exhibit.getAttribute(E,"orders",",");
if(A!=null&&A.length>0){this._orders=[];
this._configureOrders(A);
}var F=Exhibit.getAttribute(E,"directions",",");
if(F!=null&&F.length>0&&this._orders!=null){for(var C=0;
C<F.length&&C<this._orders.length;
C++){this._orders[C].ascending=(F[C].toLowerCase()!="descending");
}}var D=Exhibit.getAttribute(E,"possibleOrders",",");
if(D!=null&&D.length>0){this._possibleOrders=[];
this._configurePossibleOrders(D);
}var B=Exhibit.getAttribute(E,"possibleDirections",",");
if(B!=null&&B.length>0&&this._possibleOrders!=null){for(var C=0;
C<B.length&&C<this._possibleOrders.length;
C++){this._possibleOrders.ascending=(B[C].toLowerCase()!="descending");
}}Exhibit.SettingsUtilities.collectSettingsFromDOM(E,Exhibit.OrderedViewFrame._settingSpecs,this._settings);
this._internalValidate();
};
Exhibit.OrderedViewFrame.prototype.dispose=function(){if(this._headerDom){this._headerDom.dispose();
this._headerDom=null;
}if(this._footerDom){this._footerDom.dispose();
this._footerDom=null;
}this._divHeader=null;
this._divFooter=null;
this._uiContext=null;
};
Exhibit.OrderedViewFrame.prototype._internalValidate=function(){if(this._orders!=null&&this._orders.length==0){this._orders=null;
}if(this._possibleOrders!=null&&this._possibleOrders.length==0){this._possibleOrders=null;
}};
Exhibit.OrderedViewFrame.prototype._configureOrders=function(C){for(var E=0;
E<C.length;
E++){var B=C[E];
var H;
var D=true;
if(typeof B=="string"){H=B;
}else{if(typeof B=="object"){H=B.expression,D=("ascending" in B)?(B.ascending):true;
}else{SimileAjax.Debug.warn("Bad order object "+B);
continue;
}}try{var A=Exhibit.ExpressionParser.parse(H);
if(A.isPath()){var I=A.getPath();
if(I.getSegmentCount()==1){var F=I.getSegment(0);
this._orders.push({property:F.property,forward:F.forward,ascending:D});
}}}catch(G){SimileAjax.Debug.warn("Bad order expression "+H);
}}};
Exhibit.OrderedViewFrame.prototype._configurePossibleOrders=function(G){for(var D=0;
D<G.length;
D++){var B=G[D];
var H;
var C=true;
if(typeof B=="string"){H=B;
}else{if(typeof B=="object"){H=B.expression,C=("ascending" in B)?(B.ascending):true;
}else{SimileAjax.Debug.warn("Bad possible order object "+B);
continue;
}}try{var A=Exhibit.ExpressionParser.parse(H);
if(A.isPath()){var I=A.getPath();
if(I.getSegmentCount()==1){var E=I.getSegment(0);
this._possibleOrders.push({property:E.property,forward:E.forward,ascending:C});
}}}catch(F){SimileAjax.Debug.warn("Bad possible order expression "+H);
}}};
Exhibit.OrderedViewFrame.prototype.initializeUI=function(){var A=this;
if(this._settings.showHeader){this._headerDom=Exhibit.OrderedViewFrame.createHeaderDom(this._uiContext,this._divHeader,this._settings.showSummary,this._settings.showControls,function(C,B,D){A._openSortPopup(C,-1);
},function(C,B,D){A._toggleGroup();
});
}if(this._settings.showFooter){this._footerDom=Exhibit.OrderedViewFrame.createFooterDom(this._uiContext,this._divFooter,function(C,B,D){A._setShowAll(true);
},function(C,B,D){A._setShowAll(false);
});
}};
Exhibit.OrderedViewFrame.prototype.reconstruct=function(){var J=this;
var C=this._uiContext.getCollection();
var I=this._uiContext.getDatabase();
var F=C.countAllItems();
var H=C.countRestrictedItems();
var B=false;
if(H>0){var A=C.getRestrictedItems();
B=this._internalReconstruct(A);
var K=[];
var G=function(M,O){var L=I.getProperty(M.property);
var N=L!=null?(M.forward?L.getPluralLabel():L.getReversePluralLabel()):(M.forward?M.property:"reverse of "+M.property);
K.push(Exhibit.UI.makeActionLink(N,function(Q,P,R){J._openSortPopup(Q,O);
}));
};
var D=this._getOrders();
for(var E=0;
E<D.length;
E++){G(D[E],E);
}if(this._settings.showHeader&&this._settings.showControls){this._headerDom.setOrders(K);
this._headerDom.enableThenByAction(K.length<this._getPossibleOrders().length);
}}if(this._settings.showHeader&&this._settings.showControls){this._headerDom.groupOptionWidget.setChecked(this._settings.grouped);
}if(this._settings.showFooter){this._footerDom.setCounts(H,this._settings.abbreviatedCount,this._settings.showAll,!(B&&this._grouped));
}};
Exhibit.OrderedViewFrame.prototype._internalReconstruct=function(J){var L=this;
var E=this._settings;
var K=this._uiContext.getDatabase();
var F=this._getOrders();
var C=0;
var D=false;
var G=function(M){if((D&&E.grouped)||E.showAll||C<E.abbreviatedCount){L.onNewItem(M,C++);
}};
var B=function(N,O,M){if((D&&E.grouped)||E.showAll||C<E.abbreviatedCount){L.onNewGroup(N,O,M);
}};
var A=function(Q,P){var M=F[P];
var U=M.forward?K.getObjectsUnion(Q,M.property):K.getSubjectsUnion(Q,M.property);
var O="text";
if(M.forward){var T=K.getProperty(M.property);
O=T!=null?T.getValueType():"text";
}else{O="item";
}var V=(O=="item"||O=="text")?I(Q,P,U,O):H(Q,P,U,O);
var R=false;
for(var N=0;
N<V.length;
N++){if(V[N].items.size()>1){R=true;
}}if(R){D=true;
}for(var N=0;
N<V.length;
N++){var S=V[N];
if(S.items.size()>0){if(R&&E.grouped){B(S.display,O,P);
}Q.removeSet(S.items);
if(S.items.size()>1&&P<F.length-1){A(S.items,P+1);
}else{S.items.visit(G);
}}}if(Q.size()>0){if(R&&E.grouped){B(Exhibit.l10n.missingSortKey,O,P);
}if(Q.size()>1&&P<F.length-1){A(Q,P+1);
}else{Q.visit(G);
}}};
var I=function(Q,P,S,O){var U=[];
var T;
var V;
var M=F[P];
if(O=="item"){S.visit(function(X){var W=K.getObject(X,"label");
W=W!=null?W:X;
U.push({itemID:X,display:W});
});
T=function(X,W){var Y=X.display.localeCompare(W.display);
return Y!=0?Y:X.itemID.localeCompare(W.itemID);
};
V=M.forward?function(W){return K.getSubjects(W.itemID,M.property,null,Q);
}:function(W){return K.getObjects(W.itemID,M.property,null,Q);
};
}else{S.visit(function(W){U.push({display:W});
});
T=function(X,W){return X.display.localeCompare(W.display);
};
V=M.forward?function(W){return K.getSubjects(W.display,M.property,null,Q);
}:function(W){return K.getObjects(W.display,M.property,null,Q);
};
}U.sort(function(X,W){return(M.ascending?1:-1)*T(X,W);
});
for(var N=0;
N<U.length;
N++){var R=U[N];
R.items=V(R);
if(!E.showDuplicates){Q.removeSet(R.items);
}}return U;
};
var H=function(R,Q,U,P){var V=[];
var M={};
var N=F[Q];
var W;
if(P=="number"){W=function(X){if(typeof X=="number"){return X;
}else{try{return parseFloat(X);
}catch(Y){return null;
}}};
}else{W=function(X){if(X instanceof Date){return X.getTime();
}else{try{return SimileAjax.DateTime.parseIso8601DateTime(X.toString()).getTime();
}catch(Y){return null;
}}};
}U.visit(function(Z){var X=W(Z);
if(X!=null){var Y=M[X];
if(!Y){Y={sortkey:X,display:Z,values:[],items:new Exhibit.Set()};
M[X]=Y;
V.push(Y);
}Y.values.push(Z);
}});
V.sort(function(Y,X){return(N.ascending?1:-1)*(Y.sortkey-X.sortkey);
});
for(var O=0;
O<V.length;
O++){var T=V[O];
var U=T.values;
for(var S=0;
S<U.length;
S++){if(N.forward){K.getSubjects(U[S],N.property,T.items,R);
}else{K.getObjects(U[S],N.property,T.items,R);
}}if(!E.showDuplicates){R.removeSet(T.items);
}}return V;
};
A(J,0);
return D;
};
Exhibit.OrderedViewFrame.prototype._getOrders=function(){return this._orders||[this._getPossibleOrders()[0]];
};
Exhibit.OrderedViewFrame.prototype._getPossibleOrders=function(){var B=null;
if(this._possibleOrders==null){B=this._uiContext.getDatabase().getAllProperties();
for(var A=0,C;
C=B[A];
A++){B[A]={ascending:true,forward:true,property:C};
}}else{B=[].concat(this._possibleOrders);
}if(B.length==0){B.push({property:"label",forward:true,ascending:true});
}return B;
};
Exhibit.OrderedViewFrame.prototype._openSortPopup=function(F,C){var K=this;
var H=this._uiContext.getDatabase();
var R=Exhibit.UI.createPopupMenuDom(F);
var J=this._getOrders();
if(C>=0){var O=J[C];
var B=H.getProperty(O.property);
var S=O.forward?B.getPluralLabel():B.getReversePluralLabel();
var N=O.forward?B.getValueType():"item";
var D=Exhibit.Database.l10n.sortLabels[N];
D=(D!=null)?D:Exhibit.Database.l10n.sortLabels["text"];
R.appendMenuItem(D.ascending,Exhibit.urlPrefix+(O.ascending?"images/option-check.png":"images/option.png"),O.ascending?function(){}:function(){K._reSort(C,O.property,O.forward,true,false);
});
R.appendMenuItem(D.descending,Exhibit.urlPrefix+(O.ascending?"images/option.png":"images/option-check.png"),O.ascending?function(){K._reSort(C,O.property,O.forward,false,false);
}:function(){});
if(J.length>1){R.appendSeparator();
R.appendMenuItem(Exhibit.OrderedViewFrame.l10n.removeOrderLabel,null,function(){K._removeOrder(C);
});
}}var G=[];
var E=this._getPossibleOrders();
for(Q=0;
Q<E.length;
Q++){var A=E[Q];
var M=false;
for(var P=(C<0)?J.length-1:C;
P>=0;
P--){var L=J[P];
if(L.property==A.property&&L.forward==A.forward){M=true;
break;
}}if(!M){var B=H.getProperty(A.property);
G.push({property:A.property,forward:A.forward,ascending:A.ascending,label:A.forward?B.getPluralLabel():B.getReversePluralLabel()});
}}if(G.length>0){if(C>=0){R.appendSeparator();
}G.sort(function(T,U){return T.label.localeCompare(U.label);
});
var I=function(T){R.appendMenuItem(T.label,null,function(){K._reSort(C,T.property,T.forward,T.ascending,true);
});
};
for(var Q=0;
Q<G.length;
Q++){I(G[Q]);
}}R.open();
};
Exhibit.OrderedViewFrame.prototype._reSort=function(H,J,B,G,I){var D=this._getOrders();
H=(H<0)?D.length:H;
var A=D.slice(0,H);
A.push({property:J,forward:B,ascending:G});
if(!I){A=A.concat(D.slice(H+1));
}var K=this._uiContext.getDatabase().getProperty(J);
var F=B?K.getPluralLabel():K.getReversePluralLabel();
var E=B?K.getValueType():"item";
var C=Exhibit.Database.l10n.sortLabels[E];
C=(C!=null)?C:Exhibit.Database.l10n.sortLabels["text"];
var L=this;
SimileAjax.History.addLengthyAction(function(){L._orders=A;
L.parentReconstruct();
},function(){L._orders=D;
L.parentReconstruct();
},Exhibit.OrderedViewFrame.l10n.formatSortActionTitle(F,G?C.ascending:C.descending));
};
Exhibit.OrderedViewFrame.prototype._removeOrder=function(G){var D=this._getOrders();
var B=D.slice(0,G).concat(D.slice(G+1));
var A=D[G];
var H=this._uiContext.getDatabase().getProperty(A.property);
var F=A.forward?H.getPluralLabel():H.getReversePluralLabel();
var E=A.forward?H.getValueType():"item";
var C=Exhibit.Database.l10n.sortLabels[E];
C=(C!=null)?C:Exhibit.Database.l10n.sortLabels["text"];
var I=this;
SimileAjax.History.addLengthyAction(function(){I._orders=B;
I.parentReconstruct();
},function(){I._orders=D;
I.parentReconstruct();
},Exhibit.OrderedViewFrame.l10n.formatRemoveOrderActionTitle(F,A.ascending?C.ascending:C.descending));
};
Exhibit.OrderedViewFrame.prototype._setShowAll=function(B){var A=this;
var C=this._settings;
SimileAjax.History.addLengthyAction(function(){C.showAll=B;
A.parentReconstruct();
},function(){C.showAll=!B;
A.parentReconstruct();
},Exhibit.OrderedViewFrame.l10n[B?"showAllActionTitle":"dontShowAllActionTitle"]);
};
Exhibit.OrderedViewFrame.prototype._toggleGroup=function(){var C=this._settings;
var B=C.grouped;
var A=this;
SimileAjax.History.addLengthyAction(function(){C.grouped=!B;
A.parentReconstruct();
},function(){C.grouped=B;
A.parentReconstruct();
},Exhibit.OrderedViewFrame.l10n[B?"ungroupAsSortedActionTitle":"groupAsSortedActionTitle"]);
};
Exhibit.OrderedViewFrame.prototype._toggleShowDuplicates=function(){var C=this._settings;
var B=C.showDuplicates;
var A=this;
SimileAjax.History.addLengthyAction(function(){C.showDuplicates=!B;
A.parentReconstruct();
},function(){C.showDuplicates=B;
A.parentReconstruct();
},Exhibit.OrderedViewFrame.l10n[B?"hideDuplicatesActionTitle":"showDuplicatesActionTitle"]);
};
Exhibit.OrderedViewFrame.headerTemplate="<div id='collectionSummaryDiv' style='display: none;'></div><div class='exhibit-collectionView-header-sortControls' style='display: none;' id='controlsDiv'>%0<span class='exhibit-collectionView-header-groupControl'> \u2022 <a id='groupOption' class='exhibit-action'></a></span></div>";
Exhibit.OrderedViewFrame.createHeaderDom=function(E,A,C,F,D,B){var I=Exhibit.OrderedViewFrame.l10n;
var H=String.substitute(Exhibit.OrderedViewFrame.headerTemplate,[I.sortingControlsTemplate]);
var G=SimileAjax.DOM.createDOMFromString(A,H,{});
A.className="exhibit-collectionView-header";
if(C){G.collectionSummaryDiv.style.display="block";
G.collectionSummaryWidget=Exhibit.CollectionSummaryWidget.create({},G.collectionSummaryDiv,E);
}if(F){G.controlsDiv.style.display="block";
G.groupOptionWidget=Exhibit.OptionWidget.create({label:I.groupedAsSortedOptionLabel,onToggle:B},G.groupOption,E);
SimileAjax.WindowManager.registerEvent(G.thenSortByAction,"click",D);
G.enableThenByAction=function(J){Exhibit.UI.enableActionLink(G.thenSortByAction,J);
};
G.setOrders=function(L){G.ordersSpan.innerHTML="";
var K=Exhibit.Formatter.createListDelimiter(G.ordersSpan,L.length,E);
for(var J=0;
J<L.length;
J++){K();
G.ordersSpan.appendChild(L[J]);
}K();
};
}G.dispose=function(){if("collectionSummaryWidget" in G){G.collectionSummaryWidget.dispose();
G.collectionSummaryWidget=null;
}G.groupOptionWidget.dispose();
G.groupOptionWidget=null;
};
return G;
};
Exhibit.OrderedViewFrame.footerTemplate="<span id='showAllSpan'></span>";
Exhibit.OrderedViewFrame.createFooterDom=function(E,B,A,D){var C=Exhibit.OrderedViewFrame.l10n;
var F=SimileAjax.DOM.createDOMFromString(B,Exhibit.OrderedViewFrame.footerTemplate,{});
B.className="exhibit-collectionView-footer";
F.setCounts=function(I,G,H,J){F.showAllSpan.innerHTML="";
if(J&&I>G){if(H){F.showAllSpan.appendChild(Exhibit.UI.makeActionLink(C.formatDontShowAll(G),D));
}else{F.showAllSpan.appendChild(Exhibit.UI.makeActionLink(C.formatShowAll(I),A));
}}};
F.dispose=function(){};
return F;
};


/* tabular-view.js */
Exhibit.TabularView=function(C,B){this._div=C;
this._uiContext=B;
this._settings={rowStyler:null,tableStyler:null};
this._columns=[];
this._rowTemplate=null;
var A=this;
this._listener={onItemsChanged:function(){A._reconstruct();
}};
B.getCollection().addListener(this._listener);
};
Exhibit.TabularView._settingSpecs={"sortAscending":{type:"boolean",defaultValue:true},"sortColumn":{type:"int",defaultValue:0},"showSummary":{type:"boolean",defaultValue:true},"showToolbox":{type:"boolean",defaultValue:true},"border":{type:"int",defaultValue:1},"cellPadding":{type:"int",defaultValue:5},"cellSpacing":{type:"int",defaultValue:3}};
Exhibit.TabularView.create=function(D,C,B){var A=new Exhibit.TabularView(C,Exhibit.UIContext.create(D,B));
Exhibit.TabularView._configure(A,D);
A._internalValidate();
A._initializeUI();
return A;
};
Exhibit.TabularView.createFromDOM=function(configElmt,containerElmt,uiContext){var configuration=Exhibit.getConfigurationFromDOM(configElmt);
uiContext=Exhibit.UIContext.createFromDOM(configElmt,uiContext);
var view=new Exhibit.TabularView(containerElmt!=null?containerElmt:configElmt,uiContext);
Exhibit.SettingsUtilities.collectSettingsFromDOM(configElmt,Exhibit.TabularView._settingSpecs,view._settings);
try{var expressions=[];
var labels=Exhibit.getAttribute(configElmt,"columnLabels",",")||[];
var s=Exhibit.getAttribute(configElmt,"columns");
if(s!=null&&s.length>0){expressions=Exhibit.ExpressionParser.parseSeveral(s);
}for(var i=0;
i<expressions.length;
i++){var expression=expressions[i];
view._columns.push({expression:expression,uiContext:Exhibit.UIContext.create({},view._uiContext,true),styler:null,label:i<labels.length?labels[i]:null,format:"list"});
}var formats=Exhibit.getAttribute(configElmt,"columnFormats");
if(formats!=null&&formats.length>0){var index=0;
var startPosition=0;
while(index<view._columns.length&&startPosition<formats.length){var column=view._columns[index];
var o={};
column.format=Exhibit.FormatParser.parseSeveral(column.uiContext,formats,startPosition,o);
startPosition=o.index;
while(startPosition<formats.length&&" \t\r\n".indexOf(formats.charAt(startPosition))>=0){startPosition++;
}if(startPosition<formats.length&&formats.charAt(startPosition)==","){startPosition++;
}index++;
}}var tables=configElmt.getElementsByTagName("table");
if(tables.length>0&&tables[0].rows.length>0){view._rowTemplate=Exhibit.Lens.compileTemplate(tables[0].rows[0],false,uiContext);
}}catch(e){SimileAjax.Debug.exception(e,"TabularView: Error processing configuration of tabular view");
}var s=Exhibit.getAttribute(configElmt,"rowStyler");
if(s!=null&&s.length>0){var f=eval(s);
if(typeof f=="function"){view._settings.rowStyler=f;
}}s=Exhibit.getAttribute(configElmt,"tableStyler");
if(s!=null&&s.length>0){f=eval(s);
if(typeof f=="function"){view._settings.tableStyler=f;
}}Exhibit.TabularView._configure(view,configuration);
view._internalValidate();
view._initializeUI();
return view;
};
Exhibit.TabularView._configure=function(G,B){Exhibit.SettingsUtilities.collectSettings(B,Exhibit.TabularView._settingSpecs,G._settings);
if("columns" in B){var C=B.columns;
for(var E=0;
E<C.length;
E++){var D=C[E];
var I;
var F=null;
var H=null;
var J=null;
if(typeof D=="string"){I=D;
}else{I=D.expression;
F=D.styler;
H=D.label;
J=D.format;
}var A=Exhibit.ExpressionParser.parse(I);
if(A.isPath()){var K=A.getPath();
if(J!=null&&J.length>0){J=Exhibit.FormatParser.parse(G._uiContext,J,0);
}else{J="list";
}G._columns.push({expression:A,styler:F,label:H,format:J,uiContext:G._uiContext});
}}}if("rowStyler" in B){G._settings.rowStyler=B.rowStyler;
}if("tableStyler" in B){G._settings.tableStyler=B.tableStyler;
}};
Exhibit.TabularView.prototype._internalValidate=function(){if(this._columns.length==0){var B=this._uiContext.getDatabase();
var D=B.getAllProperties();
for(var A=0;
A<D.length;
A++){var C=D[A];
if(C!="uri"){this._columns.push({expression:Exhibit.ExpressionParser.parse("."+C),styler:null,label:B.getProperty(C).getLabel(),format:"list"});
}}}this._settings.sortColumn=Math.max(0,Math.min(this._settings.sortColumn,this._columns.length-1));
};
Exhibit.TabularView.prototype.dispose=function(){this._uiContext.getCollection().removeListener(this._listener);
if(this._toolboxWidget){this._toolboxWidget.dispose();
this._toolboxWidget=null;
}this._collectionSummaryWidget.dispose();
this._collectionSummaryWidget=null;
this._uiContext.dispose();
this._uiContext=null;
this._div.innerHTML="";
this._dom=null;
this._div=null;
};
Exhibit.TabularView.prototype._initializeUI=function(){var A=this;
this._div.innerHTML="";
this._dom=Exhibit.TabularView.createDom(this._div);
this._collectionSummaryWidget=Exhibit.CollectionSummaryWidget.create({},this._dom.collectionSummaryDiv,this._uiContext);
if(this._settings.showToolbox){this._toolboxWidget=Exhibit.ToolboxWidget.createFromDOM(this._div,this._div,this._uiContext);
this._toolboxWidget.getGeneratedHTML=function(){return A._dom.bodyDiv.innerHTML;
};
}if(!this._settings.showSummary){this._dom.collectionSummaryDiv.style.display="none";
}this._reconstruct();
};
Exhibit.TabularView.prototype._reconstruct=function(){var M=this;
var C=this._uiContext.getCollection();
var K=this._uiContext.getDatabase();
var B=this._dom.bodyDiv;
B.innerHTML="";
var H=[];
var F=C.countAllItems();
if(F>0){var A=C.getRestrictedItems();
A.visit(function(N){H.push({id:N,sortKey:""});
});
}if(H.length>0){var G=this._columns[this._settings.sortColumn];
H.sort(this._createSortFunction(H,G.expression,this._settings.sortAscending));
var L=document.createElement("table");
L.className="exhibit-tabularView-body";
if(this._settings.tableStyler!=null){this._settings.tableStyler(L,K);
}else{L.cellSpacing=this._settings.cellSpacing;
L.cellPadding=this._settings.cellPadding;
L.border=this._settings.border;
}var I=L.insertRow(0);
var J=function(O){var N=M._columns[O];
if(N.label==null){N.label=M._getColumnLabel(N.expression);
}var P=document.createElement("th");
Exhibit.TabularView.createColumnHeader(exhibit,P,N.label,O==M._settings.sortColumn,M._settings.sortAscending,function(R,Q,S){M._doSort(O);
SimileAjax.DOM.cancelEvent(Q);
return false;
});
I.appendChild(P);
};
for(var E=0;
E<this._columns.length;
E++){J(E);
}var D;
if(this._rowTemplate!=null){D=function(N){var O=H[N];
var P=Exhibit.Lens.constructFromLensTemplate(O.id,M._rowTemplate,L,M._uiContext);
if(M._settings.rowStyler!=null){M._settings.rowStyler(O.id,K,P,N);
}};
}else{D=function(P){var Q=H[P];
var R=L.insertRow(L.rows.length);
for(var U=0;
U<M._columns.length;
U++){var N=M._columns[U];
var T=R.insertCell(U);
var O=N.expression.evaluate({"value":Q.id},{"value":"item"},"value",K);
var S=N.format=="list"?O.valueType:N.format;
N.uiContext.formatList(O.values,O.size,S,function(V){T.appendChild(V);
});
if(N.styler!=null){N.styler(Q.id,K,T);
}}if(M._settings.rowStyler!=null){M._settings.rowStyler(Q.id,K,R,P);
}};
}for(var E=0;
E<H.length;
E++){D(E);
}B.appendChild(L);
}};
Exhibit.TabularView.prototype._getColumnLabel=function(E){var C=this._uiContext.getDatabase();
var D=E.getPath();
var B=D.getSegment(D.getSegmentCount()-1);
var F=B.property;
var A=C.getProperty(F);
if(A!=null){return B.forward?A.getLabel():A.getReverseLabel();
}else{return F;
}};
Exhibit.TabularView.prototype._createSortFunction=function(H,B,G){var L=this._uiContext.getDatabase();
var C=G?1:-1;
var O=function(Q,P){return C*(Q.sortKey-P.sortKey);
};
var N=function(Q,P){return C*Q.sortKey.localeCompare(P.sortKey);
};
var I=[];
var D={};
for(var F=0;
F<H.length;
F++){var M=H[F];
var A=B.evaluate({"value":M.id},{"value":"item"},"value",L);
A.values.visit(function(P){M.sortKey=P;
});
if(!(A.valueType in D)){D[A.valueType]=true;
I.push(A.valueType);
}}var E="text";
if(I.length==1){E=I[0];
}else{E="text";
}var J;
var K;
if(E=="number"){K=O;
J=function(P){if(P==null){return Number.NEGATIVE_INFINITY;
}else{if(typeof P=="number"){return P;
}else{var Q=parseFloat(P);
if(isNaN(Q)){return Number.NEGATIVE_INFINITY;
}else{return Q;
}}}};
}else{if(E=="date"){K=O;
J=function(P){if(P==null){return Number.NEGATIVE_INFINITY;
}else{if(P instanceof Date){return P.getTime();
}else{try{return SimileAjax.DateTime.parseIso8601DateTime(P).getTime();
}catch(Q){return Number.NEGATIVE_INFINITY;
}}}};
}else{if(E=="boolean"){K=O;
J=function(P){if(P==null){return Number.NEGATIVE_INFINITY;
}else{if(typeof P=="boolean"){return P?1:0;
}else{return P.toString().toLowerCase()=="true";
}}};
}else{if(E=="item"){K=N;
J=function(P){if(P==null){return Exhibit.l10n.missingSortKey;
}else{var Q=L.getObject(P,"label");
return(Q==null)?P:Q;
}};
}else{K=N;
J=function(P){if(P==null){return Exhibit.l10n.missingSortKey;
}else{return P.toString();
}};
}}}}for(var F=0;
F<H.length;
F++){var M=H[F];
M.sortKey=J(M.sortKey);
}return K;
};
Exhibit.TabularView.prototype._doSort=function(E){var B=this._settings.sortColumn;
var G=this._settings.sortAscending;
var D=E;
var A=B==D?!G:true;
var F=this._settings;
var C=this;
SimileAjax.History.addLengthyAction(function(){F.sortColumn=D;
F.sortAscending=A;
C._reconstruct();
},function(){F.sortColumn=B;
F.sortAscending=G;
C._reconstruct();
},Exhibit.TabularView.l10n.makeSortActionTitle(this._columns[E].label,A));
};
Exhibit.TabularView._constructDefaultValueList=function(B,C,D,A){A.formatList(B,B.size(),C,function(E){D.appendChild(E);
});
};
Exhibit.TabularView.createDom=function(C){var A=Exhibit.TabularView.l10n;
var B={elmt:C,className:"exhibit-collectionView-header",children:[{tag:"div",field:"collectionSummaryDiv"},{tag:"div",field:"bodyDiv"}]};
return SimileAjax.DOM.createDOMFromTemplate(B);
};
Exhibit.TabularView.createColumnHeader=function(F,A,E,D,B,H){var I=Exhibit.TabularView.l10n;
var G={elmt:A,className:D?"exhibit-tabularView-columnHeader-sorted":"exhibit-tabularView-columnHeader",title:D?I.columnHeaderReSortTooltip:I.columnHeaderSortTooltip,children:[E]};
if(D){G.children.push({elmt:Exhibit.UI.createTranslucentImage(B?"images/up-arrow.png":"images/down-arrow.png")});
}SimileAjax.WindowManager.registerEvent(A,"click",H,null);
var C=SimileAjax.DOM.createDOMFromTemplate(G);
return C;
};


/* thumbnail-view.js */
Exhibit.ThumbnailView=function(C,B){this._div=C;
this._uiContext=B;
this._settings={};
var A=this;
this._listener={onItemsChanged:function(){A._reconstruct();
}};
B.getCollection().addListener(this._listener);
this._orderedViewFrame=new Exhibit.OrderedViewFrame(B);
this._orderedViewFrame.parentReconstruct=function(){A._reconstruct();
};
};
Exhibit.ThumbnailView._settingSpecs={"showToolbox":{type:"boolean",defaultValue:true}};
Exhibit.ThumbnailView.create=function(D,C,B){var A=new Exhibit.ThumbnailView(C,Exhibit.UIContext.create(D,B,true));
A._lensRegistry=Exhibit.UIContext.createLensRegistry(D,B.getLensRegistry());
Exhibit.SettingsUtilities.collectSettings(D,Exhibit.ThumbnailView._settingSpecs,A._settings);
A._orderedViewFrame.configure(D);
A._initializeUI();
return A;
};
Exhibit.ThumbnailView.createFromDOM=function(D,C,B){var E=Exhibit.getConfigurationFromDOM(D);
var A=new Exhibit.ThumbnailView(C!=null?C:D,Exhibit.UIContext.createFromDOM(D,B,true));
A._lensRegistry=Exhibit.UIContext.createLensRegistryFromDOM(D,E,B.getLensRegistry());
Exhibit.SettingsUtilities.collectSettingsFromDOM(D,Exhibit.ThumbnailView._settingSpecs,A._settings);
Exhibit.SettingsUtilities.collectSettings(E,Exhibit.ThumbnailView._settingSpecs,A._settings);
A._orderedViewFrame.configureFromDOM(D);
A._orderedViewFrame.configure(E);
A._initializeUI();
return A;
};
Exhibit.ThumbnailView.prototype.dispose=function(){this._uiContext.getCollection().removeListener(this._listener);
if(this._toolboxWidget){this._toolboxWidget.dispose();
this._toolboxWidget=null;
}this._orderedViewFrame.dispose();
this._orderedViewFrame=null;
this._lensRegistry=null;
this._dom=null;
this._div.innerHTML="";
this._div=null;
this._uiContext=null;
};
Exhibit.ThumbnailView.prototype._initializeUI=function(){var B=this;
this._div.innerHTML="";
var A={elmt:this._div,children:[{tag:"div",field:"headerDiv"},{tag:"div",className:"exhibit-collectionView-body",field:"bodyDiv"},{tag:"div",field:"footerDiv"}]};
this._dom=SimileAjax.DOM.createDOMFromTemplate(A);
if(this._settings.showToolbox){this._toolboxWidget=Exhibit.ToolboxWidget.createFromDOM(this._div,this._div,this._uiContext);
this._toolboxWidget.getGeneratedHTML=function(){return B._dom.bodyDiv.innerHTML;
};
}this._orderedViewFrame._divHeader=this._dom.headerDiv;
this._orderedViewFrame._divFooter=this._dom.footerDiv;
this._orderedViewFrame._generatedContentElmtRetriever=function(){return B._dom.bodyDiv;
};
this._orderedViewFrame.initializeUI();
this._reconstruct();
};
Exhibit.ThumbnailView.prototype._reconstruct=function(){var A=this;
var B={div:this._dom.bodyDiv,itemContainer:null,groupDoms:[],groupCounts:[]};
var C=function(D){for(var E=D;
E<B.groupDoms.length;
E++){B.groupDoms[E].countSpan.innerHTML=B.groupCounts[E];
}B.groupDoms=B.groupDoms.slice(0,D);
B.groupCounts=B.groupCounts.slice(0,D);
if(D>0){B.div=B.groupDoms[D-1].contentDiv;
}else{B.div=A._dom.bodyDiv;
}B.itemContainer=null;
};
this._orderedViewFrame.onNewGroup=function(E,D,F){C(F);
var G=Exhibit.ThumbnailView.constructGroup(F,E);
B.div.appendChild(G.elmt);
B.div=G.contentDiv;
B.groupDoms.push(G);
B.groupCounts.push(0);
};
this._orderedViewFrame.onNewItem=function(H,D){if(B.itemContainer==null){B.itemContainer=Exhibit.ThumbnailView.constructItemContainer();
B.div.appendChild(B.itemContainer);
}for(var E=0;
E<B.groupCounts.length;
E++){B.groupCounts[E]++;
}var G=document.createElement("div");
G.className=SimileAjax.Platform.browser.isIE?"exhibit-thumbnailView-itemContainer-IE":"exhibit-thumbnailView-itemContainer";
var F=A._lensRegistry.createLens(H,G,A._uiContext);
B.itemContainer.appendChild(G);
};
this._div.style.display="none";
this._dom.bodyDiv.innerHTML="";
this._orderedViewFrame.reconstruct();
C(0);
this._div.style.display="block";
};
Exhibit.ThumbnailView.constructGroup=function(C,B){var D=Exhibit.ThumbnailView.l10n;
var A={tag:"div",className:"exhibit-thumbnailView-group",children:[{tag:"h"+(C+1),children:[B,{tag:"span",className:"exhibit-collectionView-group-count",children:[" (",{tag:"span",field:"countSpan"},")"]}],field:"header"},{tag:"div",className:"exhibit-collectionView-group-content",field:"contentDiv"}]};
return SimileAjax.DOM.createDOMFromTemplate(A);
};
Exhibit.ThumbnailView.constructItemContainer=function(){var A=document.createElement("div");
A.className="exhibit-thumbnailView-body";
return A;
};


/* tile-view.js */
Exhibit.TileView=function(C,B){this._div=C;
this._uiContext=B;
this._settings={};
var A=this;
this._listener={onItemsChanged:function(){A._reconstruct();
}};
B.getCollection().addListener(this._listener);
this._orderedViewFrame=new Exhibit.OrderedViewFrame(B);
this._orderedViewFrame.parentReconstruct=function(){A._reconstruct();
};
};
Exhibit.TileView._settingSpecs={"showToolbox":{type:"boolean",defaultValue:true}};
Exhibit.TileView.create=function(D,C,B){var A=new Exhibit.TileView(C,Exhibit.UIContext.create(D,B));
Exhibit.SettingsUtilities.collectSettings(D,Exhibit.TileView._settingSpecs,A._settings);
A._orderedViewFrame.configure(D);
A._initializeUI();
return A;
};
Exhibit.TileView.createFromDOM=function(D,C,B){var E=Exhibit.getConfigurationFromDOM(D);
var A=new Exhibit.TileView(C!=null?C:D,Exhibit.UIContext.createFromDOM(D,B));
Exhibit.SettingsUtilities.collectSettingsFromDOM(D,Exhibit.TileView._settingSpecs,A._settings);
Exhibit.SettingsUtilities.collectSettings(E,Exhibit.TileView._settingSpecs,A._settings);
A._orderedViewFrame.configureFromDOM(D);
A._orderedViewFrame.configure(E);
A._initializeUI();
return A;
};
Exhibit.TileView.prototype.dispose=function(){this._uiContext.getCollection().removeListener(this._listener);
this._div.innerHTML="";
if(this._toolboxWidget){this._toolboxWidget.dispose();
this._toolboxWidget=null;
}this._orderedViewFrame.dispose();
this._orderedViewFrame=null;
this._dom=null;
this._div=null;
this._uiContext=null;
};
Exhibit.TileView.prototype._initializeUI=function(){var B=this;
this._div.innerHTML="";
var A={elmt:this._div,children:[{tag:"div",field:"headerDiv"},{tag:"div",className:"exhibit-collectionView-body",field:"bodyDiv"},{tag:"div",field:"footerDiv"}]};
this._dom=SimileAjax.DOM.createDOMFromTemplate(A);
if(this._settings.showToolbox){this._toolboxWidget=Exhibit.ToolboxWidget.createFromDOM(this._div,this._div,this._uiContext);
this._toolboxWidget.getGeneratedHTML=function(){return B._dom.bodyDiv.innerHTML;
};
}this._orderedViewFrame._divHeader=this._dom.headerDiv;
this._orderedViewFrame._divFooter=this._dom.footerDiv;
this._orderedViewFrame._generatedContentElmtRetriever=function(){return B._dom.bodyDiv;
};
this._orderedViewFrame.initializeUI();
this._reconstruct();
};
Exhibit.TileView.prototype._reconstruct=function(){var A=this;
var B={div:this._dom.bodyDiv,contents:null,groupDoms:[],groupCounts:[]};
var C=function(D){for(var E=D;
E<B.groupDoms.length;
E++){B.groupDoms[E].countSpan.innerHTML=B.groupCounts[E];
}B.groupDoms=B.groupDoms.slice(0,D);
B.groupCounts=B.groupCounts.slice(0,D);
if(D>0){B.div=B.groupDoms[D-1].contentDiv;
}else{B.div=A._dom.bodyDiv;
}B.contents=null;
};
this._orderedViewFrame.onNewGroup=function(E,D,F){C(F);
var G=Exhibit.TileView.constructGroup(F,E);
B.div.appendChild(G.elmt);
B.div=G.contentDiv;
B.groupDoms.push(G);
B.groupCounts.push(0);
};
this._orderedViewFrame.onNewItem=function(H,D){if(B.contents==null){B.contents=Exhibit.TileView.constructList();
B.div.appendChild(B.contents);
}for(var E=0;
E<B.groupCounts.length;
E++){B.groupCounts[E]++;
}var G=document.createElement("li");
var F=A._uiContext.getLensRegistry().createLens(H,G,A._uiContext);
B.contents.appendChild(G);
};
this._div.style.display="none";
this._dom.bodyDiv.innerHTML="";
this._orderedViewFrame.reconstruct();
C(0);
this._div.style.display="block";
};
Exhibit.TileView.constructGroup=function(C,B){var A={tag:"div",className:"exhibit-collectionView-group",children:[{tag:"h"+(C+1),children:[B,{tag:"span",className:"exhibit-collectionView-group-count",children:[" (",{tag:"span",field:"countSpan"},")"]}],field:"header"},{tag:"div",className:"exhibit-collectionView-group-content",field:"contentDiv"}]};
return SimileAjax.DOM.createDOMFromTemplate(A);
};
Exhibit.TileView.constructList=function(){var A=document.createElement("ol");
A.className="exhibit-tileView-body";
return A;
};


/* view-panel.js */
Exhibit.ViewPanel=function(B,A){this._uiContext=A;
this._div=B;
this._viewConstructors=[];
this._viewConfigs=[];
this._viewLabels=[];
this._viewTooltips=[];
this._viewDomConfigs=[];
this._viewIDs=[];
this._viewIndex=0;
this._view=null;
};
Exhibit.ViewPanel.create=function(D,B,E){var F=new Exhibit.ViewPanel(B,E);
if("views" in D){for(var G=0;
G<D.views.length;
G++){var H=D.views[G];
var A=("viewClass" in view)?view.viewClass:Exhibit.TileView;
if(typeof A=="string"){A=Exhibit.UI.viewClassNameToViewClass(A);
}var J=null;
if("viewLabel" in H){J=H.viewLabel;
}else{if("label" in H){J=H.label;
}else{if("l10n" in A&&"viewLabel" in A.l10n){J=A.l10n.viewLabel;
}else{J=""+A;
}}}var I=null;
if("tooltip" in H){I=H.tooltip;
}else{if("l10n" in A&&"viewTooltip" in A.l10n){I=A.l10n.viewTooltip;
}else{I=J;
}}var C=F._generateViewID();
if("id" in H){C=H.id;
}F._viewConstructors.push(A);
F._viewConfigs.push(H);
F._viewLabels.push(J);
F._viewTooltips.push(I);
F._viewDomConfigs.push(null);
F._viewIDs.push(C);
}}if("initialView" in D){F._viewIndex=D.initialView;
}F._internalValidate();
F._initializeUI();
return F;
};
Exhibit.ViewPanel.createFromDOM=function(B,F){var G=new Exhibit.ViewPanel(B,Exhibit.UIContext.createFromDOM(B,F,false));
var E=B.firstChild;
while(E!=null){if(E.nodeType==1){E.style.display="none";
var H=Exhibit.getRoleAttribute(E);
if(H=="view"){var A=Exhibit.TileView;
var L=Exhibit.getAttribute(E,"viewClass");
if(L!=null&&L.length>0){A=Exhibit.UI.viewClassNameToViewClass(L);
if(A==null){SimileAjax.Debug.warn("Unknown viewClass "+L);
}}var J=Exhibit.getAttribute(E,"viewLabel");
var N=(J!=null&&J.length>0)?J:Exhibit.getAttribute(E,"label");
var M=Exhibit.getAttribute(E,"title");
var C=E.id;
if(N==null){if("viewLabel" in A.l10n){N=A.l10n.viewLabel;
}else{N=""+A;
}}if(M==null){if("l10n" in A&&"viewTooltip" in A.l10n){M=A.l10n.viewTooltip;
}else{M=N;
}}if(C==null||C.length==0){C=G._generateViewID();
}G._viewConstructors.push(A);
G._viewConfigs.push(null);
G._viewLabels.push(N);
G._viewTooltips.push(M);
G._viewDomConfigs.push(E);
G._viewIDs.push(C);
}}E=E.nextSibling;
}var K=Exhibit.getAttribute(B,"initialView");
if(K!=null&&K.length>0){try{var D=parseInt(K);
if(!isNaN(D)){G._viewIndex=D;
}}catch(I){}}G._internalValidate();
G._initializeUI();
return G;
};
Exhibit.ViewPanel.prototype.dispose=function(){if(this._view!=null){this._view.dispose();
this._view=null;
}this._div.innerHTML="";
this._uiContext.dispose();
this._uiContext=null;
this._div=null;
};
Exhibit.ViewPanel.prototype._generateViewID=function(){return"view"+Math.floor(Math.random()*1000000).toString();
};
Exhibit.ViewPanel.prototype._internalValidate=function(){if(this._viewConstructors.length==0){this._viewConstructors.push(Exhibit.TileView);
this._viewConfigs.push({});
this._viewLabels.push(Exhibit.TileView.l10n.viewLabel);
this._viewTooltips.push(Exhibit.TileView.l10n.viewTooltip);
this._viewDomConfigs.push(null);
this._viewIDs.push(this._generateViewID());
}this._viewIndex=Math.max(0,Math.min(this._viewIndex,this._viewConstructors.length-1));
};
Exhibit.ViewPanel.prototype._initializeUI=function(){var B=document.createElement("div");
if(this._div.firstChild!=null){this._div.insertBefore(B,this._div.firstChild);
}else{this._div.appendChild(B);
}var A=this;
this._dom=Exhibit.ViewPanel.constructDom(this._div.firstChild,this._viewLabels,this._viewTooltips,function(C){A._selectView(C);
});
this._createView();
};
Exhibit.ViewPanel.prototype._createView=function(){var C=this._dom.getViewContainer();
C.innerHTML="";
var A=document.createElement("div");
C.appendChild(A);
var B=this._viewIndex;
try{if(this._viewDomConfigs[B]!=null){this._view=this._viewConstructors[B].createFromDOM(this._viewDomConfigs[B],C,this._uiContext);
}else{this._view=this._viewConstructors[B].create(this._viewConfigs[B],C,this._uiContext);
}}catch(D){SimileAjax.Debug.log("Failed to create view "+this._viewLabels[B]);
}this._uiContext.getExhibit().setComponent(this._viewIDs[B],this._view);
this._dom.setViewIndex(B);
};
Exhibit.ViewPanel.prototype._switchView=function(A){if(this._view){this._uiContext.getExhibit().disposeComponent(this._viewIDs[this._viewIndex]);
this._view=null;
}this._viewIndex=A;
this._createView();
};
Exhibit.ViewPanel.prototype._selectView=function(B){var C=this._viewIndex;
var A=this;
SimileAjax.History.addLengthyAction(function(){A._switchView(B);
},function(){A._switchView(C);
},Exhibit.ViewPanel.l10n.createSelectViewActionTitle(A._viewLabels[B]));
};
Exhibit.ViewPanel.getPropertyValuesPairs=function(G,F,E){var D=[];
var A=function(N,J){var H=E.getProperty(N);
var K=J?E.getObjects(G,N):E.getSubjects(G,N);
var L=K.size();
if(L>0){var I=H.getValueType()=="item";
var M={propertyLabel:J?(L>1?H.getPluralLabel():H.getLabel()):(L>1?H.getReversePluralLabel():H.getReverseLabel()),valueType:H.getValueType(),values:[]};
if(I){K.visit(function(P){var O=E.getObject(P,"label");
M.values.push(O!=null?O:P);
});
}else{K.visit(function(O){M.values.push(O);
});
}D.push(M);
}};
for(var B=0;
B<F.length;
B++){var C=F[B];
if(typeof C=="string"){A(C,true);
}else{A(C.property,C.forward);
}}return D;
};
Exhibit.ViewPanel.constructDom=function(G,D,F,B){var C=Exhibit.ViewPanel.l10n;
var A={elmt:G,className:"exhibit-viewPanel exhibit-ui-protection",children:[{tag:"div",className:"exhibit-viewPanel-viewSelection",field:"viewSelectionDiv"},{tag:"div",className:"exhibit-viewPanel-viewContainer",field:"viewContainerDiv"}]};
var E=SimileAjax.DOM.createDOMFromTemplate(A);
E.getViewContainer=function(){return E.viewContainerDiv;
};
E.setViewIndex=function(H){if(D.length>1){E.viewSelectionDiv.innerHTML="";
var J=function(K){var N=(K==H);
if(K>0){E.viewSelectionDiv.appendChild(document.createTextNode(" \u2022 "));
}var M=document.createElement("span");
M.className=N?"exhibit-viewPanel-viewSelection-selectedView":"exhibit-viewPanel-viewSelection-view";
M.title=F[K];
M.innerHTML=D[K];
if(!N){var L=function(P,O,Q){B(K);
SimileAjax.DOM.cancelEvent(O);
return false;
};
SimileAjax.WindowManager.registerEvent(M,"click",L);
}E.viewSelectionDiv.appendChild(M);
};
for(var I=0;
I<D.length;
I++){J(I);
}}};
return E;
};


/* collection-summary-widget.js */
Exhibit.CollectionSummaryWidget=function(C,B){this._exhibit=B.getExhibit();
this._collection=B.getCollection();
this._uiContext=B;
this._div=C;
var A=this;
this._listener={onItemsChanged:function(){A._reconstruct();
}};
this._collection.addListener(this._listener);
};
Exhibit.CollectionSummaryWidget.create=function(D,C,B){var A=new Exhibit.CollectionSummaryWidget(C,Exhibit.UIContext.create(D,B));
A._initializeUI();
return A;
};
Exhibit.CollectionSummaryWidget.createFromDOM=function(D,C,B){var A=new Exhibit.CollectionSummaryWidget(C!=null?C:D,Exhibit.UIContext.createFromDOM(D,B));
A._initializeUI();
return A;
};
Exhibit.CollectionSummaryWidget.prototype.dispose=function(){this._collection.removeListener(this._listener);
this._div.innerHTML="";
this._noResultsDom=null;
this._allResultsDom=null;
this._filteredResultsDom=null;
this._div=null;
this._collection=null;
this._exhibit=null;
};
Exhibit.CollectionSummaryWidget.prototype._initializeUI=function(){var B=this;
var C=Exhibit.CollectionSummaryWidget.l10n;
var A=function(E,D,F){B._resetCollection();
SimileAjax.DOM.cancelEvent(D);
return false;
};
this._allResultsDom=SimileAjax.DOM.createDOMFromString("span",String.substitute(C.allResultsTemplate,["exhibit-collectionSummaryWidget-results"]));
this._filteredResultsDom=SimileAjax.DOM.createDOMFromString("span",String.substitute(C.filteredResultsTemplate,["exhibit-collectionSummaryWidget-results"]),{resetActionLink:Exhibit.UI.makeActionLink(C.resetFiltersLabel,A)});
this._noResultsDom=SimileAjax.DOM.createDOMFromString("span",String.substitute(C.noResultsTemplate,["exhibit-collectionSummaryWidget-results","exhibit-collectionSummaryWidget-count"]),{resetActionLink:Exhibit.UI.makeActionLink(C.resetFiltersLabel,A)});
this._div.innerHTML="";
this._reconstruct();
};
Exhibit.CollectionSummaryWidget.prototype._reconstruct=function(){var D=this._collection.countAllItems();
var B=this._collection.countRestrictedItems();
var E=this._uiContext.getDatabase();
var G=this._dom;
while(this._div.childNodes.length>0){this._div.removeChild(this._div.firstChild);
}if(D>0){if(B==0){this._div.appendChild(this._noResultsDom.elmt);
}else{var F=E.getTypeIDs(this._collection.getRestrictedItems()).toArray();
var C=F.length==1?F[0]:"Item";
var A=Exhibit.Database.l10n.labelItemsOfType(B,C,E,"exhibit-collectionSummaryWidget-count");
if(B==D){this._div.appendChild(this._allResultsDom.elmt);
this._allResultsDom.resultDescription.innerHTML="";
this._allResultsDom.resultDescription.appendChild(A);
}else{this._div.appendChild(this._filteredResultsDom.elmt);
this._filteredResultsDom.resultDescription.innerHTML="";
this._filteredResultsDom.resultDescription.appendChild(A);
this._filteredResultsDom.originalCountSpan.innerHTML=D;
}}}};
Exhibit.CollectionSummaryWidget.prototype._resetCollection=function(){var A={};
var B=this._collection;
SimileAjax.History.addLengthyAction(function(){A.restrictions=B.clearAllRestrictions();
},function(){B.applyRestrictions(A.restrictions);
},Exhibit.CollectionSummaryWidget.l10n.resetActionTitle);
};


/* legend-gradient-widget.js */
Exhibit.LegendGradientWidget=function(B,A){this._div=B;
this._uiContext=A;
this._initializeUI();
};
Exhibit.LegendGradientWidget.create=function(B,A){return new Exhibit.LegendGradientWidget(B,A);
};
Exhibit.LegendGradientWidget.prototype.addGradient=function(N){var A=[];
var A=N;
var Y=function(c,Z){return c.value-Z.value;
};
A.sort(Y);
var C=document.createElement("table");
var V=document.createElement("tbody");
var U=document.createElement("tr");
var W=document.createElement("tr");
var X=document.createElement("tr");
U.style.height="2em";
W.style.height="2em";
X.style.height="2em";
C.style.width="80%";
C.cellSpacing="0";
C.style.emptyCells="show";
C.style.marginLeft="auto";
C.style.marginRight="auto";
V.appendChild(U);
V.appendChild(W);
V.appendChild(X);
C.appendChild(V);
this._theRow1=U;
this._theRow2=W;
this._theRow3=X;
var I=A[0].value;
var S=A[A.length-1].value;
var F=(S-I)/50;
var L=0;
for(var R=0;
R<A.length-1;
R++){var D=A[R].value;
var P=A[R+1].value;
var T=document.createElement("td");
T.style.backgroundColor="rgb("+A[R].red+","+A[R].green+","+A[R].blue+")";
var B=document.createElement("td");
var O=document.createElement("div");
var E=document.createTextNode(A[R].value);
O.appendChild(E);
B.appendChild(O);
U.appendChild(document.createElement("td"));
W.appendChild(T);
X.appendChild(B);
T.onmouseover=function(){this.style.border="solid 1.2px";
};
T.onmouseout=function(){this.style.border="none";
};
L++;
for(var Q=D+F;
Q<P;
Q+=F){var H=(Q-D)/(P-D);
var J=Math.floor(A[R].red+H*(A[R+1].red-A[R].red));
var G=Math.floor(A[R].green+H*(A[R+1].green-A[R].green));
var M=Math.floor(A[R].blue+H*(A[R+1].blue-A[R].blue));
var T=document.createElement("td");
T.count=L;
T.style.backgroundColor="rgb("+J+","+G+","+M+")";
var B=document.createElement("td");
var O=document.createElement("div");
var E=document.createTextNode((Math.floor(Q*100))/100);
O.appendChild(E);
B.appendChild(O);
O.style.width="2px";
O.style.overflow="hidden";
O.style.visibility="hidden";
U.appendChild(B);
W.appendChild(T);
X.appendChild(document.createElement("td"));
L++;
T.onmouseover=function(){this.parentNode.parentNode.childNodes[0].childNodes[this.count].childNodes[0].style.visibility="visible";
this.parentNode.parentNode.childNodes[0].childNodes[this.count].childNodes[0].style.overflow="visible";
this.style.border="solid 1.2px";
};
T.onmouseout=function(){this.parentNode.parentNode.childNodes[0].childNodes[this.count].childNodes[0].style.visibility="hidden";
this.parentNode.parentNode.childNodes[0].childNodes[this.count].childNodes[0].style.overflow="hidden";
this.style.border="none";
};
}}var K=A.length-1;
var T=document.createElement("td");
T.style.backgroundColor="rgb("+A[K].red+","+A[K].green+","+A[K].blue+")";
var B=document.createElement("td");
var O=document.createElement("div");
var E=document.createTextNode(S);
O.appendChild(E);
B.appendChild(O);
U.appendChild(document.createElement("td"));
W.appendChild(T);
X.appendChild(B);
L++;
T.onmouseover=function(){this.style.border="solid 1.2px";
};
T.onmouseout=function(){this.style.border="none";
};
this._div.appendChild(C);
};
Exhibit.LegendGradientWidget.prototype.addEntry=function(B,C){var A=document.createElement("td");
A.style.width="1.5em";
A.style.height="2em";
this._theRow1.appendChild(A);
this._theRow1.appendChild(document.createElement("td"));
this._theRow2.appendChild(document.createElement("td"));
this._theRow3.appendChild(document.createElement("td"));
var D=document.createElement("td");
D.style.backgroundColor=B;
this._theRow2.appendChild(D);
var F=document.createElement("td");
var E=document.createElement("div");
E.appendChild(document.createTextNode(C));
F.appendChild(E);
this._theRow3.appendChild(F);
};
Exhibit.LegendGradientWidget.prototype.dispose=function(){this._div.innerHTML="";
this._div=null;
this._uiContext=null;
};
Exhibit.LegendGradientWidget.prototype._initializeUI=function(){this._div.className="exhibit-legendGradientWidget";
this._div.innerHTML="";
};
Exhibit.LegendGradientWidget.prototype.clear=function(){this._div.innerHTML="";
};


/* legend-widget.js */
Exhibit.LegendWidget=function(C,B,A){this._configuration=C;
this._div=B;
this._uiContext=A;
this._colorMarkerGenerator="colorMarkerGenerator" in C?C.colorMarkerGenerator:Exhibit.LegendWidget._defaultColorMarkerGenerator;
this._sizeMarkerGenerator="sizeMarkerGenerator" in C?C.sizeMarkerGenerator:Exhibit.LegendWidget._defaultSizeMarkerGenerator;
this._iconMarkerGenerator="iconMarkerGenerator" in C?C.iconMarkerGenerator:Exhibit.LegendWidget._defaultIconMarkerGenerator;
this._labelStyler="labelStyler" in C?C.labelStyler:Exhibit.LegendWidget._defaultColorLabelStyler;
this._initializeUI();
};
Exhibit.LegendWidget.create=function(C,B,A){return new Exhibit.LegendWidget(C,B,A);
};
Exhibit.LegendWidget.prototype.dispose=function(){this._div.innerHTML="";
this._div=null;
this._uiContext=null;
};
Exhibit.LegendWidget.prototype._initializeUI=function(){this._div.className="exhibit-legendWidget";
this._div.innerHTML="<div id='exhibit-color-legend'></div><div id='exhibit-size-legend'></div><div id='exhibit-icon-legend'></div>";
};
Exhibit.LegendWidget.prototype.clear=function(){this._div.innerHTML="<div id='exhibit-color-legend'></div><div id='exhibit-size-legend'></div><div id='exhibit-icon-legend'></div>";
};
Exhibit.LegendWidget.prototype.addLegendLabel=function(A,B){var C=SimileAjax.DOM.createDOMFromString("div","<div id='legend-label'><span id='label' class='exhibit-legendWidget-entry-title'>"+A.replace(/\s+/g,"\u00a0")+"</span>\u00a0\u00a0 </div>",{});
C.elmt.className="exhibit-legendWidget-label";
var D="exhibit-"+B+"-legend";
document.getElementById(D).appendChild(C.elmt);
};
Exhibit.LegendWidget.prototype.addEntry=function(D,B,C){C=C||"color";
B=(B!=null)?B.toString():key.toString();
if(C=="color"){var E=SimileAjax.DOM.createDOMFromString("span","<span id='marker'></span>\u00a0<span id='label' class='exhibit-legendWidget-entry-title'>"+B.replace(/\s+/g,"\u00a0")+"</span>\u00a0\u00a0 ",{marker:this._colorMarkerGenerator(D)});
var A=document.getElementById("exhibit-color-legend");
}if(C=="size"){var E=SimileAjax.DOM.createDOMFromString("span","<span id='marker'></span>\u00a0<span id='label' class='exhibit-legendWidget-entry-title'>"+B.replace(/\s+/g,"\u00a0")+"</span>\u00a0\u00a0 ",{marker:this._sizeMarkerGenerator(D)});
var A=document.getElementById("exhibit-size-legend");
}if(C=="icon"){var E=SimileAjax.DOM.createDOMFromString("span","<span id='marker'></span>\u00a0<span id='label' class='exhibit-legendWidget-entry-title'>"+B.replace(/\s+/g,"\u00a0")+"</span>\u00a0\u00a0 ",{marker:this._iconMarkerGenerator(D)});
var A=document.getElementById("exhibit-icon-legend");
}E.elmt.className="exhibit-legendWidget-entry";
this._labelStyler(E.label,D);
A.appendChild(E.elmt);
};
Exhibit.LegendWidget._localeSort=function(B,A){return B.localeCompare(A);
};
Exhibit.LegendWidget._defaultColorMarkerGenerator=function(B){var A=document.createElement("span");
A.className="exhibit-legendWidget-entry-swatch";
A.style.background=B;
A.innerHTML="\u00a0\u00a0";
return A;
};
Exhibit.LegendWidget._defaultSizeMarkerGenerator=function(B){var A=document.createElement("span");
A.className="exhibit-legendWidget-entry-swatch";
A.style.height=B;
A.style.width=B;
A.style.background="#C0C0C0";
A.innerHTML="\u00a0\u00a0";
return A;
};
Exhibit.LegendWidget._defaultIconMarkerGenerator=function(B){var A=document.createElement("span");
A.className="<img src="+B+"/>";
return A;
};
Exhibit.LegendWidget._defaultColorLabelStyler=function(A,B){};


/* logo.js */
Exhibit.Logo=function(A,B){this._exhibit=B;
this._elmt=A;
this._color="Silver";
};
Exhibit.Logo.create=function(D,A,B){var C=new Exhibit.Logo(A,B);
if("color" in D){this._color=D.color;
}Logo._initializeUI();
return C;
};
Exhibit.Logo.createFromDOM=function(B,C){var D=new Exhibit.Logo(B,C);
var A=Exhibit.getAttribute(B,"color");
if(A!=null&&A.length>0){D._color=A;
}D._initializeUI();
return D;
};
Exhibit.Logo.prototype.dispose=function(){this._elmt=null;
this._exhibit=null;
};
Exhibit.Logo.prototype._initializeUI=function(){var C="http://static.simile.mit.edu/graphics/logos/exhibit/exhibit-small-"+this._color+".png";
var B=SimileAjax.Graphics.createTranslucentImage(C);
var D="exhibit-logo-image";
if(!document.getElementById(D)){B.id=D;
}var A=document.createElement("a");
A.href="http://simile.mit.edu/exhibit/";
A.title="http://simile.mit.edu/exhibit/";
A.target="_blank";
A.appendChild(B);
this._elmt.appendChild(A);
};


/* option-widget.js */
Exhibit.OptionWidget=function(C,B,A){this._label=C.label;
this._checked="checked" in C?C.checked:false;
this._onToggle=C.onToggle;
this._containerElmt=B;
this._uiContext=A;
this._initializeUI();
};
Exhibit.OptionWidget.create=function(C,B,A){return new Exhibit.OptionWidget(C,B,A);
};
Exhibit.OptionWidget.prototype.dispose=function(){this._containerElmt.innerHTML="";
this._dom=null;
this._containerElmt=null;
this._uiContext=null;
};
Exhibit.OptionWidget.uncheckedImageURL=Exhibit.urlPrefix+"images/option.png";
Exhibit.OptionWidget.checkedImageURL=Exhibit.urlPrefix+"images/option-check.png";
Exhibit.OptionWidget.uncheckedTemplate="<span id='uncheckedSpan' style='display: none;'><img id='uncheckedImage' /> %0</span>";
Exhibit.OptionWidget.checkedTemplate="<span id='checkedSpan' style='display: none;'><img id='checkedImage' /> %0</span>";
Exhibit.OptionWidget.prototype._initializeUI=function(){this._containerElmt.className="exhibit-optionWidget";
this._dom=SimileAjax.DOM.createDOMFromString(this._containerElmt,String.substitute(Exhibit.OptionWidget.uncheckedTemplate+Exhibit.OptionWidget.checkedTemplate,[this._label]),{uncheckedImage:SimileAjax.Graphics.createTranslucentImage(Exhibit.OptionWidget.uncheckedImageURL),checkedImage:SimileAjax.Graphics.createTranslucentImage(Exhibit.OptionWidget.checkedImageURL)});
if(this._checked){this._dom.checkedSpan.style.display="inline";
}else{this._dom.uncheckedSpan.style.display="inline";
}SimileAjax.WindowManager.registerEvent(this._containerElmt,"click",this._onToggle);
};
Exhibit.OptionWidget.prototype.getChecked=function(){return this._checked;
};
Exhibit.OptionWidget.prototype.setChecked=function(A){if(A!=this._checked){this._checked=A;
if(A){this._dom.checkedSpan.style.display="inline";
this._dom.uncheckedSpan.style.display="none";
}else{this._dom.checkedSpan.style.display="none";
this._dom.uncheckedSpan.style.display="inline";
}}};
Exhibit.OptionWidget.prototype.toggle=function(){this.setChecked(!this._checked);
};


/* resizable-div-widget.js */
Exhibit.ResizableDivWidget=function(C,A,B){this._div=A;
this._configuration=C;
if(!("minHeight" in C)){C["minHeight"]=10;
}this._initializeUI();
};
Exhibit.ResizableDivWidget.create=function(C,A,B){return new Exhibit.ResizableDivWidget(C,A,B);
};
Exhibit.ResizableDivWidget.prototype.dispose=function(){this._div.innerHTML="";
this._contentDiv=null;
this._resizerDiv=null;
this._div=null;
};
Exhibit.ResizableDivWidget.prototype.getContentDiv=function(){return this._contentDiv;
};
Exhibit.ResizableDivWidget.prototype._initializeUI=function(){var A=this;
this._div.innerHTML="<div></div><div class='exhibit-resizableDivWidget-resizer'>"+SimileAjax.Graphics.createTranslucentImageHTML(Exhibit.urlPrefix+"images/down-arrow.png")+"</div>";
this._contentDiv=this._div.childNodes[0];
this._resizerDiv=this._div.childNodes[1];
SimileAjax.WindowManager.registerForDragging(this._resizerDiv,{onDragStart:function(){this._height=A._contentDiv.offsetHeight;
},onDragBy:function(C,B){this._height+=B;
A._contentDiv.style.height=Math.max(A._configuration.minHeight,this._height)+"px";
},onDragEnd:function(){if("onResize" in A._configuration){A._configuration["onResize"]();
}}});
};


/* toolbox-widget.js */
Exhibit.ToolboxWidget=function(B,A){this._containerElmt=B;
this._uiContext=A;
this._settings={};
this._customExporters=[];
this._hovering=false;
this._initializeUI();
};
Exhibit.ToolboxWidget._settingSpecs={"itemID":{type:"text"}};
Exhibit.ToolboxWidget.create=function(D,C,B){var A=new Exhibit.ToolboxWidget(C,Exhibit.UIContext.create(D,B));
Exhibit.ToolboxWidget._configure(A,D);
A._initializeUI();
return A;
};
Exhibit.ToolboxWidget.createFromDOM=function(D,C,B){var E=Exhibit.getConfigurationFromDOM(D);
var A=new Exhibit.ToolboxWidget(C!=null?C:D,Exhibit.UIContext.createFromDOM(D,B));
Exhibit.SettingsUtilities.collectSettingsFromDOM(D,Exhibit.ToolboxWidget._settingSpecs,A._settings);
Exhibit.ToolboxWidget._configure(A,E);
A._initializeUI();
return A;
};
Exhibit.ToolboxWidget._configure=function(A,B){Exhibit.SettingsUtilities.collectSettings(B,Exhibit.ToolboxWidget._settingSpecs,A._settings);
};
Exhibit.ToolboxWidget.prototype.dispose=function(){this._containerElmt.onmouseover=null;
this._containerElmt.onmouseout=null;
this._dismiss();
this._settings=null;
this._containerElmt=null;
this._uiContext=null;
};
Exhibit.ToolboxWidget.prototype.addExporter=function(A){this._customExporters.push(A);
};
Exhibit.ToolboxWidget.prototype._initializeUI=function(){var A=this;
this._containerElmt.onmouseover=function(B){A._onContainerMouseOver(B);
};
this._containerElmt.onmouseout=function(B){A._onContainerMouseOut(B);
};
};
Exhibit.ToolboxWidget.prototype._onContainerMouseOver=function(C){if(!this._hovering){var D=this;
var A=SimileAjax.DOM.getPageCoordinates(this._containerElmt);
var E=document.body.offsetWidth;
var F=document.body.offsetHeight;
var B=document.createElement("div");
B.className="exhibit-toolboxWidget-popup screen";
B.style.top=A.top+"px";
B.style.right=(E-A.left-this._containerElmt.offsetWidth)+"px";
this._fillPopup(B);
document.body.appendChild(B);
B.onmouseover=function(G){D._onPopupMouseOver(G);
};
B.onmouseout=function(G){D._onPopupMouseOut(G);
};
this._popup=B;
this._hovering=true;
}else{this._clearTimeout();
}};
Exhibit.ToolboxWidget.prototype._onContainerMouseOut=function(A){if(Exhibit.ToolboxWidget._mouseOutsideElmt(Exhibit.ToolboxWidget._getEvent(A),this._containerElmt)){this._setTimeout();
}};
Exhibit.ToolboxWidget.prototype._onPopupMouseOver=function(A){this._clearTimeout();
};
Exhibit.ToolboxWidget.prototype._onPopupMouseOut=function(A){if(Exhibit.ToolboxWidget._mouseOutsideElmt(Exhibit.ToolboxWidget._getEvent(A),this._containerElmt)){this._setTimeout();
}};
Exhibit.ToolboxWidget.prototype._setTimeout=function(){var A=this;
this._timer=window.setTimeout(function(){A._onTimeout();
},200);
};
Exhibit.ToolboxWidget.prototype._clearTimeout=function(){if(this._timer){window.clearTimeout(this._timer);
this._timer=null;
}};
Exhibit.ToolboxWidget.prototype._onTimeout=function(){this._dismiss();
this._hovering=false;
this._timer=null;
};
Exhibit.ToolboxWidget.prototype._fillPopup=function(B){var A=this;
var C=Exhibit.UI.createTranslucentImage("images/liveclipboard-icon.png");
C.className="exhibit-toolboxWidget-button";
SimileAjax.WindowManager.registerEvent(C,"click",function(E,D,F){A._showExportMenu(C);
});
B.appendChild(C);
};
Exhibit.ToolboxWidget.prototype._dismiss=function(){if(this._popup){document.body.removeChild(this._popup);
this._popup=null;
}};
Exhibit.ToolboxWidget._mouseOutsideElmt=function(B,D){var C=SimileAjax.DOM.getEventPageCoordinates(B);
var A=SimileAjax.DOM.getPageCoordinates(D);
return((C.x<A.left||C.x>A.left+D.offsetWidth)||(C.y<A.top||C.y>A.top+D.offsetHeight));
};
Exhibit.ToolboxWidget._getEvent=function(A){return(A)?A:((event)?event:null);
};
Exhibit.ToolboxWidget.prototype._showExportMenu=function(C){var A=this;
var E=Exhibit.UI.createPopupMenuDom(C);
var D=function(G){E.appendMenuItem(G.getLabel(),null,function(){var H=A._uiContext.getDatabase();
var I=("itemID" in A._settings)?G.exportOne(A._settings.itemID,H):G.exportMany(A._uiContext.getCollection().getRestrictedItems(),H);
Exhibit.ToolboxWidget.createExportDialogBox(I).open();
});
};
var F=Exhibit.getExporters();
for(var B=0;
B<F.length;
B++){D(F[B]);
}for(var B=0;
B<this._customExporters.length;
B++){D(this._customExporters[B]);
}if("getGeneratedHTML" in this){D({getLabel:function(){return Exhibit.l10n.htmlExporterLabel;
},exportOne:this.getGeneratedHTML,exportMany:this.getGeneratedHTML});
}E.open();
};
Exhibit.ToolboxWidget.createExportDialogBox=function(B){var A={tag:"div",className:"exhibit-copyDialog exhibit-ui-protection",children:[{tag:"button",field:"closeButton",children:[Exhibit.l10n.exportDialogBoxCloseButtonLabel]},{tag:"p",children:[Exhibit.l10n.exportDialogBoxPrompt]},{tag:"div",field:"textAreaContainer"}]};
var C=SimileAjax.DOM.createDOMFromTemplate(A);
C.textAreaContainer.innerHTML="<textarea wrap='off' rows='15'>"+B+"</textarea>";
C.close=function(){document.body.removeChild(C.elmt);
};
C.open=function(){C.elmt.style.top=(document.body.scrollTop+100)+"px";
document.body.appendChild(C.elmt);
C.layer=SimileAjax.WindowManager.pushLayer(function(){C.close();
},false);
var D=C.textAreaContainer.firstChild;
D.select();
SimileAjax.WindowManager.registerEvent(C.closeButton,"click",function(F,E,G){SimileAjax.WindowManager.popLayer(C.layer);
},C.layer);
SimileAjax.WindowManager.registerEvent(D,"keyup",function(F,E,G){if(E.keyCode==27){SimileAjax.WindowManager.popLayer(C.layer);
}},C.layer);
};
return C;
};


/* coders.js */
Exhibit.Coders=new Object();
Exhibit.Coders.mixedCaseColor="#fff";
Exhibit.Coders.othersCaseColor="#aaa";
Exhibit.Coders.missingCaseColor="#888";


/* facets.js */
Exhibit.FacetUtilities=new Object();
Exhibit.FacetUtilities.constructFacetFrame=function(H,E,D,C,A,G){H.className="exhibit-facet";
var F=SimileAjax.DOM.createDOMFromString(H,"<div class='exhibit-facet-header'><div class='exhibit-facet-header-filterControl' id='clearSelectionsDiv' title='"+Exhibit.FacetUtilities.l10n.clearSelectionsTooltip+"'><span id='filterCountSpan'></span><img id='checkImage' /></div>"+((A)?"<img src='"+Exhibit.urlPrefix+"images/collapse.png' class='exhibit-facet-header-collapse' id='collapseImg' />":"")+"<span class='exhibit-facet-header-title'>"+E+"</span></div><div class='exhibit-facet-body-frame' id='frameDiv'></div>",{checkImage:Exhibit.UI.createTranslucentImage("images/black-check.png")});
var B=Exhibit.ResizableDivWidget.create({},F.frameDiv,C);
F.valuesContainer=B.getContentDiv();
F.valuesContainer.className="exhibit-facet-body";
F.setSelectionCount=function(I){this.filterCountSpan.innerHTML=I;
this.clearSelectionsDiv.style.display=I>0?"block":"none";
};
SimileAjax.WindowManager.registerEvent(F.clearSelectionsDiv,"click",D);
if(A){SimileAjax.WindowManager.registerEvent(F.collapseImg,"click",function(){Exhibit.FacetUtilities.toggleCollapse(F);
});
if(G){Exhibit.FacetUtilities.toggleCollapse(F);
}}return F;
};
Exhibit.FacetUtilities.toggleCollapse=function(B){var A=B.frameDiv;
if(A.style.display!="none"){A.style.display="none";
B.collapseImg.src=Exhibit.urlPrefix+"images/expand.png";
}else{A.style.display="block";
B.collapseImg.src=Exhibit.urlPrefix+"images/collapse.png";
}};
Exhibit.FacetUtilities.isCollapsed=function(B){var A=B._dom.frameDiv;
return A.style.display=="none";
};
Exhibit.FacetUtilities.constructFacetItem=function(H,F,A,E,I,G,B,C){if(Exhibit.params.safe){H=Exhibit.Formatter.encodeAngleBrackets(H);
}var D=SimileAjax.DOM.createDOMFromString("div","<div class='exhibit-facet-value-count'>"+F+"</div><div class='exhibit-facet-value-inner' id='inner'>"+("<div class='exhibit-facet-value-checkbox'>&#160;"+SimileAjax.Graphics.createTranslucentImageHTML(Exhibit.urlPrefix+(I?(E?"images/black-check.png":"images/no-check.png"):"images/no-check-no-border.png"))+"</div>")+"<a class='exhibit-facet-value-link' href='javascript:{}' id='link'></a></div>");
D.elmt.className=E?"exhibit-facet-value exhibit-facet-value-selected":"exhibit-facet-value";
if(typeof H=="string"){D.elmt.title=H;
D.link.innerHTML=H;
if(A!=null){D.link.style.color=A;
}}else{D.link.appendChild(H);
if(A!=null){H.style.color=A;
}}SimileAjax.WindowManager.registerEvent(D.elmt,"click",B,SimileAjax.WindowManager.getBaseLayer());
if(I){SimileAjax.WindowManager.registerEvent(D.inner.firstChild,"click",G,SimileAjax.WindowManager.getBaseLayer());
}return D.elmt;
};
Exhibit.FacetUtilities.constructFlowingFacetFrame=function(G,D,C,B,A,F){G.className="exhibit-flowingFacet";
var E=SimileAjax.DOM.createDOMFromString(G,"<div class='exhibit-flowingFacet-header'>"+((A)?"<img src='"+Exhibit.urlPrefix+"images/collapse.png' class='exhibit-facet-header-collapse' id='collapseImg' />":"")+"<span class='exhibit-flowingFacet-header-title'>"+D+"</span></div><div id='frameDiv'><div class='exhibit-flowingFacet-body' id='valuesContainer'></div></div>");
E.setSelectionCount=function(H){};
if(A){SimileAjax.WindowManager.registerEvent(E.collapseImg,"click",function(){Exhibit.FacetUtilities.toggleCollapse(E);
});
if(F){Exhibit.FacetUtilities.toggleCollapse(E);
}}return E;
};
Exhibit.FacetUtilities.constructFlowingFacetItem=function(H,F,A,E,I,G,B,C){if(Exhibit.params.safe){H=Exhibit.Formatter.encodeAngleBrackets(H);
}var D=SimileAjax.DOM.createDOMFromString("div",("<div class='exhibit-flowingFacet-value-checkbox'>"+SimileAjax.Graphics.createTranslucentImageHTML(Exhibit.urlPrefix+(I?(E?"images/black-check.png":"images/no-check.png"):"images/no-check-no-border.png"))+"</div>")+"<a class='exhibit-flowingFacet-value-link' href='javascript:{}' id='inner'></a> <span class='exhibit-flowingFacet-value-count'>("+F+")</span>");
D.elmt.className=E?"exhibit-flowingFacet-value exhibit-flowingFacet-value-selected":"exhibit-flowingFacet-value";
if(typeof H=="string"){D.elmt.title=H;
D.inner.innerHTML=H;
if(A!=null){D.inner.style.color=A;
}}else{D.inner.appendChild(H);
if(A!=null){H.style.color=A;
}}SimileAjax.WindowManager.registerEvent(D.elmt,"click",B,SimileAjax.WindowManager.getBaseLayer());
if(I){SimileAjax.WindowManager.registerEvent(D.elmt.firstChild,"click",G,SimileAjax.WindowManager.getBaseLayer());
}return D.elmt;
};
Exhibit.FacetUtilities.constructHierarchicalFacetItem=function(J,H,D,F,G,A,K,I,C,L,B){if(Exhibit.params.safe){J=Exhibit.Formatter.encodeAngleBrackets(J);
}var E=SimileAjax.DOM.createDOMFromString("div","<div class='exhibit-facet-value-count'>"+H+"</div><div class='exhibit-facet-value-inner' id='inner'>"+("<div class='exhibit-facet-value-checkbox'>&#160;"+SimileAjax.Graphics.createTranslucentImageHTML(Exhibit.urlPrefix+(K?(F?"images/black-check.png":"images/no-check.png"):"images/no-check-no-border.png"))+"</div>")+"<a class='exhibit-facet-value-link' href='javascript:{}' id='link'></a>"+(G?("<a class='exhibit-facet-value-children-toggle' href='javascript:{}' id='toggle'>"+SimileAjax.Graphics.createTranslucentImageHTML(Exhibit.urlPrefix+"images/down-arrow.png")+SimileAjax.Graphics.createTranslucentImageHTML(Exhibit.urlPrefix+"images/right-arrow.png")+"</a>"):"")+"</div>"+(G?"<div class='exhibit-facet-childrenContainer' id='childrenContainer'></div>":""));
E.elmt.className=F?"exhibit-facet-value exhibit-facet-value-selected":"exhibit-facet-value";
if(typeof J=="string"){E.elmt.title=J;
E.link.appendChild(document.createTextNode(J));
if(D!=null){E.link.style.color=D;
}}else{E.link.appendChild(J);
if(D!=null){J.style.color=D;
}}SimileAjax.WindowManager.registerEvent(E.elmt,"click",C,SimileAjax.WindowManager.getBaseLayer());
if(K){SimileAjax.WindowManager.registerEvent(E.inner.firstChild,"click",I,SimileAjax.WindowManager.getBaseLayer());
}if(G){E.showChildren=function(M){E.childrenContainer.style.display=M?"block":"none";
E.toggle.childNodes[0].style.display=M?"inline":"none";
E.toggle.childNodes[1].style.display=M?"none":"inline";
};
SimileAjax.WindowManager.registerEvent(E.toggle,"click",L,SimileAjax.WindowManager.getBaseLayer());
E.showChildren(A);
}return E;
};
Exhibit.FacetUtilities.constructFlowingHierarchicalFacetItem=function(J,H,D,F,G,A,K,I,C,L,B){if(Exhibit.params.safe){J=Exhibit.Formatter.encodeAngleBrackets(J);
}var E=SimileAjax.DOM.createDOMFromString("div",("<div class='exhibit-flowingFacet-value-checkbox'>"+SimileAjax.Graphics.createTranslucentImageHTML(Exhibit.urlPrefix+(K?(F?"images/black-check.png":"images/no-check.png"):"images/no-check-no-border.png"))+"</div>")+"<a class='exhibit-flowingFacet-value-link' href='javascript:{}' id='inner'></a> <span class='exhibit-flowingFacet-value-count'>("+H+")</span>"+(G?("<a class='exhibit-flowingFacet-value-children-toggle' href='javascript:{}' id='toggle'>"+SimileAjax.Graphics.createTranslucentImageHTML(Exhibit.urlPrefix+"images/down-arrow.png")+SimileAjax.Graphics.createTranslucentImageHTML(Exhibit.urlPrefix+"images/right-arrow.png")+"</a>"):"")+(G?"<div class='exhibit-flowingFacet-childrenContainer' id='childrenContainer'></div>":""));
E.elmt.className=F?"exhibit-flowingFacet-value exhibit-flowingFacet-value-selected":"exhibit-flowingFacet-value";
if(typeof J=="string"){E.elmt.title=J;
E.inner.appendChild(document.createTextNode(J));
if(D!=null){E.inner.style.color=D;
}}else{E.inner.appendChild(J);
if(D!=null){J.style.color=D;
}}SimileAjax.WindowManager.registerEvent(E.elmt,"click",C,SimileAjax.WindowManager.getBaseLayer());
if(K){SimileAjax.WindowManager.registerEvent(E.elmt.firstChild,"click",I,SimileAjax.WindowManager.getBaseLayer());
}if(G){E.showChildren=function(M){E.childrenContainer.style.display=M?"block":"none";
E.toggle.childNodes[0].style.display=M?"inline":"none";
E.toggle.childNodes[1].style.display=M?"none":"inline";
};
SimileAjax.WindowManager.registerEvent(E.toggle,"click",L,SimileAjax.WindowManager.getBaseLayer());
E.showChildren(A);
}return E;
};
Exhibit.FacetUtilities.Cache=function(B,D,C){var A=this;
this._database=B;
this._collection=D;
this._expression=C;
this._listener={onRootItemsChanged:function(){if("_itemToValue" in A){delete A._itemToValue;
}if("_valueToItem" in A){delete A._valueToItem;
}if("_missingItems" in A){delete A._missingItems;
}}};
D.addListener(this._listener);
};
Exhibit.FacetUtilities.Cache.prototype.dispose=function(){this._collection.removeListener(this._listener);
this._collection=null;
this._listener=null;
this._itemToValue=null;
this._valueToItem=null;
this._missingItems=null;
};
Exhibit.FacetUtilities.Cache.prototype.getItemsFromValues=function(C,B){var D;
if(this._expression.isPath()){D=this._expression.getPath().walkBackward(C,"item",B,this._database).getSet();
}else{this._buildMaps();
D=new Exhibit.Set();
var A=this._valueToItem;
C.visit(function(G){if(G in A){var H=A[G];
for(var E=0;
E<H.length;
E++){var F=H[E];
if(B.contains(F)){D.add(F);
}}}});
}return D;
};
Exhibit.FacetUtilities.Cache.prototype.getItemsMissingValue=function(A,B){this._buildMaps();
B=B||new Exhibit.Set();
var C=this._missingItems;
A.visit(function(D){if(D in C){B.add(D);
}});
return B;
};
Exhibit.FacetUtilities.Cache.prototype.getValueCountsFromItems=function(F){var A=[];
var I=this._database;
var B="text";
if(this._expression.isPath()){var J=this._expression.getPath();
var C=J.walkForward(F,"item",I);
B=C.valueType;
if(C.size>0){C.forEachValue(function(L){var K=J.evaluateBackward(L,B,F,I);
A.push({value:L,count:K.size});
});
}}else{this._buildMaps();
B=this._valueType;
for(var G in this._valueToItem){var H=this._valueToItem[G];
var E=0;
for(var D=0;
D<H.length;
D++){if(F.contains(H[D])){E++;
}}if(E>0){A.push({value:G,count:E});
}}}return{entries:A,valueType:B};
};
Exhibit.FacetUtilities.Cache.prototype.getValuesFromItems=function(A){if(this._expression.isPath()){return this._expression.getPath().walkForward(A,"item",database).getSet();
}else{this._buildMaps();
var C=new Exhibit.Set();
var B=this._itemToValue;
A.visit(function(F){if(F in B){var D=B[F];
for(var E=0;
E<D.length;
E++){C.add(D[E]);
}}});
return C;
}};
Exhibit.FacetUtilities.Cache.prototype.countItemsMissingValue=function(A){this._buildMaps();
var C=0;
for(var B in this._missingItems){if(A.contains(B)){C++;
}}return C;
};
Exhibit.FacetUtilities.Cache.prototype._buildMaps=function(){if(!("_itemToValue" in this)){var C={};
var B={};
var D={};
var F="text";
var A=function(H,J,I){if(H in I){I[H].push(J);
}else{I[H]=[J];
}};
var G=this._expression;
var E=this._database;
this._collection.getAllItems().visit(function(I){var H=G.evaluateOnItem(I,E);
if(H.values.size()>0){F=H.valueType;
H.values.visit(function(J){A(I,J,C);
A(J,I,B);
});
}else{D[I]=true;
}});
this._itemToValue=C;
this._valueToItem=B;
this._missingItems=D;
this._valueType=F;
}};


/* ordered-dictionary.js */
Exhibit.OrderedDictionary=function(){this._values={};
this._keyOrder=[];
};
Exhibit.OrderedDictionary.prototype.size=function(){return this._keyOrder.length;
};
Exhibit.OrderedDictionary.prototype.put=function(A,B){if(!A||!B){throw new TypeError();
}if(!this._values[A]){this._keyOrder.push(A);
}this._values[A]=B;
};
Exhibit.OrderedDictionary.prototype.has=function(A){return A in this._values;
};
Exhibit.OrderedDictionary.prototype.get=function(A){return this._values[A];
};
Exhibit.OrderedDictionary.prototype.rekey=function(A,D){var B=this._keyOrder.indexOf(A);
if(B==-1){throw new Error("Cannot find key "+A);
}this._keyOrder[B]=D;
var C=this._values[A];
delete this._values[A];
this._values[D]=C;
};
Exhibit.OrderedDictionary.prototype.values=function(){return this._keyOrder.map(this.get,this);
};
Exhibit.OrderedDictionary.prototype.remove=function(A){function B(D){return function(E){return E!=D;
};
}var C=this.get(A);
if(C){delete this._values[A];
this._keyOrder=this._keyOrder.filter(B(A));
return C;
}};
Exhibit.OrderedDictionary.test=function(){function A(E,D){if(E!=D){throw new Error("expected "+D+", is "+E);
}}var C=new Exhibit.OrderedDictionary();
A(C.get("test"));
A(C.size(),0);
A(C.values().length,0);
C.put("foo","bar");
C.put("foo","baz");
A(C.get("foo"),"baz");
var B=C.values();
A(C.size(),1);
A(B.length,1);
A(B[0],"baz");
C.remove("foo");
B=C.values();
A(B.length,0);
C.rekey("foo","new key");
A(C.get("foo"),"new key");
};


/* set.js */
Exhibit.Set=function(A){this._hash={};
this._count=0;
if(A instanceof Array){for(var B=0;
B<A.length;
B++){this.add(A[B]);
}}else{if(A instanceof Exhibit.Set){this.addSet(A);
}}};
Exhibit.Set.prototype.add=function(A){if(!(A in this._hash)){this._hash[A]=true;
this._count++;
return true;
}return false;
};
Exhibit.Set.prototype.addSet=function(B){for(var A in B._hash){this.add(A);
}};
Exhibit.Set.prototype.remove=function(A){if(A in this._hash){delete this._hash[A];
this._count--;
return true;
}return false;
};
Exhibit.Set.prototype.removeSet=function(B){for(var A in B._hash){this.remove(A);
}};
Exhibit.Set.prototype.retainSet=function(B){for(var A in this._hash){if(!B.contains(A)){delete this._hash[A];
this._count--;
}}};
Exhibit.Set.prototype.contains=function(A){return(A in this._hash);
};
Exhibit.Set.prototype.size=function(){return this._count;
};
Exhibit.Set.prototype.toArray=function(){var A=[];
for(var B in this._hash){A.push(B);
}return A;
};
Exhibit.Set.prototype.visit=function(A){for(var B in this._hash){if(A(B)==true){break;
}}};
Exhibit.Set.createIntersection=function(C,B,D){var F=(D)?D:new Exhibit.Set();
var A,E;
if(C.size()<B.size()){A=C;
E=B;
}else{A=B;
E=C;
}A.visit(function(G){if(E.contains(G)){F.add(G);
}});
return F;
};


/* settings.js */
Exhibit.SettingsUtilities=new Object();
Exhibit.SettingsUtilities.collectSettings=function(A,C,B){Exhibit.SettingsUtilities._internalCollectSettings(function(D){return A[D];
},C,B);
};
Exhibit.SettingsUtilities.collectSettingsFromDOM=function(B,C,A){Exhibit.SettingsUtilities._internalCollectSettings(function(D){return Exhibit.getAttribute(B,D);
},C,A);
};
Exhibit.SettingsUtilities._internalCollectSettings=function(G,D,C){for(var K in D){var M=D[K];
var B=K;
if("name" in M){B=M.name;
}if(!(B in C)&&"defaultValue" in M){C[B]=M.defaultValue;
}var L=G(K);
if(L==null){continue;
}if(typeof L=="string"){L=L.trim();
if(L.length==0){continue;
}}var I="text";
if("type" in M){I=M.type;
}var A=1;
if("dimensions" in M){A=M.dimensions;
}try{if(A>1){var F=",";
if("separator" in M){F=M.separator;
}var J=L.split(F);
if(J.length!=A){throw new Error("Expected a tuple of "+A+" dimensions separated with "+F+" but got "+L);
}else{for(var E=0;
E<J.length;
E++){J[E]=Exhibit.SettingsUtilities._parseSetting(J[E].trim(),I,M);
}C[B]=J;
}}else{C[B]=Exhibit.SettingsUtilities._parseSetting(L,I,M);
}}catch(H){SimileAjax.Debug.exception(H);
}}};
Exhibit.SettingsUtilities._parseSetting=function(s,type,spec){var sType=typeof s;
if(type=="text"){return s;
}else{if(type=="float"){if(sType=="number"){return s;
}else{if(sType=="string"){var f=parseFloat(s);
if(!isNaN(f)){return f;
}}}throw new Error("Expected a floating point number but got "+s);
}else{if(type=="int"){if(sType=="number"){return Math.round(s);
}else{if(sType=="string"){var n=parseInt(s);
if(!isNaN(n)){return n;
}}}throw new Error("Expected an integer but got "+s);
}else{if(type=="boolean"){if(sType=="boolean"){return s;
}else{if(sType=="string"){s=s.toLowerCase();
if(s=="true"){return true;
}else{if(s=="false"){return false;
}}}}throw new Error("Expected either 'true' or 'false' but got "+s);
}else{if(type=="function"){if(sType=="function"){return s;
}else{if(sType=="string"){try{var f=eval(s);
if(typeof f=="function"){return f;
}}catch(e){}}}throw new Error("Expected a function or the name of a function but got "+s);
}else{if(type=="enum"){var choices=spec.choices;
for(var i=0;
i<choices.length;
i++){if(choices[i]==s){return s;
}}throw new Error("Expected one of "+choices.join(", ")+" but got "+s);
}else{throw new Error("Unknown setting type "+type);
}}}}}}};
Exhibit.SettingsUtilities.createAccessors=function(B,C,A){Exhibit.SettingsUtilities._internalCreateAccessors(function(D){return B[D];
},C,A);
};
Exhibit.SettingsUtilities.createAccessorsFromDOM=function(B,C,A){Exhibit.SettingsUtilities._internalCreateAccessors(function(D){return Exhibit.getAttribute(B,D);
},C,A);
};
Exhibit.SettingsUtilities._internalCreateAccessors=function(F,D,B){for(var I in D){var K=D[I];
var A=K.accessorName;
var C=null;
var H=false;
var J=function(L){H=false;
if("bindings" in L){return Exhibit.SettingsUtilities._createBindingsAccessor(F,L.bindings);
}else{if("bindingNames" in L){H=true;
return Exhibit.SettingsUtilities._createTupleAccessor(F,L);
}else{return Exhibit.SettingsUtilities._createElementalAccessor(F,L);
}}};
if("alternatives" in K){var G=K.alternatives;
for(var E=0;
E<G.length;
E++){C=J(G[E]);
if(C!=null){break;
}}}else{C=J(K);
}if(C!=null){B[A]=C;
}else{if(!(A in B)){B[A]=function(N,M,L){};
}}}};
Exhibit.SettingsUtilities._createBindingsAccessor=function(F,D){var G=[];
for(var C=0;
C<D.length;
C++){var B=D[C];
var E=null;
var A=false;
if("bindingNames" in B){A=true;
E=Exhibit.SettingsUtilities._createTupleAccessor(F,B);
}else{E=Exhibit.SettingsUtilities._createElementalAccessor(F,B);
}if(E==null){if(!("optional" in B)||!B.optional){return null;
}}else{G.push({bindingName:B.bindingName,accessor:E,isTuple:A});
}}return function(J,I,H){Exhibit.SettingsUtilities._evaluateBindings(J,I,H,G);
};
};
Exhibit.SettingsUtilities._createTupleAccessor=function(F,J){var H=F(J.attributeName);
if(H==null){return null;
}if(typeof H=="string"){H=H.trim();
if(H.length==0){return null;
}}try{var A=Exhibit.ExpressionParser.parse(H);
var I=[];
var C=J.types;
for(var D=0;
D<C.length;
D++){I.push(Exhibit.SettingsUtilities._typeToParser(C[D]));
}var B=J.bindingNames;
var E=",";
if("separator" in J){E=J.separator;
}return function(N,M,L,K){A.evaluateOnItem(N,M).values.visit(function(P){var O=P.split(E);
if(O.length==I.length){var Q={};
if(K){for(var S in K){Q[S]=K[S];
}}for(var R=0;
R<B.length;
R++){Q[B[R]]=null;
I[R](O[R],function(T){Q[B[R]]=T;
});
}L(Q);
}});
};
}catch(G){SimileAjax.Debug.exception(G);
return null;
}};
Exhibit.SettingsUtilities._createElementalAccessor=function(D,B){var C=D(B.attributeName);
if(C==null){return null;
}if(typeof C=="string"){C=C.trim();
if(C.length==0){return null;
}}var A="text";
if("type" in B){A=B.type;
}try{var G=Exhibit.ExpressionParser.parse(C);
var F=Exhibit.SettingsUtilities._typeToParser(A);
return function(J,I,H){G.evaluateOnItem(J,I).values.visit(function(K){return F(K,H);
});
};
}catch(E){SimileAjax.Debug.exception(E);
return null;
}};
Exhibit.SettingsUtilities._typeToParser=function(A){switch(A){case"text":return Exhibit.SettingsUtilities._textParser;
case"url":return Exhibit.SettingsUtilities._urlParser;
case"float":return Exhibit.SettingsUtilities._floatParser;
case"int":return Exhibit.SettingsUtilities._intParser;
case"date":return Exhibit.SettingsUtilities._dateParser;
case"boolean":return Exhibit.SettingsUtilities._booleanParser;
default:throw new Error("Unknown setting type "+A);
}};
Exhibit.SettingsUtilities._textParser=function(A,B){return B(A);
};
Exhibit.SettingsUtilities._floatParser=function(A,B){var C=parseFloat(A);
if(!isNaN(C)){return B(C);
}return false;
};
Exhibit.SettingsUtilities._intParser=function(A,B){var C=parseInt(A);
if(!isNaN(C)){return B(C);
}return false;
};
Exhibit.SettingsUtilities._dateParser=function(A,B){if(A instanceof Date){return B(A);
}else{if(typeof A=="number"){var C=new Date(0);
C.setUTCFullYear(A);
return B(C);
}else{var C=SimileAjax.DateTime.parseIso8601DateTime(A.toString());
if(C!=null){return B(C);
}}}return false;
};
Exhibit.SettingsUtilities._booleanParser=function(A,B){A=A.toString().toLowerCase();
if(A=="true"){return B(true);
}else{if(A=="false"){return B(false);
}}return false;
};
Exhibit.SettingsUtilities._urlParser=function(A,B){return B(Exhibit.Persistence.resolveURL(A.toString()));
};
Exhibit.SettingsUtilities._evaluateBindings=function(E,D,C,F){var A=F.length-1;
var B=function(G,J){var L=F[J];
var H=false;
var K=J==A?function(){C(G);
}:function(){B(G,J+1);
};
if(L.isTuple){L.accessor(E,D,function(M){H=true;
G=M;
K();
},G);
}else{var I=L.bindingName;
L.accessor(E,D,function(M){H=true;
G[I]=M;
K();
});
}if(!H){K();
}};
B({},0);
};


/* util.js */
Exhibit.Util={};
Exhibit.Util.augment=function(D,A){if(D==null){D={};
}for(var C=1;
C<arguments.length;
C++){var E=arguments[C];
if(typeof (E)!="undefined"&&E!=null){for(var B in E){if(E.hasOwnProperty(B)){D[B]=E[B];
}}}}return D;
};
Exhibit.Util.round=function(D,B){B=B||1;
var A=Math.floor(Math.log(B)/Math.log(10));
D=(Math.round(D/B)*B).toString();
var C=D.split(".");
if(A>=0){return C[0];
}A=-A;
C[1]=(C[1]||"").substring(0,A);
while(C[1].length<A){C[1]+="0";
}return C.join(".");
};
if(!Array.prototype.indexOf){Array.prototype.indexOf=function(B){var A=this.length;
var C=Number(arguments[1])||0;
C=(C<0)?Math.ceil(C):Math.floor(C);
if(C<0){C+=A;
}for(;
C<A;
C++){if(C in this&&this[C]===B){return C;
}}return -1;
};
}if(!Array.prototype.filter){Array.prototype.filter=function(B){var A=this.length;
if(typeof B!="function"){throw new TypeError();
}var E=new Array();
var D=arguments[1];
for(var C=0;
C<A;
C++){if(C in this){var F=this[C];
if(B.call(D,F,C,this)){E.push(F);
}}}return E;
};
}if(!Array.prototype.map){Array.prototype.map=function(E,D){if(typeof E!="function"){throw new TypeError();
}if(typeof D=="undefined"){D=this;
}var C=[],A=this.length;
for(var B=0;
B<A;
B++){if(this.hasOwnProperty(B)){C[B]=E.call(D,this[B],B,this);
}}return C;
};
}if(!Array.prototype.forEach){Array.prototype.forEach=function(B){var A=this.length;
if(typeof B!="function"){throw new TypeError();
}var D=arguments[1];
for(var C=0;
C<A;
C++){if(C in this){B.call(D,this[C],C,this);
}}};
}

/* views.js */
Exhibit.ViewUtilities=new Object();
Exhibit.ViewUtilities.openBubbleForItems=function(E,B,C){var A=SimileAjax.DOM.getPageCoordinates(E);
var D=SimileAjax.Graphics.createBubbleForPoint(A.left+Math.round(E.offsetWidth/2),A.top+Math.round(E.offsetHeight/2),C.getSetting("bubbleWidth"),C.getSetting("bubbleHeight"));
Exhibit.ViewUtilities.fillBubbleWithItems(D.content,B,C);
};
Exhibit.ViewUtilities.fillBubbleWithItems=function(E,A,D){if(E==null){E=document.createElement("div");
}if(A.length>1){E.className=[E.className,"exhibit-views-bubbleWithItems"].join(" ");
var C=document.createElement("ul");
for(var B=0;
B<A.length;
B++){D.format(A[B],"item",function(I){var H=document.createElement("li");
H.appendChild(I);
C.appendChild(H);
});
}E.appendChild(C);
}else{var G=document.createElement("div");
var F=D.getLensRegistry().createLens(A[0],G,D);
E.appendChild(G);
}return E;
};
Exhibit.ViewUtilities.constructPlottingViewDom=function(F,C,A,B,D){var E=SimileAjax.DOM.createDOMFromString(F,"<div class='exhibit-views-header'>"+(A?"<div id='collectionSummaryDiv'></div>":"")+"<div id='unplottableMessageDiv' class='exhibit-views-unplottableMessage'></div></div><div id='resizableDiv'></div><div id='legendDiv'></div>",{});
if(A){E.collectionSummaryWidget=Exhibit.CollectionSummaryWidget.create({},E.collectionSummaryDiv,C);
}E.resizableDivWidget=Exhibit.ResizableDivWidget.create(B,E.resizableDiv,C);
E.plotContainer=E.resizableDivWidget.getContentDiv();
if(D.colorGradient==true){E.legendGradientWidget=Exhibit.LegendGradientWidget.create(E.legendDiv,C);
}else{E.legendWidget=Exhibit.LegendWidget.create(D,E.legendDiv,C);
}E.setUnplottableMessage=function(G,H){Exhibit.ViewUtilities._setUnplottableMessage(E,G,H,C);
};
E.dispose=function(){if(A){E.collectionSummaryWidget.dispose();
}E.resizableDivWidget.dispose();
E.legendWidget.dispose();
};
return E;
};
Exhibit.ViewUtilities._setUnplottableMessage=function(D,B,C,A){var E=D.unplottableMessageDiv;
if(C.length==0){E.style.display="none";
}else{E.innerHTML="";
var D=SimileAjax.DOM.createDOMFromString(E,Exhibit.ViewUtilities.l10n.unplottableMessageFormatter(B,C,A),{});
SimileAjax.WindowManager.registerEvent(D.unplottableCountLink,"click",function(G,F,H){Exhibit.ViewUtilities.openBubbleForItems(G,C,A);
});
E.style.display="block";
}};
